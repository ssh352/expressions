







explain
select 1 from 
sipro_data_store.si_ci ci,
sipro_data_store.si_psd psd 
where 
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  25;



select distinct exchange from sipro_data_store.si_ci ci;

where exchange in ('N','M','A');


explain
select 1 from sipro_data_store.si_ci ci where exchange in ('N','M','A');

                                           QUERY PLAN
-------------------------------------------------------------------------------------------------
 Index Only Scan using si_ci_exchange_idx on si_ci ci  (cost=0.42..13377.87 rows=351119 width=0)
   Index Cond: (exchange = ANY ('{N,M,A}'::text[]))
(2 rows)


create index si_ci_exchange_nma_idx on sipro_data_store.si_ci(exchange) where exchange in ('N','M','A');



explain
select 1 from sipro_data_store.si_ci ci where exchange in ('N','M','A');



  -- index: sipro_data_store.si_ci_exchange_idx

  -- drop index sipro_data_store.si_ci_exchange_idx;

  create index si_ci_exchange_idx
    on sipro_data_store.si_ci
    using btree
    (exchange collate pg_catalog.default);



-- Index: sipro_data_store.si_ci_exchange_nma_idx

-- DROP INDEX sipro_data_store.si_ci_exchange_nma_idx;

CREATE INDEX si_ci_exchange_nma_idx
  ON sipro_data_store.si_ci
  (exchange)
  where exchange in ('N','M','A');





select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_psd psd 
where 
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200;

 count
--------
 195845
(1 row)



select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_psd psd 
where 
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  25;

 count
--------
 267308
(1 row)

select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_psd psd 
where 
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200;

 count
--------
 195845
(1 row)

select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_psd psd,
sipro_data_store.si_returns retu
where 
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;

 count
--------
 195845
(1 row)
-- TOOK A LITTLE BIT OF TIME

-- cost: 199700.82
explain
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_psd psd,
sipro_data_store.si_returns retu
where 
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;


select distinct mg_code, mg_desc from sipro_data_store.si_mgdsc order by 1;
select distinct mg_code, mg_desc from sipro_data_store.si_mgdsc order by 2;


-- NOTE: mg_desc IS NOT UNIQUE
 03      | Conglomerates
 0303    | Conglomerates

select distinct ind_2_dig from sipro_data_store.si_ci order by 1;

select distinct ind_3_dig from sipro_data_store.si_ci order by 1;


select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_returns retu
where 
ci.sp = '500' and 
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;

 count
-------
 33918
(1 row)
-- VERY FAST


explain
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_returns retu
where 
ci.sp = '500' and 
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;


--CURIOUS
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_returns retu
where 
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
 count
--------
 195844 ( just loss of one record )
(1 row)
-- SOME TIME

-- cost: 204032 ( VERY TINY BIT MORE TIME )
explain
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_returns retu
where 
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;


-- iShares, Vanguard, SPDR, and PowerShares TEND TO 'NOT HAVE 13,26,25' as a RESULT OF THIS QUERY

select ci.company, retu.w13_pradchg_13w_ann, retu.w26_pradchg_26w_ann, retu.w52_pradchg_52w_ann from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_returns retu
where 
ci.dateindex = 15705 and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;


-- JUST AVG RETURNS
select avg(retu.w13_pradchg_13w_ann), avg(retu.w26_pradchg_26w_ann), avg(retu.w52_pradchg_52w_ann) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_returns retu
where 
ci.dateindex = 15705 and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;




select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
  sipro_data_store.si_bsq bsq,
sipro_data_store.si_returns retu
where 
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
  ci.dateindex      = bsq.dateindex and
  ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
 count
--------
 195844
(1 row)
-- PRO GREATER THAN 60 SECONDS


explain
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
  sipro_data_store.si_bsq bsq,
sipro_data_store.si_returns retu
where 
-- ci.dateindex = 15705 and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
  ci.dateindex      = bsq.dateindex and
  ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;





select ci.company, retu.w13_pradchg_13w_ann, retu.w26_pradchg_26w_ann, retu.w52_pradchg_52w_ann from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_returns retu
where 
ci.dateindex = 15705 and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;


-- 15705 ( 0.25 sec )  COST  43000
-- all   ( 7 minutes ) COST 306000  -- NO CFQ, NO ISQ
explain
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
  sipro_data_store.si_bsq bsq,
sipro_data_store.si_returns retu
where 
-- ci.dateindex = 15705 and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;


explain
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
--sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_returns retu
where 
-- ci.dateindex = 15705 and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
--ci.dateindex      = psd.dateindex and
--ci.company_id_unq = psd.company_id_unq and
--psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
-- 27 seconds


explain
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_returns retu
where 
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
-- ci.dateindex = 15705 and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
-- TOO MUCH TIME

set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;



explain
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
ci.dateindex = 15705 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
  ci.dateindex      = isq.dateindex and
  ci.company_id_unq = isq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
-- 2 seconds



set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;



explain
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
  sipro_data_store.si_cfq isq,
sipro_data_store.si_returns retu
where 
--ci.dateindex = 15705 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
  ci.dateindex      = isq.dateindex and
  ci.company_id_unq = isq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
-- SOULD HAVE NOT BEEN GR THAN 120 seconds ( BUT ACTUALLY BEYOND 3 MINTUES )

-- NEW DATE - WORSE ( OVER TWO MINUTES )

select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
ci.dateindex = 16860 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;

-- 4 MINUTES/7 SEC/1.8 SEC


select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
ci.dateindex = 16829 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
--10 SECONDS

select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
ci.dateindex = 16800 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
--11 SECONDS


select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
ci.dateindex = 16800 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
--11 SECONDS


-- HOW MUCH TIME TO CREATE A 'SUPER TABLE'
--   WOULD HAVE TO RENAME JOIN COLUMNS, THEN JOIN BY 
select ci.*, bsq.*
ci.ci_dateindex      = bsq.bsq_dateindex and
ci.ci_company_id_unq = bsq.bsq_company_id_unq 
--  

select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
--ci.dateindex = 16800 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;
-- IN PROGRESS





set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;



select ci.company, retu.w13_pradchg_13w_ann, retu.w26_pradchg_26w_ann, retu.w52_pradchg_52w_ann 

from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_returns retu
psd
where 
ci.dateindex = 15705 and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;


-- JUST ONE AND *EVERYTHING*
-- 7:43 ONLY JUST   ci.dateindex = 16800
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
ci.dateindex = 16800 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;






-- JUST ONE AND *EVERYTHING*
-- 3.5/3.6 SECONDS -- ONLY JUST (= 16800) WHEREVER POSSIBLE
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
ci.dateindex = 16800 and
mgdsc.dateindex = 16800 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
psd.dateindex = 16800 and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
  psd.mktcap::numeric(15,2) >=  200 and
bsq.dateindex  = 16800 and 
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
cfq.dateindex = 16800 and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
isq.dateindex = 16800 and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
retu.now_dateindex = 16800 and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;



-- 195,000 ROWS
-- 37 MINUTES ( EVERYTHING ) . . . -> NEXT TIME: BUT I WOULD NOT LIMIT: psd.mktcap::numeric(15,2) >=  200
select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
--ci.dateindex = 16800 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;


# "new_interested_Date: 2014-07-31 16282" ( STARTED TO *TANK* BADLY )
# massAAIISIProIterScreenOSME(conn, asOfDate = zoo::as.Date("2016-06-15"))

-- HOW DO I DO A quantile?




set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;



select count(1) from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
ci.dateindex = 16800 and
mgdsc.dateindex = 16800 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
psd.dateindex = 16800 and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
  psd.mktcap::numeric(15,2) >=  200 and
bsq.dateindex  = 16800 and 
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
cfq.dateindex = 16800 and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
isq.dateindex = 16800 and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
retu.now_dateindex = 16800 and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;


--#  "new_interested_Date: 2014-07-31 16282" ( STARTED TO *TANK* BADLY )
--# massAAIISIProIterScreenOSME(conn, asOfDate = zoo::as.Date("2016-06-15"))

-- HIGH PRICE MOMENTUM HAD A *TERRIBLE FUTURE PERFORMANCE* (SO WHEN THINGS START GOING BAD *PRICE MOMENTUM STARTS GETTING HIT THE WORST)
select ci.company, 
psd.prchg_26w::numeric(15,2),
         case when                                     psd.prchg_26w::numeric(15,2) is not null  and ci.adr = 'f' and ci.exchange in ('N','M','A') and psd.mktcap::numeric(15,2) >=  200 
         then       percent_rank() over (partition by  psd.prchg_26w::numeric(15,2) is not null  and ci.adr = 'f' and ci.exchange in ('N','M','A') and psd.mktcap::numeric(15,2) >=  200  order by psd.prchg_26w::numeric(15,2) desc) * 100.00 
         else null end  prchg_26w_pctrk_nadr_nma_200,
retu.w13_pradchg_13w_ann, retu.w26_pradchg_26w_ann, retu.w52_pradchg_52w_ann 
from 
sipro_data_store.si_ci ci,
sipro_data_store.si_mgdsc mgdsc,
sipro_data_store.si_psd psd,
sipro_data_store.si_bsq bsq,
sipro_data_store.si_cfq cfq,
sipro_data_store.si_isq isq,
sipro_data_store.si_returns retu
where 
ci.dateindex = 16282 and
mgdsc.dateindex = 16282 and
ci.dateindex      = mgdsc.dateindex and
ci.ind_3_dig      = mgdsc.mg_code and
ci.adr = 'f' and 
ci.exchange in ('N','M','A') and
psd.dateindex = 16282 and
ci.dateindex      = psd.dateindex and
ci.company_id_unq = psd.company_id_unq and
psd.mktcap::numeric(15,2) >=  200 and
bsq.dateindex  = 16282 and 
ci.dateindex      = bsq.dateindex and
ci.company_id_unq = bsq.company_id_unq and
cfq.dateindex = 16282 and
ci.dateindex      = cfq.dateindex and
ci.company_id_unq = cfq.company_id_unq and
isq.dateindex = 16282 and
ci.dateindex      = isq.dateindex and
ci.company_id_unq = isq.company_id_unq and
retu.now_dateindex = 16282 and
ci.dateindex      = retu.now_dateindex and
ci.company_id_unq = retu.now_company_id_unq;

-- NEXT * : OTHER PATRICK,
            OTHER FSCORE, 
            27 MINUTES: ONE BIG MAIN TABLE?
            CAPITAL EXPENDITURES OVER PRICE


-- SATURDAY MORNING !! - DO NOT FORGET THE OTHER STUFF ON NOTEPAD ( WRITTEN IN BLUE INK )

-- -- 


-- table XXX

-- before


alter table sipro_data_store.si_XXX rename column "row.names" to "row.names_XXX" ;



-- put back

alter table sipro_data_store.si_XXX rename column "row.names_XXX" to "row.names" ;






---------------------------------------------------------------
----------------- BEGIN: SATURDAY; JULY 23, 2016 --------------




-- RENAME COLUMNS BEFORE THE 'BIG QUERY' 0.5

-- working for
--
-- ONLY ticker
-- ci
--
--
-------------
-- table XXX

-- before

alter table sipro_data_store.si_XXX rename column "row.names" to "row.names_XXX";
alter table sipro_data_store.si_XXX rename column dateindex   to dateindex_XXX;
alter table sipro_data_store.si_XXX rename column company_id  to company_id_XXX;

-- ONLY ci
alter table sipro_data_store.si_XXX rename column ticker  to ticker_XXX;

alter table sipro_data_store.si_XXX rename column company_id_unq      to company_id_unq_XXX;
alter table sipro_data_store.si_XXX rename column ticker_unq          to ticker_unq_XXX;
alter table sipro_data_store.si_XXX rename column dateindexeom        to dateindexeom_XXX;
alter table sipro_data_store.si_XXX rename column company_id_unq_orig to company_id_unq_orig_XXX;

-- put back

alter table sipro_data_store.si_XXX rename column "row.names_XXX" to "row.names";
alter table sipro_data_store.si_XXX rename column dateindex_XXX   to dateindex;
alter table sipro_data_store.si_XXX rename column company_id_XXX  to company_id;

-- ONLY ci
alter table sipro_data_store.si_XXX rename ticker_XXX column to ticker;

alter table sipro_data_store.si_XXX rename column company_id_unq_XXX      to company_id_unq;
alter table sipro_data_store.si_XXX rename column ticker_unq_XXX          to ticker_unq;
alter table sipro_data_store.si_XXX rename column dateindexeom_XXX        to dateindexeom;



--------------------------



-- RENAME COLUMNS BEFORE THE 'BIG QUERY' 1

-- working for
--
-- bsq isq cfq
--
-- mlt rat
-- psdc psdd date psd
--
--
--
-------------
-- table XXX

-- before

alter table sipro_data_store.si_XXX rename column "row.names" to "row.names_XXX";
alter table sipro_data_store.si_XXX rename column dateindex   to dateindex_XXX;
alter table sipro_data_store.si_XXX rename column company_id  to company_id_XXX;

alter table sipro_data_store.si_XXX rename column company_id_unq      to company_id_unq_XXX;
alter table sipro_data_store.si_XXX rename column ticker_unq          to ticker_unq_XXX;
alter table sipro_data_store.si_XXX rename column dateindexeom        to dateindexeom_XXX;
alter table sipro_data_store.si_XXX rename column company_id_unq_orig to company_id_unq_orig_XXX;

-- put back

alter table sipro_data_store.si_XXX rename column "row.names_XXX" to "row.names";
alter table sipro_data_store.si_XXX rename column dateindex_XXX   to dateindex;
alter table sipro_data_store.si_XXX rename column company_id_XXX  to company_id;

alter table sipro_data_store.si_XXX rename column company_id_unq_XXX      to company_id_unq;
alter table sipro_data_store.si_XXX rename column ticker_unq_XXX          to ticker_unq;
alter table sipro_data_store.si_XXX rename column dateindexeom_XXX        to dateindexeom;


----------






---------




-- RENAME COLUMNS BEFORE THE 'BIG QUERY' 2

-- working for
--
-- retdate -- nothing to do - *intermediate table*
--


-- RENAME COLUMNS BEFORE THE 'BIG QUERY' 3

-- working for
--
-- returns -- nothing to do - uses retdate_ and now_
--



-- RENAME COLUMNS BEFORE THE 'BIG QUERY' 4

-- working for
--
-- exchg mgdsc
--
-------------
-- table XXX

-- before

alter table sipro_data_store.si_XXX rename column "row.names" to "row.names_XXX";
alter table sipro_data_store.si_XXX rename column dateindex   to dateindex_XXX;

alter table sipro_data_store.si_XXX rename column dateindexeom        to dateindexeom_XXX;

-- put back

alter table sipro_data_store.si_XXX rename column "row.names_XXX" to "row.names";
alter table sipro_data_store.si_XXX rename column dateindex_XXX   to dateindex;

alter table sipro_data_store.si_XXX rename column dateindexeom_XXX        to dateindexeom;






----------

-- what would the 'big creation QUERY/QUERIES look like?
--
-- XXX ( not exchg mgdsc returns)
--
-- COULD(STILL DO *LEFT OUTER JOINS*)
--
select si_ci.*, si_bsq.*, si_isq.*, si_cfq.*, si_mlt.*, si_rat.*, psdc.*, psdd.*, si_date.*, si_psd.*, exchg.*, mgdsc.*  
from
sipro_data_store.si_ci ci
...
where
ci.company_id_unq_ci = XXX.company_id_unq_XXX and
ci.dateindex_ci      = XXX.dateindex_XXX

-- SPECIAL

-- returns

select returns.*, 
from
sipro_data_store.si_returns returns
...
where
ci.company_id_unq_ci = returns.now_company_id_unq
ci.dateindex_ci      = returns.now_dateindex;


-- SPECIAL

-- exchg 

select "row.names_exchg"  "row.names_exchg_sect", 
        dateindex_exchg    dateindex_exchg_sect,
        exchg_code_exchg   exchg_code_exchg_sect, 
        exchg_desc_exchg   exchg_desc_exchg_sect, 
        dateindexeom_exchg dateindexeom_exchg_sect
from
sipro_data_store.si_ci    ci,
sipro_data_store.si_exchg exchg
where
ci.exchange = exchg.exchg_code_exchg;


-- mgdsc sect - sector

select "row.names_mgdsc"  "row.names_mgdsc_sect", 
        dateindex_mgdsc    dateindex_mgdsc_sect,
        mg_code_mgdsc      mg_code_mgdsc_sect, 
        mg_desc_mgdsc      mg_desc_mgdsc_sect, 
        dateindexeom_mgdsc dateindexeom_mgdsc_sect
from
sipro_data_store.si_ci    ci,
sipro_data_store.si_mgdsc mgdsc
where
ci.ind_2_dig = mgdsc.mg_code_mgdsc;


-- mgdsc sect - ind

select "row.names_mgdsc"  "row.names_mgdsc_sect", 
        dateindex_mgdsc    dateindex_mgdsc_sect,
        mg_code_mgdsc      mg_code_mgdsc_sect, 
        mg_desc_mgdsc      mg_desc_mgdsc_sect, 
        dateindexeom_mgdsc dateindexeom_mgdsc_sect
from
sipro_data_store.si_ci    ci,
sipro_data_store.si_mgdsc mgdsc
where
ci.ind_3_dig = mgdsc.mg_code_mgdsc;

 

----------

-- HOW DO I DO THOSE OUTER JOINS [X] -- after MEETUP - onbin

-- DO NOT FORGET TO DO column ( FIXES [DONE] ABOVE )

-- HOW DO I HAVE MANY SMALL QUERIES [X] -- after MEETUP  - finecon





----------------- END: SATURDAY; JULY 23, 2016 --------------
-------------------------------------------------------------





---------- begin query ---------------- 

-- CAN I DO AN OUTER?+OUTER?
-- begin TEST ZONE --


explain
select ci.company_id_unq company_id_unq_ci , 
      psd.company_id_unq company_id_unq_psd, 
      bsq.company_id_unq company_id_unq_bsq
from
sipro_data_store.si_ci  ci 
full outer join 
sipro_data_store.si_psd psd 
on
ci.company_id_unq    = psd.company_id_unq and
ci.dateindex         = psd.dateindex
full outer join 
sipro_data_store.si_bsq bsq 
on
ci.company_id_unq    = bsq.company_id_unq and
ci.dateindex         = bsq.dateindex;

-- DOES WORK


-- end TEST ZONE --

select si_ci.*, si_bsq.*, si_isq.*, si_cfq.*, si_mlt.*, si_rat.*, psdc.*, psdd.*, si_date.*, si_psd.*, exchg.*, mgdsc.*  
from
sipro_data_store.si_ci ci
...
where
ci.company_id_unq_ci = XXX.company_id_unq_XXX and
ci.dateindex_ci      = XXX.dateindex_XXX


select returns.*, 
from
sipro_data_store.si_returns returns
...
where
ci.company_id_unq_ci = returns.now_company_id_unq
ci.dateindex_ci      = returns.now_dateindex;




select "row.names_exchg"  "row.names_exchg_sect", 
        dateindex_exchg    dateindex_exchg_sect,
        exchg_code_exchg   exchg_code_exchg_sect, 
        exchg_desc_exchg   exchg_desc_exchg_sect, 
        dateindexeom_exchg dateindexeom_exchg_sect
from
sipro_data_store.si_ci    ci,
sipro_data_store.si_exchg exchg
where
ci.exchange = exchg.exchg_code_exchg;




-- mgdsc sect - sector

select "row.names_mgdsc"  "row.names_mgdsc_sect", 
        dateindex_mgdsc    dateindex_mgdsc_sect,
        mg_code_mgdsc      mg_code_mgdsc_sect, 
        mg_desc_mgdsc      mg_desc_mgdsc_sect, 
        dateindexeom_mgdsc dateindexeom_mgdsc_sect
from
sipro_data_store.si_ci    ci,
sipro_data_store.si_mgdsc mgdsc
where
ci.ind_2_dig = mgdsc.mg_code_mgdsc;


-- mgdsc sect - ind

select "row.names_mgdsc"  "row.names_mgdsc_sect", 
        dateindex_mgdsc    dateindex_mgdsc_sect,
        mg_code_mgdsc      mg_code_mgdsc_sect, 
        mg_desc_mgdsc      mg_desc_mgdsc_sect, 
        dateindexeom_mgdsc dateindexeom_mgdsc_sect
from
sipro_data_store.si_ci    ci,
sipro_data_store.si_mgdsc mgdsc
where
ci.ind_3_dig = mgdsc.mg_code_mgdsc;


----------end query ------------------



select ci.*, psd.*, bsq.*     
from
sipro_data_store.si_ci  ci 
full outer join 
sipro_data_store.si_psd psd 
on
ci.company_id_unq_ci    = psd.company_id_unq_psd and
ci.dateindex_ci         = psd.dateindex_psd
full outer join 
sipro_data_store.si_bsq bsq 
on
ci.company_id_unq_ci    = bsq.company_id_unq_bsq and
ci.dateindex_ci         = bsq.dateindex_bsq;


-- SINCE, COLUMN TOO WIDE, I NEED LESS COLUMNS ( BETTER OFF TRYING TO CREATE A TABLE IN 9 PARTS )
-- I THINK THAT IT WILL WORK BETTER




--------------------------------
--------------------------------


-------------------------------------------------
----------- BEGIN ... CREATE -----------------


create table sipro_data_store.si_finecon1
as
select  
  ci.dateindex_ci,
  ci.company_id_ci,
  ci.company,
  ci.ticker_ci,
  ci.exchange,
  ci.sic,
  ci.sp,
  ci.adr,
  ci.ind_2_dig,
  ci.ind_3_dig,
  ci.country,
  ci.employees,
  ci.company_id_unq_ci,
  ci.ticker_unq_ci,
  ci.dateindexeom_ci,
  ci.company_id_unq_orig_ci,
  psd.dateindex_psd,
  psd.company_id_psd,
  psd.split_date,
  psd.split_fact,
  psd.price_date,  -- should have gone with si_returns
  price,
  psd.shr_aq1,
  psd.shr_aq2,
  psd.shr_aq3,
  psd.shr_aq4,
  psd.shr_aq5,
  psd.shr_aq6,
  psd.shr_aq7,
  psd.shr_aq8,
  psd.beta,      -- NEW
  psd.mktcap,
  psd.mktcap_q1,
  psd.mktcap_q2,
  psd.mktcap_q3,
  psd.mktcap_q4,
  psd.mktcap_q5,
  psd.mktcap_q6,
  psd.mktcap_q7,
  psd.mktcap_q8,
  psd.shr_dq1,  -- NEW
  psd.shr_dq2,
  psd.shr_dq3,
  psd.shr_dq4,
  psd.shr_dq5,
  psd.shr_dq6,
  psd.shr_dq7,
  psd.shr_dq8,
  psd.shr_dq9,
  psd.shr_dq10,
  psd.company_id_unq_psd,
  psd.ticker_unq_psd,
  psd.dateindexeom_psd,
  psd.company_id_unq_orig_psd
from 
sipro_data_store.si_ci  ci  full outer join 
sipro_data_store.si_psd psd 
on 
ci.dateindex_ci       = psd.dateindex_psd       and 
ci.company_id_unq_ci  = psd.company_id_unq_psd;
-- 40 SECONDS ( USED 4 INDEXES )


create table sipro_data_store.si_finecon2
as
select finecon1.*,
 isq.dateindex_isq,
 isq.company_id_isq,
 isq.sales_q1,
 isq.sales_q2,
 isq.sales_q3,
 isq.sales_q4,
 isq.sales_q5,
 isq.sales_q6,
 isq.sales_q7,
 isq.sales_q8,
 isq.cgs_q1,
 isq.cgs_q2,
 isq.cgs_q3,
 isq.cgs_q4,
 isq.cgs_q5,
 isq.cgs_q6,
 isq.cgs_q7,
 isq.cgs_q8,
 isq.gross_q1,
 isq.gross_q2,
 isq.gross_q3,
 isq.gross_q4,
 isq.gross_q5,
 isq.gross_q6,
 isq.gross_q7,
 isq.gross_q8,
 isq.dep_q1,
 isq.dep_q2,
 isq.dep_q3,
 isq.dep_q4,
 isq.dep_q5,
 isq.dep_q6,
 isq.dep_q7,
 isq.dep_q8,
 isq.int_q1,
 isq.int_q2,
 isq.int_q3,
 isq.int_q4,
 isq.int_q5,
 isq.int_q6,
 isq.int_q7,
 isq.int_q8,
 isq.intno_q1,
 isq.intno_q2,
 isq.intno_q3,
 isq.intno_q4,
 isq.intno_q5,
 isq.intno_q6,
 isq.intno_q7,
 isq.intno_q8,
 isq.uninc_q1,
 isq.uninc_q2,
 isq.uninc_q3,
 isq.uninc_q4,
 isq.uninc_q5,
 isq.uninc_q6,
 isq.uninc_q7,
 isq.uninc_q8,
 isq.totexp_q1,
 isq.totexp_q2,
 isq.totexp_q3,
 isq.totexp_q4,
 isq.totexp_q5,
 isq.totexp_q6,
 isq.totexp_q7,
 isq.totexp_q8,
 isq.gopinc_q1,
 isq.gopinc_q2,
 isq.gopinc_q3,
 isq.gopinc_q4,
 isq.gopinc_q5,
 isq.gopinc_q6,
 isq.gopinc_q7,
 isq.gopinc_q8,
 isq.othinc_q1,
 isq.othinc_q2,
 isq.othinc_q3,
 isq.othinc_q4,
 isq.othinc_q5,
 isq.othinc_q6,
 isq.othinc_q7,
 isq.othinc_q8,
 isq.pti_q1,
 isq.pti_q2,
 isq.pti_q3,
 isq.pti_q4,
 isq.pti_q5,
 isq.pti_q6,
 isq.pti_q7,
 isq.pti_q8,
 isq.inctax_q1,
 isq.inctax_q2,
 isq.inctax_q3,
 isq.inctax_q4,
 isq.inctax_q5,
 isq.inctax_q6,
 isq.inctax_q7,
 isq.inctax_q8,
 isq.adjust_q1,
 isq.adjust_q2,
 isq.adjust_q3,
 isq.adjust_q4,
 isq.adjust_q5,
 isq.adjust_q6,
 isq.adjust_q7,
 isq.adjust_q8,
 isq.nit_q1,
 isq.nit_q2,
 isq.nit_q3,
 isq.nit_q4,
 isq.nit_q5,
 isq.nit_q6,
 isq.nit_q7,
 isq.nit_q8,
 isq.iac_q1,
 isq.iac_q2,
 isq.iac_q3,
 isq.iac_q4,
 isq.iac_q5,
 isq.iac_q6,
 isq.iac_q7,
 isq.iac_q8,
 isq.xord_q1,
 isq.xord_q2,
 isq.xord_q3,
 isq.xord_q4,
 isq.xord_q5,
 isq.xord_q6,
 isq.xord_q7,
 isq.xord_q8,
 isq.netinc_q1,
 isq.netinc_q2,
 isq.netinc_q3,
 isq.netinc_q4,
 isq.netinc_q5,
 isq.netinc_q6,
 isq.netinc_q7,
 isq.netinc_q8,
 isq.epscon_q1,
 isq.epscon_q2,
 isq.epscon_q3,
 isq.epscon_q4,
 isq.epscon_q5,
 isq.epscon_q6,
 isq.epscon_q7,
 isq.epscon_q8,
 isq.eps_q1,
 isq.eps_q2,
 isq.eps_q3,
 isq.eps_q4,
 isq.eps_q5,
 isq.eps_q6,
 isq.eps_q7,
 isq.eps_q8,
 isq.epsdc_q1,
 isq.epsdc_q2,
 isq.epsdc_q3,
 isq.epsdc_q4,
 isq.epsdc_q5,
 isq.epsdc_q6,
 isq.epsdc_q7,
 isq.epsdc_q8,
 isq.epsd_q1,
 isq.epsd_q2,
 isq.epsd_q3,
 isq.epsd_q4,
 isq.epsd_q5,
 isq.epsd_q6,
 isq.epsd_q7,
 isq.epsd_q8,
 isq.dps_q1,
 isq.dps_q2,
 isq.dps_q3,
 isq.dps_q4,
 isq.dps_q5,
 isq.dps_q6,
 isq.dps_q7,
 isq.dps_q8,
 isq.divnq,
 isq.divnqxdt,
 isq.divnqpdt,
 isq.ebit_q1,
 isq.ebit_q2,
 isq.ebit_q3,
 isq.ebit_q4,
 isq.ebit_q5,
 isq.ebit_q6,
 isq.ebit_q7,
 isq.ebit_q8,
 isq.ebitda_q1,
 isq.ebitda_q2,
 isq.ebitda_q3,
 isq.ebitda_q4,
 isq.ebitda_q5,
 isq.ebitda_q6,
 isq.ebitda_q7,
 isq.ebitda_q8,
 isq.dpst_q1,
 isq.dpst_q2,
 isq.dpst_q3,
 isq.dpst_q4,
 isq.dpst_q5,
 isq.dpst_q6,
 isq.dpst_q7,
 isq.dpst_q8,
 isq.epsnd_q1,
 isq.epsnd_q2,
 isq.epsnd_q3,
 isq.epsnd_q4,
 isq.epsnd_q5,
 isq.epsnd_q6,
 isq.epsnd_q7,
 isq.epsnd_q8,
 isq.epsnd_q9,
 isq.epsnd_q10,
 isq.company_id_unq_isq,
 isq.ticker_unq_isq,
 isq.dateindexeom_isq,
 isq.company_id_unq_orig_isq
from 
sipro_data_store.si_finecon1 finecon1 full outer join 
sipro_data_store.si_isq isq 
on 
finecon1.dateindex_ci      = isq.dateindex_isq      and 
finecon1.company_id_unq_ci = isq.company_id_unq_isq;
--    SECONDS ( USED 2 INDEXES - ONLY ISQ HAS INDEXES )

drop table sipro_data_store.si_finecon1;


-- 
-- SELECT l.what, l.nr AS "bytes/ct"
--      , CASE WHEN is_size THEN pg_size_pretty(nr) END AS bytes_pretty
--      , CASE WHEN is_size THEN nr / x.ct END          AS bytes_per_row
-- FROM  (
--    SELECT min(tableoid)        AS tbl      -- same as 'public.tbl'::regclass::oid
--         , count(*)             AS ct
--         , sum(length(t::text)) AS txt_len  -- length in characters
--    FROM   sipro_data_store.si_finecon t    -- provide table name *once*
--    ) x
--  , LATERAL (
--    VALUES
--       (true , 'core_relation_size'               , pg_relation_size(tbl))
--     , (true , 'visibility_map'                   , pg_relation_size(tbl, 'vm'))
--     , (true , 'free_space_map'                   , pg_relation_size(tbl, 'fsm'))
--     , (true , 'table_size_incl_toast'            , pg_table_size(tbl))
--     , (true , 'indexes_size'                     , pg_indexes_size(tbl))
--     , (true , 'total_size_incl_toast_and_indexes', pg_total_relation_size(tbl))
--     , (true , 'live_rows_in_text_representation' , txt_len)
--     , (false, '------------------------------'   , NULL)
--     , (false, 'row_count'                        , ct)
--     , (false, 'live_tuples'                      , pg_stat_get_live_tuples(tbl))
--     , (false, 'dead_tuples'                      , pg_stat_get_dead_tuples(tbl))
--    ) l(is_size, what, nr);

-- 1228 bytes_per_row  ( 112 TIME TO RUN ) through isq   sipro_data_store.si_finecon2
-- 2035 bytes_per_row  ( 118 TIME TO RUN ) through bsq   sipro_data_store.si_finecon3
-- 2442 bytes_per_row  ( 170 TIME TO RUN ) through csq   sipro_data_store.si_finecon4


drop table sipro_data_store.si_finecon1;
--

create table sipro_data_store.si_finecon3
as
select  finecon2.*,
 bsq.dateindex_bsq,
 bsq.company_id_bsq,
 bsq.ar_q1,
 bsq.ar_q2,
 bsq.ar_q3,
 bsq.ar_q4,
 bsq.ar_q5,
 bsq.ar_q6,
 bsq.ar_q7,
 bsq.ar_q8,
 bsq.ca_q1,
 bsq.ca_q2,
 bsq.ca_q3,
 bsq.ca_q4,
 bsq.ca_q5,
 bsq.ca_q6,
 bsq.ca_q7,
 bsq.ca_q8,
 bsq.assets_q1,
 bsq.assets_q2,
 bsq.assets_q3,
 bsq.assets_q4,
 bsq.assets_q5,
 bsq.assets_q6,
 bsq.assets_q7,
 bsq.assets_q8,
 bsq.ap_q1,
 bsq.ap_q2,
 bsq.ap_q3,
 bsq.ap_q4,
 bsq.ap_q5,
 bsq.ap_q6,
 bsq.ap_q7,
 bsq.ap_q8,
 bsq.stdebt_q1,
 bsq.stdebt_q2,
 bsq.stdebt_q3,
 bsq.stdebt_q4,
 bsq.stdebt_q5,
 bsq.stdebt_q6,
 bsq.stdebt_q7,
 bsq.stdebt_q8,
 bsq.ocl_q1,
 bsq.ocl_q2,
 bsq.ocl_q3,
 bsq.ocl_q4,
 bsq.ocl_q5,
 bsq.ocl_q6,
 bsq.ocl_q7,
 bsq.ocl_q8,
 bsq.cl_q1,
 bsq.cl_q2,
 bsq.cl_q3,
 bsq.cl_q4,
 bsq.cl_q5,
 bsq.cl_q6,
 bsq.cl_q7,
 bsq.cl_q8,
 bsq.ltdebt_q1,
 bsq.ltdebt_q2,
 bsq.ltdebt_q3,
 bsq.ltdebt_q4,
 bsq.ltdebt_q5,
 bsq.ltdebt_q6,
 bsq.ltdebt_q7,
 bsq.ltdebt_q8,
 bsq.oltl_q1,
 bsq.oltl_q2,
 bsq.oltl_q3,
 bsq.oltl_q4,
 bsq.oltl_q5,
 bsq.oltl_q6,
 bsq.oltl_q7,
 bsq.oltl_q8,
 bsq.liab_q1,
 bsq.liab_q2,
 bsq.liab_q3,
 bsq.liab_q4,
 bsq.liab_q5,
 bsq.liab_q6,
 bsq.liab_q7,
 bsq.liab_q8,
 bsq.equity_q1,
 bsq.equity_q2,
 bsq.equity_q3,
 bsq.equity_q4,
 bsq.equity_q5,
 bsq.equity_q6,
 bsq.equity_q7,
 bsq.equity_q8,
 bsq.bvps_q1,
 bsq.bvps_q2,
 bsq.bvps_q3,
 bsq.bvps_q4,
 bsq.bvps_q5,
 bsq.bvps_q6,
 bsq.bvps_q7,
 bsq.bvps_q8,
 bsq.minor_q1,
 bsq.minor_q2,
 bsq.minor_q3,
 bsq.minor_q4,
 bsq.minor_q5,
 bsq.minor_q6,
 bsq.minor_q7,
 bsq.minor_q8,
 bsq.work_q1,
 bsq.work_q2,
 bsq.work_q3,
 bsq.work_q4,
 bsq.work_q5,
 bsq.work_q6,
 bsq.work_q7,
 bsq.work_q8,
 bsq.entval_q1,
 bsq.entval_q2,
 bsq.entval_q3,
 bsq.entval_q4,
 bsq.entval_q5,
 bsq.entval_q6,
 bsq.entval_q7,
 bsq.entval_q8,
 bsq.company_id_unq_bsq,
 bsq.ticker_unq_bsq,
 bsq.dateindexeom_bsq,
 bsq.company_id_unq_orig_bsq
from 
sipro_data_store.si_finecon2 finecon2 full outer join 
sipro_data_store.si_bsq bsq 
on 
finecon2.dateindex_ci      = bsq.dateindex_bsq   and 
finecon2.company_id_unq_ci = bsq.company_id_unq_bsq;
-- 134 SECONDS

drop table sipro_data_store.si_finecon2;
--

create table sipro_data_store.si_finecon4
as
select finecon3.*,
 cfq.dateindex_cfq,
 cfq.company_id_cfq,
 cfq.tco_q1,
 cfq.tco_q2,
 cfq.tco_q3,
 cfq.tco_q4,
 cfq.tco_q5,
 cfq.tco_q6,
 cfq.tco_q7,
 cfq.tco_q8,
 cfq.ce_q1,
 cfq.ce_q2,
 cfq.ce_q3,
 cfq.ce_q4,
 cfq.ce_q5,
 cfq.ce_q6,
 cfq.ce_q7,
 cfq.ce_q8,
 cfq.tci_q1,
 cfq.tci_q2,
 cfq.tci_q3,
 cfq.tci_q4,
 cfq.tci_q5,
 cfq.tci_q6,
 cfq.tci_q7,
 cfq.tci_q8,
 cfq.tcf_q1,
 cfq.tcf_q2,
 cfq.tcf_q3,
 cfq.tcf_q4,
 cfq.tcf_q5,
 cfq.tcf_q6,
 cfq.tcf_q7,
 cfq.tcf_q8,
 cfq.dep_cf_q1,
 cfq.dep_cf_q2,
 cfq.dep_cf_q3,
 cfq.dep_cf_q4,
 cfq.dep_cf_q5,
 cfq.dep_cf_q6,
 cfq.dep_cf_q7,
 cfq.dep_cf_q8,
 cfq.cfps_q1,
 cfq.cfps_q2,
 cfq.cfps_q3,
 cfq.cfps_q4,
 cfq.cfps_q5,
 cfq.cfps_q6,
 cfq.cfps_q7,
 cfq.cfps_q8,
 cfq.fcfps_q1,
 cfq.fcfps_q2,
 cfq.fcfps_q3,
 cfq.fcfps_q4,
 cfq.fcfps_q5,
 cfq.fcfps_q6,
 cfq.fcfps_q7,
 cfq.fcfps_q8,
 cfq.company_id_unq_cfq,
 cfq.ticker_unq_cfq,
 cfq.dateindexeom_cfq,
 cfq.company_id_unq_orig_cfq
from 
sipro_data_store.si_finecon3 finecon3 full outer join 
sipro_data_store.si_cfq cfq 
on 
finecon3.dateindex_ci      = cfq.dateindex_cfq       and 
finecon3.company_id_unq_ci = cfq.company_id_unq_cfq;
--  210 SECONDS


drop table sipro_data_store.si_finecon3;
---


create table sipro_data_store.si_finecon5
as
select finecon4.*,
 rat.dateindex_rat,
 rat.company_id_rat,
 rat.roic_y1,
 rat.company_id_unq_rat,
 rat.ticker_unq_rat,
 rat.dateindexeom_rat,
 rat.company_id_unq_orig_rat     
from 
sipro_data_store.si_finecon4 finecon4 full outer join 
sipro_data_store.si_rat rat 
on 
finecon4.dateindex_ci      = rat.dateindex_rat      and 
finecon4.company_id_unq_ci = rat.company_id_unq_rat;
-- 318 SECONDS


drop table sipro_data_store.si_finecon4;
--


create table sipro_data_store.si_finecon6
as
select finecon5.*,
 mlt.dateindex_mlt,
 mlt.company_id_mlt,
 mlt.shy,
 mlt.company_id_unq_mlt,
 mlt.ticker_unq_mlt,
 mlt.dateindexeom_mlt,
 mlt.company_id_unq_orig_mlt
from 
sipro_data_store.si_finecon5 finecon5 full outer join 
sipro_data_store.si_mlt mlt 
on 
finecon5.dateindex_ci      = mlt.dateindex_mlt       and 
finecon5.company_id_unq_ci = mlt.company_id_unq_mlt;
-- 231 SECONDS

drop table sipro_data_store.si_finecon5;
--


create table sipro_data_store.si_finecon7
as
select  finecon6.*,
  date.dateindex_date,
  date.company_id_date,
  date.perend_q1,
  date.perlen_q1,
  date.pertyp_q1,
  date.updtyp_q1,
  date.company_id_unq_date,
  date.ticker_unq_date,
  date.dateindexeom_date,
  date.company_id_unq_orig_date
from 
sipro_data_store.si_finecon6 finecon6 full outer join 
sipro_data_store.si_date date 
on 
finecon6.dateindex_ci      = date.dateindex_date       and 
finecon6.company_id_unq_ci = date.company_id_unq_date;
-- 242 SECONDS


drop table sipro_data_store.si_finecon6;
--

create table sipro_data_store.si_finecon8
as
select  finecon7.*,
  psdc.dateindex_psdc,
  psdc.company_id_psdc,
  psdc.company_id_unq_psdc,
  psdc.ticker_unq_psdc,
  psdc.dateindexeom_psdc,
  psdc.company_id_unq_orig_psdc
from 
sipro_data_store.si_finecon7 finecon7 full outer join 
sipro_data_store.si_psdc psdc 
on 
finecon7.dateindex_ci      = psdc.dateindex_psdc      and 
finecon7.company_id_unq_ci = psdc.company_id_unq_psdc;
-- 262 SECONDS

drop table sipro_data_store.si_finecon7;
--

create table sipro_data_store.si_finecon9
as
select  finecon8.*,
  psdd.dateindex_psdd,
  psdd.company_id_psdd,
  psdd.company_id_unq_psdd,
  psdd.ticker_unq_psdd,
  psdd.dateindexeom_psdd,
  psdd.company_id_unq_orig_psdd
from 
sipro_data_store.si_finecon8 finecon8 full outer join 
sipro_data_store.si_psdd psdd 
on 
finecon8.dateindex_ci      = psdd.dateindex_psdd       and 
finecon8.company_id_unq_ci = psdd.company_id_unq_psdd;
-- 300 SECONDS

-- -- TRYING TO AVOID SEQUENTIAL SCANS ( DOES NOT HELP )
-- 
-- drop index sipro_data_store.si_psdd_dateindex_brin_idx;
-- 
-- CREATE INDEX si_psdd_dateindex_brin_idx
--   ON sipro_data_store.si_psdd
--   USING brin
--   (dateindex_psdd);
-- 
-- drop index sipro_data_store.si_psdd_dateindex_company_id_unq_idx;
-- 
-- CREATE INDEX si_psdd_dateindex_company_id_unq_idx
--   ON sipro_data_store.si_psdd
--   USING btree
--   (dateindex_psdd,company_id_unq_psdd);
-- 
-- drop index sipro_data_store.si_psdd_dateindex_company_id_unq_brin_idx;
-- 
-- CREATE INDEX si_psdd_dateindex_company_id_unq_brin_idx
--   ON sipro_data_store.si_psdd
--   USING brin
--   (dateindex_psdd,company_id_unq_psdd);
-- 
-- drop index sipro_data_store.si_finecon8_dateindex_brin_idx;
-- 
-- CREATE INDEX si_finecon8_dateindex_brin_idx
--   ON sipro_data_store.si_finecon8
--   USING brin
--   (dateindex_ci);
-- 
-- drop index sipro_data_store.si_finecon8_dateindex_idx;
-- 
-- CREATE INDEX si_finecon8_dateindex_idx
--   ON sipro_data_store.si_finecon8
--   USING btree
--   (dateindex_ci);
-- 
-- drop index sipro_data_store.si_finecon8_company_id_unq_idx;
-- 
-- CREATE INDEX si_finecon8_company_id_unq_idx
--   ON sipro_data_store.si_finecon8
--   USING btree
--   (company_id_unq_ci);
-- 
-- drop index sipro_data_store.si_finecon8_dateindex_company_id_unq_idx;
-- 
-- CREATE INDEX si_finecon8_dateindex_company_id_unq_idx
--   ON sipro_data_store.si_finecon8
--   USING btree
--   (dateindex_ci,company_id_unq_ci);
-- 
-- drop index sipro_data_store.si_finecon8_dateindex_company_id_unq_brin_idx;
-- 
-- CREATE INDEX si_finecon8_dateindex_company_id_unq_brin_idx
--   ON sipro_data_store.si_finecon8
--   USING brin
--   (dateindex_ci,company_id_unq_ci);
-- 
-- 
-- create table sipro_data_store.si_finecon9b
-- as
-- --explain
-- select  finecon8.*,
--   psdd.dateindex_psdd,
--   psdd.company_id_psdd,
--   psdd.company_id_unq_psdd,
--   psdd.ticker_unq_psdd,
--   psdd.dateindexeom_psdd,
--   psdd.company_id_unq_orig_psdd
-- from 
-- sipro_data_store.si_finecon8 finecon8 full outer join 
-- sipro_data_store.si_psdd psdd 
-- on 
-- finecon8.dateindex_ci      = psdd.dateindex_psdd       and 
-- finecon8.company_id_unq_ci = psdd.company_id_unq_psdd;
-- -- 133/209 SECONDS (STILL sequential scan wo the indexes BUT faster sequential s w indexes)
-- 


drop table sipro_data_store.si_finecon8;
--

create table sipro_data_store.si_finecon10
as
select  finecon9.*,
  returns.retdate_dateindex,
  returns.retdate_dateindexeom,
  returns.now_dateindex,
  returns.now_dateindexeom,
  returns.now_company_id_unq,
  returns.now_ticker_unq,
  returns.now_company,
  returns.now_price,
  returns.w52_dateindex,
  returns.w52_dateindexeom,
  returns.w52_company_id_unq,
  returns.w52_ticker_unq,
  returns.w52_company,
  returns.w52_prchg_52w_ann,
  returns.w52_pradchg_52w_ann,
  returns.w52_divaccmf4q,
  returns.w26_dateindex,
  returns.w26_dateindexeom,
  returns.w26_company_id_unq,
  returns.w26_ticker_unq,
  returns.w26_company,
  returns.w26_prchg_26w_ann,
  returns.w26_pradchg_26w_ann,
  returns.w26_divaccmf2q,
  returns.w13_dateindex,
  returns.w13_dateindexeom,
  returns.w13_company_id_unq,
  returns.w13_ticker_unq,
  returns.w13_company,
  returns.w13_prchg_13w_ann,
  returns.w13_pradchg_13w_ann,
  returns.w13_divaccmf1q
from 
sipro_data_store.si_finecon9 finecon9 full outer join 
sipro_data_store.si_returns returns 
on 
finecon9.dateindex_ci      = returns.now_dateindex       and 
finecon9.company_id_unq_ci = returns.now_company_id_unq;
-- 555 SECONDS

drop table sipro_data_store.si_finecon9;
--

create table sipro_data_store.si_finecon11
as
select  finecon10.*,
  exchg.dateindex_exchg,
  exchg.exchg_code,
  exchg.exchg_desc,
  exchg.dateindexeom_exchg
from 
sipro_data_store.si_finecon10 finecon10 full outer join 
sipro_data_store.si_exchg exchg 
on 
finecon10.dateindex_ci      = exchg.dateindex_exchg and
finecon10.exchange          = exchg.exchg_code;
-- 706 SECONDS


drop table sipro_data_store.si_finecon10;
--

create table sipro_data_store.si_finecon12
as
select  finecon11.*,
  mgdsc.dateindex_mgdsc dateindex_mgdsc_sect,
  mgdsc.mg_code mg_code_sect,
  mgdsc.mg_desc mg_desc_sect,
  mgdsc.dateindexeom_mgdsc dateindexeom_mgdsc_sect
from 
sipro_data_store.si_finecon11 finecon11 full outer join 
sipro_data_store.si_mgdsc mgdsc 
on 
finecon11.dateindex_ci      = mgdsc.dateindex_mgdsc and
finecon11.ind_2_dig         = mgdsc.mg_code;
-- 370 SECONDS


drop table sipro_data_store.si_finecon11;
--

create table sipro_data_store.si_finecon13
as
select  finecon12.*,
  mgdsc.dateindex_mgdsc dateindex_mgdsc_ind,
  mgdsc.mg_code mg_code_ind,
  mgdsc.mg_desc mg_desc_ind,
  mgdsc.dateindexeom_mgdsc dateindexeom_mgdsc_ind
from 
sipro_data_store.si_finecon12 finecon12 full outer join 
sipro_data_store.si_mgdsc mgdsc 
on 
finecon12.dateindex_ci      = mgdsc.dateindex_mgdsc and
finecon12.ind_3_dig         = mgdsc.mg_code;
-- IN PROGRESS

drop table sipro_data_store.si_finecon12;
--

alter table sipro_data_store.si_finecon13 rename to si_finecon;

----------- END ... CREATE -------------------
-------------------------------------------------


-----------------------------------
--- BEGIN final working product ---

-- Table: sipro_data_store.si_finecon

-- DROP TABLE sipro_data_store.si_finecon;

CREATE TABLE sipro_data_store.si_finecon
(
  dateindex integer,
  company_id text,
  company text,
  ticker text,
  exchange text,
  sic text,
  sp text,
  adr boolean,
  ind_2_dig text,
  ind_3_dig text,
  country text,
  employees text,
  company_id_unq text,
  ticker_unq text,
  dateindexeom integer,
  company_id_unq_orig text,
  split_date date,
  split_fact text,
  price_date date,
  price text,
  prchg_04w text,
  prchg_13w text,
  prchg_26w text,
  prchg_52w text,
  shr_aq1 text,
  shr_aq2 text,
  shr_aq3 text,
  shr_aq4 text,
  shr_aq5 text,
  shr_aq6 text,
  shr_aq7 text,
  shr_aq8 text,
  beta text,
  mktcap text,
  mktcap_q1 text,
  mktcap_q2 text,
  mktcap_q3 text,
  mktcap_q4 text,
  mktcap_q5 text,
  mktcap_q6 text,
  mktcap_q7 text,
  mktcap_q8 text,
  shr_dq1 text,
  shr_dq2 text,
  shr_dq3 text,
  shr_dq4 text,
  shr_dq5 text,
  shr_dq6 text,
  shr_dq7 text,
  shr_dq8 text,
  shr_dq9 text,
  shr_dq10 text,
  sales_q1 text,
  sales_q2 text,
  sales_q3 text,
  sales_q4 text,
  sales_q5 text,
  sales_q6 text,
  sales_q7 text,
  sales_q8 text,
  cgs_q1 text,
  cgs_q2 text,
  cgs_q3 text,
  cgs_q4 text,
  cgs_q5 text,
  cgs_q6 text,
  cgs_q7 text,
  cgs_q8 text,
  gross_q1 text,
  gross_q2 text,
  gross_q3 text,
  gross_q4 text,
  gross_q5 text,
  gross_q6 text,
  gross_q7 text,
  gross_q8 text,
  dep_q1 text,
  dep_q2 text,
  dep_q3 text,
  dep_q4 text,
  dep_q5 text,
  dep_q6 text,
  dep_q7 text,
  dep_q8 text,
  int_q1 text,
  int_q2 text,
  int_q3 text,
  int_q4 text,
  int_q5 text,
  int_q6 text,
  int_q7 text,
  int_q8 text,
  intno_q1 text,
  intno_q2 text,
  intno_q3 text,
  intno_q4 text,
  intno_q5 text,
  intno_q6 text,
  intno_q7 text,
  intno_q8 text,
  uninc_q1 text,
  uninc_q2 text,
  uninc_q3 text,
  uninc_q4 text,
  uninc_q5 text,
  uninc_q6 text,
  uninc_q7 text,
  uninc_q8 text,
  totexp_q1 text,
  totexp_q2 text,
  totexp_q3 text,
  totexp_q4 text,
  totexp_q5 text,
  totexp_q6 text,
  totexp_q7 text,
  totexp_q8 text,
  gopinc_q1 text,
  gopinc_q2 text,
  gopinc_q3 text,
  gopinc_q4 text,
  gopinc_q5 text,
  gopinc_q6 text,
  gopinc_q7 text,
  gopinc_q8 text,
  othinc_q1 text,
  othinc_q2 text,
  othinc_q3 text,
  othinc_q4 text,
  othinc_q5 text,
  othinc_q6 text,
  othinc_q7 text,
  othinc_q8 text,
  pti_q1 text,
  pti_q2 text,
  pti_q3 text,
  pti_q4 text,
  pti_q5 text,
  pti_q6 text,
  pti_q7 text,
  pti_q8 text,
  inctax_q1 text,
  inctax_q2 text,
  inctax_q3 text,
  inctax_q4 text,
  inctax_q5 text,
  inctax_q6 text,
  inctax_q7 text,
  inctax_q8 text,
  adjust_q1 text,
  adjust_q2 text,
  adjust_q3 text,
  adjust_q4 text,
  adjust_q5 text,
  adjust_q6 text,
  adjust_q7 text,
  adjust_q8 text,
  nit_q1 text,
  nit_q2 text,
  nit_q3 text,
  nit_q4 text,
  nit_q5 text,
  nit_q6 text,
  nit_q7 text,
  nit_q8 text,
  iac_q1 text,
  iac_q2 text,
  iac_q3 text,
  iac_q4 text,
  iac_q5 text,
  iac_q6 text,
  iac_q7 text,
  iac_q8 text,
  xord_q1 text,
  xord_q2 text,
  xord_q3 text,
  xord_q4 text,
  xord_q5 text,
  xord_q6 text,
  xord_q7 text,
  xord_q8 text,
  netinc_q1 text,
  netinc_q2 text,
  netinc_q3 text,
  netinc_q4 text,
  netinc_q5 text,
  netinc_q6 text,
  netinc_q7 text,
  netinc_q8 text,
  epscon_q1 text,
  epscon_q2 text,
  epscon_q3 text,
  epscon_q4 text,
  epscon_q5 text,
  epscon_q6 text,
  epscon_q7 text,
  epscon_q8 text,
  eps_q1 text,
  eps_q2 text,
  eps_q3 text,
  eps_q4 text,
  eps_q5 text,
  eps_q6 text,
  eps_q7 text,
  eps_q8 text,
  epsdc_q1 text,
  epsdc_q2 text,
  epsdc_q3 text,
  epsdc_q4 text,
  epsdc_q5 text,
  epsdc_q6 text,
  epsdc_q7 text,
  epsdc_q8 text,
  epsd_q1 text,
  epsd_q2 text,
  epsd_q3 text,
  epsd_q4 text,
  epsd_q5 text,
  epsd_q6 text,
  epsd_q7 text,
  epsd_q8 text,
  dps_q1 text,
  dps_q2 text,
  dps_q3 text,
  dps_q4 text,
  dps_q5 text,
  dps_q6 text,
  dps_q7 text,
  dps_q8 text,
  divnq text,
  divnqxdt date,
  divnqpdt date,
  ebit_q1 text,
  ebit_q2 text,
  ebit_q3 text,
  ebit_q4 text,
  ebit_q5 text,
  ebit_q6 text,
  ebit_q7 text,
  ebit_q8 text,
  ebitda_q1 text,
  ebitda_q2 text,
  ebitda_q3 text,
  ebitda_q4 text,
  ebitda_q5 text,
  ebitda_q6 text,
  ebitda_q7 text,
  ebitda_q8 text,
  dpst_q1 text,
  dpst_q2 text,
  dpst_q3 text,
  dpst_q4 text,
  dpst_q5 text,
  dpst_q6 text,
  dpst_q7 text,
  dpst_q8 text,
  epsnd_q1 text,
  epsnd_q2 text,
  epsnd_q3 text,
  epsnd_q4 text,
  epsnd_q5 text,
  epsnd_q6 text,
  epsnd_q7 text,
  epsnd_q8 text,
  epsnd_q9 text,
  epsnd_q10 text,
  cash_q1 text,
  cash_q2 text,
  cash_q3 text,
  cash_q4 text,
  cash_q5 text,
  cash_q6 text,
  cash_q7 text,
  cash_q8 text,
  ar_q1 text,
  ar_q2 text,
  ar_q3 text,
  ar_q4 text,
  ar_q5 text,
  ar_q6 text,
  ar_q7 text,
  ar_q8 text,
  ca_q1 text,
  ca_q2 text,
  ca_q3 text,
  ca_q4 text,
  ca_q5 text,
  ca_q6 text,
  ca_q7 text,
  ca_q8 text,
  assets_q1 text,
  assets_q2 text,
  assets_q3 text,
  assets_q4 text,
  assets_q5 text,
  assets_q6 text,
  assets_q7 text,
  assets_q8 text,
  ap_q1 text,
  ap_q2 text,
  ap_q3 text,
  ap_q4 text,
  ap_q5 text,
  ap_q6 text,
  ap_q7 text,
  ap_q8 text,
  stdebt_q1 text,
  stdebt_q2 text,
  stdebt_q3 text,
  stdebt_q4 text,
  stdebt_q5 text,
  stdebt_q6 text,
  stdebt_q7 text,
  stdebt_q8 text,
  ocl_q1 text,
  ocl_q2 text,
  ocl_q3 text,
  ocl_q4 text,
  ocl_q5 text,
  ocl_q6 text,
  ocl_q7 text,
  ocl_q8 text,
  cl_q1 text,
  cl_q2 text,
  cl_q3 text,
  cl_q4 text,
  cl_q5 text,
  cl_q6 text,
  cl_q7 text,
  cl_q8 text,
  ltdebt_q1 text,
  ltdebt_q2 text,
  ltdebt_q3 text,
  ltdebt_q4 text,
  ltdebt_q5 text,
  ltdebt_q6 text,
  ltdebt_q7 text,
  ltdebt_q8 text,
  oltl_q1 text,
  oltl_q2 text,
  oltl_q3 text,
  oltl_q4 text,
  oltl_q5 text,
  oltl_q6 text,
  oltl_q7 text,
  oltl_q8 text,
  liab_q1 text,
  liab_q2 text,
  liab_q3 text,
  liab_q4 text,
  liab_q5 text,
  liab_q6 text,
  liab_q7 text,
  liab_q8 text,
  equity_q1 text,
  equity_q2 text,
  equity_q3 text,
  equity_q4 text,
  equity_q5 text,
  equity_q6 text,
  equity_q7 text,
  equity_q8 text,
  bvps_q1 text,
  bvps_q2 text,
  bvps_q3 text,
  bvps_q4 text,
  bvps_q5 text,
  bvps_q6 text,
  bvps_q7 text,
  bvps_q8 text,
  minor_q1 text,
  minor_q2 text,
  minor_q3 text,
  minor_q4 text,
  minor_q5 text,
  minor_q6 text,
  minor_q7 text,
  minor_q8 text,
  work_q1 text,
  work_q2 text,
  work_q3 text,
  work_q4 text,
  work_q5 text,
  work_q6 text,
  work_q7 text,
  work_q8 text,
  entval_q1 text,
  entval_q2 text,
  entval_q3 text,
  entval_q4 text,
  entval_q5 text,
  entval_q6 text,
  entval_q7 text,
  entval_q8 text,
  tco_q1 text,
  tco_q2 text,
  tco_q3 text,
  tco_q4 text,
  tco_q5 text,
  tco_q6 text,
  tco_q7 text,
  tco_q8 text,
  ce_q1 text,
  ce_q2 text,
  ce_q3 text,
  ce_q4 text,
  ce_q5 text,
  ce_q6 text,
  ce_q7 text,
  ce_q8 text,
  tci_q1 text,
  tci_q2 text,
  tci_q3 text,
  tci_q4 text,
  tci_q5 text,
  tci_q6 text,
  tci_q7 text,
  tci_q8 text,
  tcf_q1 text,
  tcf_q2 text,
  tcf_q3 text,
  tcf_q4 text,
  tcf_q5 text,
  tcf_q6 text,
  tcf_q7 text,
  tcf_q8 text,
  ere_q1 text,
  ere_q2 text,
  ere_q3 text,
  ere_q4 text,
  ere_q5 text,
  ere_q6 text,
  ere_q7 text,
  ere_q8 text,
  ncc_q1 text,
  ncc_q2 text,
  ncc_q3 text,
  ncc_q4 text,
  ncc_q5 text,
  ncc_q6 text,
  ncc_q7 text,
  ncc_q8 text,
  dep_cf_q1 text,
  dep_cf_q2 text,
  dep_cf_q3 text,
  dep_cf_q4 text,
  dep_cf_q5 text,
  dep_cf_q6 text,
  dep_cf_q7 text,
  dep_cf_q8 text,
  cfps_q1 text,
  cfps_q2 text,
  cfps_q3 text,
  cfps_q4 text,
  cfps_q5 text,
  cfps_q6 text,
  cfps_q7 text,
  cfps_q8 text,
  fcfps_q1 text,
  fcfps_q2 text,
  fcfps_q3 text,
  fcfps_q4 text,
  fcfps_q5 text,
  fcfps_q6 text,
  fcfps_q7 text,
  fcfps_q8 text,
  dcfbs_q1 text,
  dcfbs_q2 text,
  dcfbs_q3 text,
  dcfbs_q4 text,
  dcfo_q1 text,
  dcfo_q2 text,
  dcfo_q3 text,
  dcfo_q4 text,
  dcf_q1 text,
  dcf_q2 text,
  dcf_q3 text,
  dcf_q4 text,
  divpaid_q1 text,
  divpaid_q2 text,
  divpaid_q3 text,
  divpaid_q4 text,
  divpaid_q5 text,
  divpaid_q6 text,
  divpaid_q7 text,
  divpaid_q8 text,
  roic_y1 text,
  shy text,
  perend_q1 date,
  perlen_q1 text,
  pertyp_q1 text,
  updtyp_q1 text,
  price_m001 text,
  price_m002 text,
  price_m003 text,
  price_m004 text,
  price_m005 text,
  price_m006 text,
  price_m007 text,
  price_m008 text,
  price_m009 text,
  price_m010 text,
  price_m011 text,
  price_m012 text,
  price_m013 text,
  pricedm001 date,
  pricedm002 date,
  pricedm003 date,
  pricedm004 date,
  pricedm005 date,
  pricedm006 date,
  pricedm007 date,
  pricedm008 date,
  pricedm009 date,
  pricedm010 date,
  pricedm011 date,
  pricedm012 date,
  pricedm013 date,
  retdate_dateindex integer,
  retdate_dateindexeom integer,
  now_dateindex integer,
  now_dateindexeom integer,
  now_company_id_unq text,
  now_ticker_unq text,
  now_company text,
  now_price text,
  w52_dateindex integer,
  w52_dateindexeom integer,
  w52_company_id_unq text,
  w52_ticker_unq text,
  w52_company text,
  w52_prchg_52w_ann numeric,
  w52_pradchg_52w_ann numeric,
  w52_divaccmf4q numeric,
  w26_dateindex integer,
  w26_dateindexeom integer,
  w26_company_id_unq text,
  w26_ticker_unq text,
  w26_company text,
  w26_prchg_26w_ann numeric,
  w26_pradchg_26w_ann numeric,
  w26_divaccmf2q numeric,
  w13_dateindex integer,
  w13_dateindexeom integer,
  w13_company_id_unq text,
  w13_ticker_unq text,
  w13_company text,
  w13_prchg_13w_ann numeric,
  w13_pradchg_13w_ann numeric,
  w13_divaccmf1q numeric(15,2),
  exchg_code text,
  exchg_desc text,
  mg_code_sect text,
  mg_desc_sect text,
  mg_code_ind text,
  mg_desc_ind text
)
WITH (
  OIDS=FALSE
);
ALTER TABLE sipro_data_store.si_finecon
  OWNER TO postgres;

-- Index: sipro_data_store.si_finecon_jamesos_partial_idx

-- DROP INDEX sipro_data_store.si_finecon_jamesos_partial_idx;

CREATE INDEX si_finecon_jamesos_partial_idx
  ON sipro_data_store.si_finecon
  USING btree
  (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

--- END final working product ---
---------------------------------





-- TO DO NEXT ( THIS SATURDAY ) FROM ONEBIGTABLE  si_finecon
  create X-tiles and RUN return-queries  [ ]
  or create MANY X-tiles ( and prepare to put in a GRADIENT BOOSTER )

explain select count(1) from sipro_data_store.si_finecon where dateindex_ci = 16465; -- 2015-01-30
-- 7012

select count(1) from sipro_data_store.si_finecon where dateindex_ci = 16555; -- 2015-04-30
-- 7005 -- 30 seconds


NO INDEXES
finance_econ=# explain select count(1) from sipro_data_store.si_finecon where dateindex_ci = 16465;
                               QUERY PLAN
------------------------------------------------------------------------
 Aggregate  (cost=216224.15..216224.16 rows=1 width=0)
   ->  Seq Scan on si_finecon  (cost=0.00..216206.79 rows=6943 width=0)
         Filter: (dateindex_ci = 16465)
(3 rows)

CREATE INDEX si_finecon_dateindex_ci_idx
  ON sipro_data_store.si_finecon
  USING btree
  (dateindex_ci);

CREATE INDEX si_finecon_dateindex_ci_brin_idx
  ON sipro_data_store.si_finecon
  USING brin
  (dateindex_ci);

CREATE INDEX si_finecon_dateindex_ci_16465_idx
  ON sipro_data_store.si_finecon
  USING btree
  (dateindex_ci) where dateindex_ci = 16465;

CREATE INDEX si_finecon_dateindex_ci_16465_brin_idx -- WINNER: si_finecon_dateindex_ci_16465_brin_idx
  ON sipro_data_store.si_finecon
  USING brin
  (dateindex_ci) where dateindex_ci = 16465;

WITH INDEXES
finance_econ=# explain select count(1) from sipro_data_store.si_finecon where dateindex_ci = 16465;

                                                  QUERY PLAN
---------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=23649.99..23650.00 rows=1 width=0)
   ->  Bitmap Heap Scan on si_finecon  (cost=25.88..23632.71 rows=6912 width=0)
         Recheck Cond: (dateindex_ci = 16465)
         ->  Bitmap Index Scan on si_finecon_dateindex_ci_16465_brin_idx  (cost=0.00..24.15 rows=6912 width=0)
               Index Cond: (dateindex_ci = 16465)
(5 rows)

# NINE(9) TIMES FASTER

finance_econ=# select count(1) from sipro_data_store.si_finecon where dateindex_ci = 16465;
 count
-------
  7012
(1 row)


JUST A GENERAL BRIN INDEX ( IN THIS CASE: WORKS FINE )
finance_econ=# explain select count(1) from sipro_data_store.si_finecon where dateindex_ci = 16555;
                                               QUERY PLAN
---------------------------------------------------------------------------------------------------------
 Aggregate  (cost=25886.53..25886.54 rows=1 width=0)
   ->  Bitmap Heap Scan on si_finecon  (cost=91.04..25867.48 rows=7618 width=0)
         Recheck Cond: (dateindex_ci = 16555)
         ->  Bitmap Index Scan on si_finecon_dateindex_ci_brin_idx  (cost=0.00..89.13 rows=7618 width=0)
               Index Cond: (dateindex_ci = 16555)
(5 rows)


BETWEEN ONE AN TWO SECONDS
finance_econ=# select count(1) from sipro_data_store.si_finecon where dateindex_ci = 16555;
 count
-------
  7005
(1 row)



finance_econ=# select count(1) from sipro_data_store.si_finecon where dateindex_ci in (16465,16555);
 count
-------
 14017
(1 row)

finance_econ=# explain select count(1) from sipro_data_store.si_finecon where sp = '500' and dateindex_ci in (16465,16555);
                                                QUERY PLAN
-----------------------------------------------------------------------------------------------------------
 Aggregate  (cost=45607.58..45607.59 rows=1 width=0)
   ->  Bitmap Heap Scan on si_finecon  (cost=141.19..45605.43 rows=858 width=0)
         Recheck Cond: (dateindex_ci = ANY ('{16465,16555}'::integer[]))
         Filter: (sp = '500'::text)
         ->  Bitmap Index Scan on si_finecon_dateindex_ci_brin_idx  (cost=0.00..140.97 rows=14529 width=0)
               Index Cond: (dateindex_ci = ANY ('{16465,16555}'::integer[]))
(6 rows)

finance_econ=# select count(1) from sipro_data_store.si_finecon where sp = '500' and dateindex_ci in (16465,16555);
 count
-------
   997
(1 row)
INSTANANEOUS RESPONSE

-- NON-WEIGHTED SP500

select dateindex_ci, avg(w52_pradchg_52w_ann) w52_pradchg_52w_ann 
from sipro_data_store.si_finecon 
where sp = '500' 
and dateindex_ci in (16465,16555)
group by dateindex_ci;

 dateindex_ci |   w52_pradchg_52w_ann
--------------+-------------------------
        16555 | -2.12007230941379749539
        16465 | -6.56761136483239768482
(2 rows)
INSTANT RESPONSE


select to_timestamp(dateindex_ci*3600*24)::date
  , avg(w52_pradchg_52w_ann) w52_pradchg_52w_ann 
from sipro_data_store.si_finecon 
where sp = '500' 
and dateindex_ci in (16465,16555)
group by dateindex_ci;

 to_timestamp |   w52_pradchg_52w_ann
--------------+-------------------------
 2015-04-30   | -2.12007230941379749539
 2015-01-30   | -6.56761136483239768482
(2 rows)
TWO SECONDS


select to_timestamp(dateindex_ci*3600*24)::date start_date
  , avg(w52_pradchg_52w_ann) w52_pradchg_52w_ann 
  , avg(w26_pradchg_26w_ann) w26_pradchg_26w_ann
  , avg(w13_pradchg_13w_ann) w13_pradchg_13w_ann
from sipro_data_store.si_finecon 
where sp = '500' 
and dateindex_ci in (16465,16555)
group by dateindex_ci;

 to_timestamp |   w52_pradchg_52w_ann   |   w26_pradchg_26w_ann    |   w13_pradchg_13w_ann
--------------+-------------------------+--------------------------+--------------------------
 2015-04-30   | -2.12007230941379749539 |   3.18762315510998911255 |  47.78430977424481713018
 2015-01-30   | -6.56761136483239768482 | -18.94869270549288928218 | -32.61242844609365774233
(2 rows)

-- OSHAUN CRITERIA
select to_timestamp(dateindex_ci*3600*24)::date start_date
  , avg(w52_pradchg_52w_ann) w52_pradchg_52w_ann 
  , avg(w26_pradchg_26w_ann) w26_pradchg_26w_ann
  , avg(w13_pradchg_13w_ann) w13_pradchg_13w_ann
from sipro_data_store.si_finecon 
where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00
and dateindex_ci in (16465,16555)
group by dateindex_ci;

 start_date |   w52_pradchg_52w_ann    |   w26_pradchg_26w_ann    |   w13_pradchg_13w_ann
------------+--------------------------+--------------------------+--------------------------
 2015-04-30 |  -9.08627500556956263753 |  -3.58520580479140509458 |  58.58578227460179241173
 2015-01-30 | -12.92663724738564609138 | -31.83155736114609606991 | -48.18132722333044723371
(2 rows)
THREE SECONDS

-- SP500 WEIGHTED
select to_timestamp(dateindex_ci*3600*24)::date start_date
  , sum(w52_pradchg_52w_ann * mktcap::numeric(15,2) / (select sum(mktcap::numeric(15,2)) from sipro_data_store.si_finecon where sp = '500' and dateindex_ci = 16465) ) w52_pradchg_52w_ann
  , sum(w26_pradchg_26w_ann * mktcap::numeric(15,2) / (select sum(mktcap::numeric(15,2)) from sipro_data_store.si_finecon where sp = '500' and dateindex_ci = 16465) ) w26_pradchg_26w_ann
  , sum(w13_pradchg_13w_ann * mktcap::numeric(15,2) / (select sum(mktcap::numeric(15,2)) from sipro_data_store.si_finecon where sp = '500' and dateindex_ci = 16465) ) w13_pradchg_13w_ann
from sipro_data_store.si_finecon 
where  sp = '500'
and dateindex_ci = 16465
group by dateindex_ci;
 start_date |     w52_pradchg_52w_ann     |    w26_pradchg_26w_ann     |     w13_pradchg_13w_ann
------------+-----------------------------+----------------------------+------------------------------
 2015-01-30 | -1.531545375411261823669246 | -13.1559185722019857923303 | -25.255763450461511293668878
(1 row)

select sum(mktcap::numeric(15,2)) over(partition by dateindex_ci) from sipro_data_store.si_finecon where sp = '500' and dateindex_ci in (16465,16555);
     sum
-------------
 18252014.50
 18252014.50
 18252014.50
 18252014.50

ERROR:  aggregate function calls cannot contain window function calls

-- WORKING ON IT
select to_timestamp(dateindex_ci*3600*24)::date start_date
  , ticker_ci
  , w52_pradchg_52w_ann
  , mktcap::numeric(15,2) 
  , sum(mktcap::numeric(15,2)) over( partition by dateindex_ci)  mktcap_tot
from sipro_data_store.si_finecon 
where  sp = '500'
and dateindex_ci in (16465,16555);

-- SEEMS LIKE MANY ( AT LEAST 10 PERCENT ) sp MISSING 52w

 start_date | ticker_ci |   w52_pradchg_52w_ann    |  mktcap   | mktcap_tot
------------+-----------+--------------------------+-----------+-------------
 2015-01-30 | MJN       | -25.91983445992550696600 |  19897.90 | 18252014.50
 2015-01-30 | LYB       |   4.06620238553289726800 |  39597.80 | 18252014.50
 2015-01-30 | KMI       | -55.63497872340425531900 |  87237.00 | 18252014.50
 2015-01-30 | MOS       | -47.82170954356846473000 |  18079.50 | 18252014.50
 2015-01-30 | TRIP      |                    -1.82 |   9577.40 | 18252014.50
 2015-01-30 | ZTS       |   0.11871312427409988400 |  21421.60 | 18252014.50
 2015-01-30 | COV       |                          |  48500.50 | 18252014.50
 2015-01-30 | XYL       |   6.85006954102920723200 |   6201.90 | 18252014.50
 2015-01-30 | PSX       |  16.72794011228945726800 |  38923.10 | 18252014.50
 2015-01-30 | MPC       |  -3.27361091170136396300 |  25943.10 | 18252014.50
 2015-01-30 | MNK       |                   -46.58 |  12324.40 | 18252014.50
 2015-01-30 | TYC       | -15.60802558883396336100 |  17136.80 | 18252014.50
 2015-01-30 | APD       | -11.62306053192328940100 |  31163.80 | 18252014.50
 2015-01-30 | ALTR      |                          |   9957.50 | 18252014.50

-- SEEMS *RIGHT* WEIGHTED SP500
select sq.start_date, sum( sq.w52_pradchg_52w_ann * sq.mktcap / sq.mktcap_tot )
from 
( select to_timestamp(dateindex_ci*3600*24)::date start_date
    , ticker_ci
    , w52_pradchg_52w_ann
    , mktcap::numeric(15,2) 
    , sum(mktcap::numeric(15,2)) over( partition by dateindex_ci)  mktcap_tot
  from sipro_data_store.si_finecon 
  where  sp = '500'
  and dateindex_ci in (16465,16555)  
) sq group by sq.start_date;

 start_date |             sum
------------+-----------------------------
 2015-01-30 | -1.531545375411261823669246
 2015-04-30 | -0.022016468110164029392151
(2 rows)


-- USEFUL
select 
    to_timestamp(dateindex_ci*3600*24)::date start_date 
  , ticker_ci 
  , percent_rank() over (partition by dateindex_ci order by mktcap::numeric(15,2) desc)
from sipro_data_store.si_finecon 
where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00
and dateindex_ci in (16465,16555) limit 5; 
 start_date | ticker_ci |     percent_rank
------------+-----------+----------------------
 2015-01-30 | AAPL      |                    0
 2015-01-30 | XOM       | 0.000302846759539673
 2015-01-30 | GOOGL     | 0.000605693519079346
 2015-01-30 | BRK.A     | 0.000908540278619019
 2015-01-30 | MSFT      |  0.00121138703815869
(5 rows)

BUT I WANT JUST ONE PP

16465

select 
    to_timestamp(dateindex_ci*3600*24)::date start_date 
  , ticker_ci 
  , percent_rank() over (order by mktcap::numeric(15,2) desc)
from sipro_data_store.si_finecon 
where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00
and dateindex_ci = 16465  limit 5;

finance_econ-# and dateindex_ci = 16465  limit 5;
 start_date | ticker_ci |     percent_rank
------------+-----------+----------------------
 2015-01-30 | AAPL      |                    0
 2015-01-30 | XOM       | 0.000302846759539673
 2015-01-30 | GOOGL     | 0.000605693519079346
 2015-01-30 | BRK.A     | 0.000908540278619019
 2015-01-30 | MSFT      |  0.00121138703815869
(5 rows)

ERROR:  window functions are not allowed in WHERE
LINE 6: ...ge != 'O' and mktcap::numeric(15,2) >= 200.00 and percent_ra...


select sq.*
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , percent_rank() over (order by mktcap::numeric(15,2) desc) <= 10.00 mkt010
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 
  and dateindex_ci = 16465 limit 5
) sq where mkt010 = 't';

 start_date | ticker_ci | mkt010 |   w52_pradchg_52w_ann    |   w26_pradchg_26w_ann    |   w13_pradchg_13w_ann
------------+-----------+--------+--------------------------+--------------------------+--------------------------
 2015-01-30 | AAPL      | t      | -16.42262276556400246600 | -37.78518594616807068000 | -72.41933018286418738400
 2015-01-30 | XOM       | t      |  -7.86725626204238921000 |   0.24628901734104046200 | -20.11086962106615286000
 2015-01-30 | GOOGL     | t      |                    48.34 |                    31.58 |                    13.00
 2015-01-30 | BRK.A     | t      |                   -11.65 |                   -18.36 |                   -20.00
 2015-01-30 | MSFT      | t      |  34.32982755491014703200 |  39.02362316209838446200 |  21.33545108005082592000
(5 rows)


-- EXAMPLE OF TECHNOLOGY
select sq.start_date
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann_mkt010_of_gr_200m
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann_mkt010_of_gr_200m
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann_mkt010_of_gr_200m
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , percent_rank() over (partition by dateindex_ci order by mktcap::numeric(15,2) desc) <= 0.10 mkt010_of_gr_200m
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 
  and dateindex_ci in (16465,16555)
) sq group by sq.start_date;

 start_date | w52_pradchg_52w_ann_mkt010_of_gr_200m | w26_pradchg_26w_ann_mkt010_of_gr_200m | w13_pradchg_13w_ann_mkt010_of_gr_200m
------------+---------------------------------------+---------------------------------------+---------------------------------------
 2015-01-30 |              -12.92663724738564609138 |              -31.83155736114609606991 |              -48.18132722333044723371
 2015-04-30 |               -9.08627500556956263753 |               -3.58520580479140509458 |               58.58578227460179241173
(2 rows)

-- OR ( SO I CAN DO: rollup )
-- WORK IN PROGRESS

select sq.start_date
  , sq.mkt010_of_gr_200m
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann_mkt010_of_gr_200m
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann_mkt010_of_gr_200m
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann_mkt010_of_gr_200m
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , percent_rank() over (partition by dateindex_ci order by mktcap::numeric(15,2) desc) <= 0.10 mkt010_of_gr_200m
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 
  and dateindex_ci in (16465,16555)
) sq group by sq.start_date, sq.mkt010_of_gr_200m ;


select col1, col2, col3, sum(aggr) from mytabp
group by rollup(col1, col2, col3);   --left to right totals to subtotals

 col1 | col2 | col3 | sum
------+------+------+------
 A1   | B1   | C1   |  256
 A1   | B1   | C2   | 1024
 A1   | B1   |      | 1280
 A1   | B2   | C1   |  512
 A1   | B2   | C2   |  128
 A1   | B2   |      |  640
 A1   |      |      | 1920
 A2   | B1   | C1   |   16
 A2   | B1   | C2   |   64
 A2   | B1   |      |   80
 A2   | B2   | C1   |   32
 A2   | B2   | C2   |    8
 A2   | B2   |      |   40
 A2   |      |      |  120
      |      |      | 2040  -- rollup: AUTOMATICALLY INCLUDES ()
(15 rows)


select sq.start_date
  , sq.mkt010_of_gr_200m
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann_mkt010_of_gr_200m
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann_mkt010_of_gr_200m
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann_mkt010_of_gr_200m
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , percent_rank() over (partition by dateindex_ci order by mktcap::numeric(15,2) desc) <= 0.10.00 mkt010_of_gr_200m
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 
  and dateindex_ci in (16465,16555)
) sq group by rollup(sq.start_date, sq.mkt010_of_gr_200m);

 start_date | mkt010_of_gr_200m | w52_pradchg_52w_ann_mkt010_of_gr_200m | w26_pradchg_26w_ann_mkt010_of_gr_200m | w13_pradchg_13w_ann_mkt010_of_gr_200m
------------+-------------------+---------------------------------------+---------------------------------------+---------------------------------------
 2015-01-30 | t                 |              -12.92663724738564609138 |              -31.83155736114609606991 |              -48.18132722333044723371
 2015-01-30 |                   |              -12.92663724738564609138 |              -31.83155736114609606991 |              -48.18132722333044723371
 2015-04-30 | t                 |               -9.08627500556956263753 |               -3.58520580479140509458 |               58.58578227460179241173
 2015-04-30 |                   |               -9.08627500556956263753 |               -3.58520580479140509458 |               58.58578227460179241173
            |                   |              -10.99916660624638117536 |              -17.65476623676877331371 |                5.40488575309141236689
(5 rows)    TOO_COMPLICATED


--JUST SIMPLY ( ALL INVESTIBLE COMPANIES )

select 
    sq.start_date
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann_mkt010_of_gr_200m
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann_mkt010_of_gr_200m
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann_mkt010_of_gr_200m
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 
  and dateindex_ci in (16465,16555)
) sq group by rollup(sq.start_date);

 start_date | w52_pradchg_52w_ann_mkt010_of_gr_200m | w26_pradchg_26w_ann_mkt010_of_gr_200m | w13_pradchg_13w_ann_mkt010_of_gr_200m
------------+---------------------------------------+---------------------------------------+---------------------------------------
 2015-01-30 |              -12.92663724738564609138 |              -31.83155736114609606991 |              -48.18132722333044723371
 2015-04-30 |               -9.08627500556956263753 |               -3.58520580479140509458 |               58.58578227460179241173
            |              -10.99916660624638117536 |              -17.65476623676877331371 |                5.40488575309141236689


By default, B-tree indexes store their entries in ascending order with nulls last
11.4. Indexes and ORDER BY
https://www.postgresql.org/docs/9.5/static/indexes-ordering.html


-- DEBT LOADING

-- SANITY CHECK ( LEAST DEBT_LOADED COMPANIES GET A BETTER RANK )

select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , liab_q1::numeric(15,2)/nullif(assets_q1::numeric(15,2),0.00::numeric(15,2))  liab_over_assets
    , percent_rank() over (partition by dateindex_ci order by -1.00 * liab_q1::numeric(15,2)/nullif(assets_q1::numeric(15,2),0.00::numeric(15,2)) desc nulls last)  liab_over_assets_percent_rank
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq_ci is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
  and dateindex_ci in (16465) 
  order by -1.00 * liab_q1::numeric(15,2)/nullif(assets_q1::numeric(15,2),0.00::numeric(15,2)) desc nulls last
limit 10;

 start_date | ticker_ci |    liab_over_assets    | liab_over_assets_percent_rank |   w52_pradchg_52w_ann    |   w26_pradchg_26w_ann    |    w13_pradchg_13w_ann
------------+-----------+------------------------+-------------------------------+--------------------------+--------------------------+---------------------------
 2015-01-30 | SYBT      | 0.00000000000000000000 |                             0 |  26.95384851586489252800 |  14.69863868986693961200 |   17.53404298874104401200
 2015-01-30 | SDR       | 0.00000000000000000000 |                             0 | -27.23707865168539325800 | -72.16539325842696629200 | -127.52382022471910112400
 2015-01-30 | PER       | 0.00000000000000000000 |                             0 | -26.93125000000000000000 | -92.90926470588235294200 | -113.89058823529411764800
 2015-01-30 | EEQ       | 0.00013817880337156280 |          0.000908540278619019 |                   -49.18 |                   -85.40 |                   -137.56
 2015-01-30 | AB        | 0.00039052330122363968 |           0.00121138703815869 | -17.93452819956616052100 | -59.11437093275488069400 | -106.75774403470715835200
 2015-01-30 | HQH       | 0.00129718510831495654 |           0.00151423379769836 | -16.30360050356693243800 | -52.82257658413764162800 |  -86.28107427612253462000
 2015-01-30 | HQL       | 0.00150511739915713426 |           0.00181708055723804 | -19.85613986784140969200 | -62.45925110132158590400 |  -97.79656387665198238000
 2015-01-30 | CEF       | 0.00163423884554901175 |           0.00211992731677771 | -16.74247903075489282400 |   6.15194780987884436200 |  -14.36093196644920782800
 2015-01-30 | TEI       | 0.00231046931407942238 |           0.00242277407631738 |   8.86516842105263157900 |   2.47360000000000000000 |  -14.04589473684210526400
 2015-01-30 | HTWO      | 0.00270416441319632234 |           0.00272562083585706 |                   -39.48 |                   -84.50 |                   -157.44
(10 rows)

-- TOP 10 PERCENT LEAST DEBT LOADED COMPANIES
-- liab_over_assets_10 = 't' ( MORE EXTREME LOSSES )
select 
    sq.start_date
  , sq.liab_over_assets_10
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann_mkt010_of_gr_200m
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann_mkt010_of_gr_200m
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann_mkt010_of_gr_200m
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , percent_rank() over (partition by dateindex_ci order by -1.00 * liab_q1::numeric(15,2)/nullif(assets_q1::numeric(15,2),0.00::numeric(15,2)) desc nulls last) < 0.10 liab_over_assets_10
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq_ci is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
  and dateindex_ci in (16465,16555)
) sq group by rollup(sq.start_date, liab_over_assets_10);

 start_date | liab_over_assets_10 | w52_pradchg_52w_ann_mkt010_of_gr_200m | w26_pradchg_26w_ann_mkt010_of_gr_200m | w13_pradchg_13w_ann_mkt010_of_gr_200m
------------+---------------------+---------------------------------------+---------------------------------------+---------------------------------------
 2015-01-30 | f                   |              -12.40379941250261608228 |              -30.94984205089372408136 |              -47.76555016863513049752
 2015-01-30 | t                   |              -17.54885048139843326551 |              -39.62647177584597218121 |              -51.85705624749623175459
 2015-01-30 |                     |              -12.92663724738564609138 |              -31.83155736114609606991 |              -48.18132722333044723371
 2015-04-30 | f                   |               -8.56964041251568700800 |               -2.88796984318825720264 |               60.01118238649942305157
 2015-04-30 | t                   |              -13.72461388345891773921 |               -9.84498149780079890430 |               45.78855799954602047235
 2015-04-30 |                     |               -9.08627500556956263753 |               -3.58520580479140509458 |               58.58578227460179241173
            |                     |              -10.99916660624638117536 |              -17.65476623676877331371 |                5.40488575309141236689
(7 rows)

x SO THE GREATER THE DEBTLOAD ON THE COMPANY, THE BETTER IT PERFORMES x

-- TOP 10 PERCENT MOST DEBT LOADED COMPANIES  
-- liab_over_assets_90 = 't'

select 
    sq.start_date
  , sq.liab_over_assets_90
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann_mkt010_of_gr_200m
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann_mkt010_of_gr_200m
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann_mkt010_of_gr_200m
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , percent_rank() over (partition by dateindex_ci order by -1.00 * liab_q1::numeric(15,2)/nullif(assets_q1::numeric(15,2),0.00::numeric(15,2)) desc nulls last) >= 0.90 liab_over_assets_90
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq_ci is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
  and dateindex_ci in (16465,16555)
) sq group by rollup(sq.start_date, liab_over_assets_90);

 start_date | liab_over_assets_90 | w52_pradchg_52w_ann_mkt010_of_gr_200m | w26_pradchg_26w_ann_mkt010_of_gr_200m | w13_pradchg_13w_ann_mkt010_of_gr_200m
------------+---------------------+---------------------------------------+---------------------------------------+---------------------------------------
 2015-01-30 | f                   |              -12.99365732699622303894 |              -31.32505099808481511524 |              -47.08371157334287038893
 2015-01-30 | t                   |              -12.32578950834525212793 |              -36.37248307808473197049 |              -58.02165993350388141491
 2015-01-30 |                     |              -12.92663724738564609138 |              -31.83155736114609606991 |              -48.18132722333044723371
 2015-04-30 | f                   |               -9.03202737559932702243 |               -2.93406663955038302629 |               59.19193195362158240417
 2015-04-30 | t                   |               -9.57673538159792704367 |               -9.47224566268254449046 |               53.10549862599565314465
 2015-04-30 |                     |               -9.08627500556956263753 |               -3.58520580479140509458 |               58.58578227460179241173
            |                     |              -10.99916660624638117536 |              -17.65476623676877331371 |                5.40488575309141236689
(7 rows)
NO DIFFERENCE

-- TOP 10 PERCENT LEAST DEBT LOADED COMPANIES ( OVER ENTIRE AVAILABLE HISTORY : THIS COULD TAKE A WHILE )
-- liab_over_assets_10 = 't'
select 
    sq.start_date
  , sq.liab_over_assets_10
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann_mkt010_of_gr_200m
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann_mkt010_of_gr_200m
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann_mkt010_of_gr_200m
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , percent_rank() over (partition by dateindex_ci order by -1.00 * liab_q1::numeric(15,2)/nullif(assets_q1::numeric(15,2),0.00::numeric(15,2)) desc nulls last) < 0.10 liab_over_assets_10
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq_ci is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
  -- and dateindex_ci in (16465,16555)
) sq group by rollup(sq.start_date, liab_over_assets_10);


-- ONLY 30 SECONDS 

 start_date | liab_over_assets_10 | w52_pradchg_52w_ann_mkt010_of_gr_200m | w26_pradchg_26w_ann_mkt010_of_gr_200m | w13_pradchg_13w_ann_mkt010_of_gr_200m
------------+---------------------+---------------------------------------+---------------------------------------+---------------------------------------
 2010-10-29 | f                   |                5.31768611872045043349 |               44.17614373096209477523 |               48.21266944932426032907
 2010-10-29 | t                   |                3.35895416880109399775 |               31.38777605155824355939 |               31.04387469384940815623
 2010-10-29 |                     |                5.11774750525471143018 |               42.88293801057294128150 |               46.48795034146833910623
 2010-11-30 | f                   |                1.04839309559951275405 |               32.81050974660709017101 |               52.85061681414690176399
 2010-11-30 | t                   |                1.03634597949083234838 |               25.35678242350052899173 |               39.92186179894042352588
 2010-11-30 |                     |                1.04716297493893440664 |               32.05106422182442296752 |               51.54572805099725721256
 2010-12-31 | f                   |               -6.24716516665886670781 |                9.55324499576762689379 |               27.88793153752753501093
 2010-12-31 | t                   |               -6.15888672967301148171 |                7.06684286447291024549 |               15.92290543712861313740
 2010-12-31 |                     |               -6.23812879121936971616 |                9.29990443897438117313 |               26.67900066619355518046
 2011-01-31 | f                   |               -0.43705527509911664162 |                3.74493229890159311105 |               40.12990308018189789812
 2011-01-31 | t                   |               -0.13369372952821303544 |                4.69688489786857707873 |               34.71020290614250326974
 2011-01-31 |                     |               -0.40601270303676113977 |                3.84178259551252902019 |               39.58332127882904372822
 2011-02-28 | f                   |               -0.68646160323587317940 |              -20.58506411563434233092 |               16.36749645232002338433
 2011-02-28 | t                   |                0.50579684110360670575 |              -13.89565620506113156771 |               14.08232109014389055503
 2011-02-28 |                     |               -0.56439522033183113063 |              -19.90578649116112446093 |               16.13636365200094035458
 2011-03-31 | f                   |               -2.01814341991369663404 |              -44.90010653304643891461 |               -7.35247145433918232268
 2011-03-31 | t                   |                0.21649169161471742322 |              -34.27763705872534142004 |               -0.52767713728678412764
 2011-03-31 |                     |               -1.78942361511008909226 |              -43.81604617599064551753 |               -6.65888627812047068542
 2011-04-29 | f                   |               -5.35224872949153218828 |              -26.05994640808125170445 |              -29.53921886007930029455
 2011-04-29 | t                   |               -5.89323816230843043170 |              -22.27022338410285976230 |              -24.81557781374249241941
 2011-04-29 |                     |               -5.40783220025319180359 |              -25.67520892629269716702 |              -29.05958761537433211030
 2011-05-31 | f                   |               -7.68018477144116755556 |              -21.45168669906175118557 |              -44.34302963020143086822
 2011-05-31 | t                   |               -9.21149407820989770161 |              -19.55225691653539687586 |              -31.79122657905974306481
 2011-05-31 |                     |               -7.83715490983732745310 |              -21.25896522097161999822 |              -43.07200986909782505495
 2011-06-30 | f                   |               -4.88121390212006158486 |              -24.35245530353675451648 |              -88.14234391393481156805
 2011-06-30 | t                   |               -5.17569722821477795726 |              -23.93125620328915941922 |              -72.85250911871245419046
 2011-06-30 |                     |               -4.91108629071910961367 |              -24.30997810869557386106 |              -86.60338570528242144989
 2011-07-29 | f                   |               -0.15205531187402888244 |                4.81373985340053391516 |              -24.88369890723035023726
 2011-07-29 | t                   |               -3.26381068828328878386 |                0.94403793699351092611 |              -24.92386881013942886945
 2011-07-29 |                     |               -0.46765871820073250550 |                4.42516016007148644924 |              -24.88772062895858543600
 2011-08-31 | f                   |               12.91512024403573337272 |               21.69746066068902423365 |                2.64787762954410338393
 2011-08-31 | t                   |                6.87322446545749453655 |               15.49008177565057151399 |               -6.08153023237120699562
 2011-08-31 |                     |               12.30168190350529675236 |               21.07310608408902040291 |                1.77254958504940498671
 2011-09-30 | f                   |               24.61937025346930949482 |               53.74393472208857424582 |               51.84525277222869731771
 2011-09-30 | t                   |               17.66468088986243919232 |               42.79595055837954596583 |               33.63662609425496965209
 2011-09-30 |                     |               23.91470021146461208437 |               52.64008262924641077103 |               50.02152260416707672002
 2011-10-31 | f                   |               14.41640976144821521528 |               19.88735215765404787855 |               38.59192323860305104687
 2011-10-31 | t                   |                7.75549031277924545682 |               11.86150603140121857159 |               36.77832525948335558629
 2011-10-31 |                     |               13.74005736222781998360 |               19.07451326982850424354 |               38.40978602575820716718
 2011-11-30 | f                   |               13.57495702790220019374 |                9.06100258777038080442 |               41.94429615856004965643
 2011-11-30 | t                   |                7.06502339643599706892 |               -0.50033183127169054579 |               40.16453897726147662384
 2011-11-30 |                     |               12.91372792005201666880 |                8.09863155584443140477 |               41.76637518534502774453
 2011-12-30 | f                   |               15.21682620076764839335 |               15.63444729262022679868 |               50.94077479892020579765
 2011-12-30 | t                   |                9.29445770092219155146 |                9.38852250894212972526 |               45.48470623587942482394
 2011-12-30 |                     |               14.61433012975974837447 |               15.00403562967135054127 |               50.39281473990871639610
 2012-01-31 | f                   |               11.70970609285843374592 |                0.18466854411069392491 |               15.28465258449178946369
 2012-01-31 | t                   |                4.81160825317949624298 |               -5.68754775671246963909 |                3.84597210598552636035
 2012-01-31 |                     |               11.00860192564979289375 |               -0.40897080870476250096 |               14.13143411663148500913
 2012-02-29 | f                   |               11.37034984788092185926 |                1.03030470485567868124 |              -25.67852271524720011719
 2012-02-29 | t                   |                2.84134300433153505823 |               -5.55274925623085058116 |              -41.66460537869423850128
 2012-02-29 |                     |               10.50228416055462007571 |                0.36148071182397522588 |              -27.28859738876233817321
 2012-03-30 | f                   |               14.39189345122928319398 |                1.89923089399601754452 |              -16.64743815400061289135
 2012-03-30 | t                   |                5.91790947821954774593 |               -1.02770339320597898728 |              -23.19172498762159379541
 2012-03-30 |                     |               13.46588199693208199448 |                1.60409253210035082980 |              -17.30341486499928602159
 2012-04-30 | f                   |               16.40583046159184855672 |                0.49438159901570733579 |              -15.17567642539973114788
 2012-04-30 | t                   |                8.77835223988146648943 |               -1.58436476336785543155 |              -16.22183438948143147694
 2012-04-30 |                     |               15.57476164465415318442 |                0.28400244908773230873 |              -15.28097966133029656332
 2012-05-31 | f                   |               30.35434089759953519047 |               24.26116204037412137479 |               38.55495271175754122465
 2012-05-31 | t                   |               20.44461066760189276837 |               20.07729842800930573989 |               39.17003356923782154954
 2012-05-31 |                     |               29.28682930778271598646 |               23.83920626472124082172 |               38.61700115936158040920
 2012-06-29 | f                   |               28.08769858126400402541 |           12.303325452791337305132444 |               23.02785417070651915720
 2012-06-29 | t                   |               13.98346824239130086538 |                6.73048617433244505028 |               21.91838402211762696985
 2012-06-29 |                     |               27.25071140467247660369 |           11.739855054699334097846625 |               22.91618028439828641172
 2012-07-31 | f                   |               34.09026348317966890615 |               33.44651676044832801751 |           24.010858919213281780589827
 2012-07-31 | t                   |               19.14856958978256291937 |               21.50707912797545312707 |               14.53258952140910257823
 2012-07-31 |                     |               33.20541849020189702679 |               32.24499583823210942019 |           23.059624572818913885805647
 2012-08-31 | f                   |               27.11180776752463295760 |               25.34030484610529139216 |                8.85391353148589210903
 2012-08-31 | t                   |               12.89320740921298574092 |               14.40179676409768219573 |                2.03719296057472482156
 2012-08-31 |                     |               26.28101309681722942434 |               24.24120460391196533313 |                8.17163590253475958218
 2012-09-28 | f                   |               29.33281913152888593159 |               27.23431631509263602841 |                2.85163910053825549749
 2012-09-28 | t                   |               14.56679776377041002563 |           11.341347480986655465066951 |               -5.25705922317990190984
 2012-09-28 |                     |               28.45486723518441465902 |           25.512279059929911272111092 |                2.03720761443713456316
 2012-10-31 | f                   |               36.07615842347535618106 |               34.63861938504242377769 |               32.13117163297158369868
 2012-10-31 | t                   |               20.13292863105595095968 |               20.57953750062151294624 |               20.45855553421491322533
 2012-10-31 |                     |               35.14693450410085887921 |               33.12703835890697290725 |               30.95870677669231040894
 2012-11-30 | f                   |               39.90851529862551245665 |               40.95631128294880853234 |           39.179768435068843868653384
 2012-11-30 | t                   |               25.17311327061216986637 |               24.61255748746795506914 |               23.64689656953879472501
 2012-11-30 |                     |               39.02449579463749154868 |               39.20940513956298616217 |           37.618140207537929023364544
 2012-12-31 | f                   |               39.08994694586846745466 |               38.42615661508721381038 |               56.26870240261267050176
 2012-12-31 | t                   |               24.26913567199010974695 |               24.71786788346221730650 |               35.43469487603260130106
 2012-12-31 |                     |               38.20589855409326717034 |               37.59877018958447053716 |               54.02504005359635535707
 2013-01-31 | f                   |               27.20110257468464246706 |               34.61648208932348045879 |               22.68099789555449151544
 2013-01-31 | t                   |               18.19203732171877655102 |               23.88248273937780479100 |               12.31497557486921057252
 2013-01-31 |                     |               26.67226199540321442266 |               33.98292853203360679318 |               21.56906024262157340731
 2013-02-28 | f                   |               31.65190939371696773486 |               23.58565063465586093992 |           33.909315123158723156977331
 2013-02-28 | t                   |               25.26952642866942657535 |               20.40756664753826188801 |               23.27690304038769505318
 2013-02-28 |                     |               31.28497796889716136157 |               23.40590210250542773971 |           32.782096650200190091531469
 2013-03-29 | f                   |               25.22685985921956017779 |               28.86966250469689545035 |           14.945513506573186741737032
 2013-03-29 | t                   |               19.91280823217439081211 |               22.15995934831323256356 |                8.85379017737128387200
 2013-03-29 |                     |               24.95439127958097441197 |               28.53067447052459857160 |           14.634524627905221730369076
 2013-04-30 | f                   |               22.29209126145291568709 |               33.99477593568486806535 |               49.66597017528516654137
 2013-04-30 | t                   |               14.66646381805464209213 |               21.80572722863512079737 |               46.58305347391825043234
 2013-04-30 |                     |               21.90687915348743588693 |               33.38244678620731838803 |               49.50884617285041032396
 2013-05-31 | f                   |               17.86026330004223579088 |               31.34860485414267802903 |               12.73985396820702685994
 2013-05-31 | t                   |                8.26910102092549327659 |               17.63239602208045401132 |                8.59205980278383220952
 2013-05-31 |                     |               17.36523556950717811273 |               30.63678563331709354907 |               12.52463180789935370567
 2013-06-28 | f                   |               25.00694411914274922718 |               35.25462656655016593073 |           31.550965327441483425721916
 2013-06-28 | t                   |               22.89198143496708875116 |               31.54221475390900424863 |               35.66340984902001493663
 2013-06-28 |                     |               24.80041588387593137533 |               34.88644338513171793524 |           31.957396775607892261650569
 2013-07-31 | f                   |               12.33793070506372628058 |               15.40606256729919445951 |           16.749073337218197760032342
 2013-07-31 | t                   |               11.43014138713293021659 |               18.16454310396362667153 |                9.46911453220089647283
 2013-07-31 |                     |               12.24996430444683305618 |               15.67825168528128822356 |           16.032019511843932075204084
 2013-08-30 | f                   |           19.537945972959658405137112 |           34.870682731245831943319101 |           48.861250645279422650155764
 2013-08-30 | t                   |               13.72507744245702473599 |               34.29712317923677664442 |               38.25203085577399963235
 2013-08-30 |                     |           18.966661408578691429710996 |           34.813550822744929950655805 |           47.805453893280332243552823
 2013-09-30 | f                   |            8.921143524560401913566684 |               23.23577329532028331529 |               31.54470167391300067578
 2013-09-30 | t                   |                5.23639028196628013958 |               20.99226931268039649339 |               24.98743847812651069773
 2013-09-30 |                     |            8.565481609366884147277017 |               23.01450207583872409794 |               30.89436034621971013469
 2013-10-31 | f                   |           10.043115467491440996774470 |               11.08307871903753799090 |               15.51491222361936690647
 2013-10-31 | t                   |                9.10977993086605269334 |                8.80475251570914422870 |               32.25439878146659092265
 2013-10-31 |                     |            9.952938120957587054413330 |               10.85950128218036734631 |               17.17467932505636809540
 2013-11-29 | f                   |            6.257283330606193391495915 |                7.17069947981095814265 |               20.78237989416299901032
 2013-11-29 | t                   |                7.53806862111386401414 |                1.94969379556302464634 |           36.189158911032584492496894
 2013-11-29 |                     |            6.382834530312228576656723 |                6.65694335795139966009 |           22.321146284805680935029777
 2013-12-31 | f                   |                5.25951961906169313120 |               12.34187927276740764816 |           12.299209741679749267492656
 2013-12-31 | t                   |                3.28792060339223551363 |               12.14113029600923435921 |               13.52729217007452850890
 2013-12-31 |                     |                5.06704656143057016885 |               12.32210381421167709111 |           12.421375009425826783653996
 2014-01-31 | f                   |            3.121787784113649124921406 |                4.60881740859328780171 |               12.35488054300491962724
 2014-01-31 | t                   |                0.66656461081201091151 |               -4.73579120787623829211 |               -6.09956931832481173853
 2014-01-31 |                     |            2.882234907400606432169997 |                3.68910662554243379433 |               10.52131974721502911436
 2014-02-28 | f                   |                4.56048160155500781608 |            5.149563861609772225594606 |               -4.97013953350900397401
 2014-02-28 | t                   |                0.89288065642008706143 |               -4.59039768940542252623 |              -31.54829148003485356213
 2014-02-28 |                     |                4.19992220995439256343 |            4.181228742588683729313099 |               -7.59564086561262133454
 2014-03-31 | f                   |                4.88445946428886737004 |               -8.70144649500935210632 |               11.29942276284480366721
 2014-03-31 | t                   |                5.52566266056782262465 |              -14.67144029411879911136 |                9.18833812580107267149
 2014-03-31 |                     |                4.94746326093816769979 |               -9.29082923641596519157 |               11.08977547719195045367
 2014-04-30 | f                   |            7.267479639759746256186737 |            6.634855496234840779927614 |            2.299612952183068180620442
 2014-04-30 | t                   |               10.42777983859611630750 |               10.50909450561423994430 |                6.96167949874748538806
 2014-04-30 |                     |            7.577760054513756239267838 |            7.017173902921989578863963 |            2.761849477176985458487150
 2014-05-30 | f                   |            6.721314017873627771345447 |                4.78485983269665661955 |           15.318626007812940208379158
 2014-05-30 | t                   |               15.79294440709591645141 |               13.50845980029292273432 |               24.89510121127767995702
 2014-05-30 |                     |            7.613932789274626311697499 |                5.64568847997559957154 |           16.272481442334100701161374
 2014-06-30 | f                   |                2.94410759878315563209 |           -1.551387901992297829129684 |          -26.505195413757503295126107
 2014-06-30 | t                   |                6.84200919490947713003 |               -1.76253058685856417831 |              -35.02453216881007725657
 2014-06-30 |                     |                3.32627852784797648016 |           -1.572182257320036181700246 |          -27.350489318410501490940633
 2014-07-31 | f                   |                7.22998572348049227722 |                3.83804721382115178645 |               14.38499181385185523724
 2014-07-31 | t                   |               14.74275487153092520832 |               15.64441857687034463732 |               16.12257860304990713832
 2014-07-31 |                     |                7.96611401744510621597 |                5.00164721613579437323 |               14.55780214340217695451
 2014-08-29 | f                   |               -3.41870000661249930384 |                4.76094648785938924165 |               -4.78216064866697083371
 2014-08-29 | t                   |               -0.35689159215130983109 |               16.71539353672625643843 |               -3.11693227714934921127
 2014-08-29 |                     |               -3.11653527863944000547 |                5.93888620621936425830 |               -4.61698921416116526250
 2014-09-30 | f                   |               -2.88634573237838172078 |           17.311576932463368376663217 |               28.99887953978229375454
 2014-09-30 | t                   |               -6.43892197542091005580 |               26.95439553827400620908 |               33.62827501996328673903
 2014-09-30 |                     |               -3.24126533801060386653 |           18.268680516166657491543419 |               29.46068582085298032521
 2014-10-31 | f                   |               -0.79809368833844006329 |               10.04564045747066188811 |           -9.241680300760428161050773
 2014-10-31 | t                   |               -3.48405116593333729068 |               12.03592572994021772521 |                9.84156022755497571745
 2014-10-31 |                     |               -1.06414752050399139749 |               10.24227990728990701698 |           -7.348455586143623028856448
 2014-11-28 | f                   |               -0.99932376568767660707 |                9.13435167048386693610 |               14.35137319597933134917
 2014-11-28 | t                   |                0.84604749984099493668 |               20.02410017219139400260 |               32.64700239806121711988
 2014-11-28 |                     |               -0.81542881198899532385 |               10.21324342019007563621 |               16.17030237636373418658
 2014-12-31 | f                   |               -6.91609185013479839804 |            5.003949041412811568567437 |                9.33765432049598037665
 2014-12-31 | t                   |               -5.22842953574619543134 |               13.27586830135476485629 |               19.63678509542628864844
 2014-12-31 |                     |               -6.74637392942090693428 |            5.831394008681400961373937 |               10.36163579796707498506
 2015-01-30 | f                   |              -12.40379941250261608228 |               10.53725615776423469502 |               22.08300431685402564314
 2015-01-30 | t                   |              -17.54885048139843326551 |               14.49442131316970389485 |                8.10601384421500715257
 2015-01-30 |                     |              -12.92663724738564609138 |               10.93653547335156083285 |               20.68273596987088868039
 2015-02-27 | f                   |              -16.15625903728939284969 |              -14.94652399152827824956 |                3.61125821389760526075
 2015-02-27 | t                   |              -22.87457408780747137793 |              -13.88437269898186135604 |               12.18164908645867469517
 2015-02-27 |                     |              -16.83145601011854225719 |              -14.83933738243289288622 |                4.46907010465890256212
 2015-03-31 | f                   |          -10.546687204398229609549269 |              -24.71389684419894263243 |               -0.04380530437161205780
 2015-03-31 | t                   |              -18.83936220709850415365 |              -29.18315707708785505651 |               11.21584952605091253160
 2015-03-31 |                     |          -11.377517394681328723734816 |              -25.16395966899398111273 |                1.08419874019696916239
 2015-04-30 | f                   |               -8.56964041251568700800 |              -14.83565756936667469093 |           -9.795408091902384538136417
 2015-04-30 | t                   |              -13.72461388345891773921 |              -18.32306017792533586364 |               10.77008717080278678422
 2015-04-30 |                     |               -9.08627500556956263753 |              -15.18471806921322571740 |           -7.733876010752956401340792
 2015-05-29 | f                   |               -8.34313534173184936224 |              -12.76111154663670895245 |              -33.02438342885188536092
 2015-05-29 | t                   |              -14.90015177794461564775 |              -15.57251073854937431591 |              -32.31657860786951534300
 2015-05-29 |                     |               -8.99904259891337098189 |              -13.04225146582797548880 |              -32.95343197940558498473
 2015-06-30 | f                   |                                       |              -19.82796488083283746648 |              -51.14661030703551673112
 2015-06-30 | t                   |                                       |              -24.59800538782724103269 |              -67.62872205336703696482
 2015-06-30 |                     |                                       |              -20.30366761705628662479 |              -52.80025134777258150449
 2015-07-31 | f                   |                                       |              -31.56525540605103008737 |          -21.642734667611552508816972
 2015-07-31 | t                   |                                       |              -44.99913812567902510009 |              -44.17343213331414798246
 2015-07-31 |                     |                                       |              -32.90823172208866467006 |          -23.897170739073607240867427
 2015-08-31 | f                   |                                       |          -20.908964082841214710381872 |                6.06117920636788527114
 2015-08-31 | t                   |                                       |              -37.27322492299831097769 |                3.29019379917731385583
 2015-08-31 |                     |                                       |          -22.535731236879820117507625 |                5.78467438765220535642
 2015-09-30 | f                   |                                       |                4.76907534736957928395 |           12.013619969233731902858981
 2015-09-30 | t                   |                                       |               -9.99870247489808653306 |               30.71133332630695049502
 2015-09-30 |                     |                                       |                3.31289941118529137365 |           13.876384041971507271659726
 2015-10-30 | f                   |                                       |               -2.02579722747055345542 |              -45.31593453516610568633
 2015-10-30 | t                   |                                       |              -10.16709766996406277020 |              -55.72462521881843872671
 2015-10-30 |                     |                                       |               -2.83838924266905548715 |              -46.35680360353133899037
 2015-11-30 | f                   |                                       |           -2.836868171236936129810886 |              -47.81628343421436638994
 2015-11-30 | t                   |                                       |              -17.52660940973212416534 |              -79.70584494978701977918
 2015-11-30 |                     |                                       |           -4.298488231888209532595034 |              -50.97376315244349092355
 2015-12-31 | f                   |                                       |                                       |               -2.39365540111051914393
 2015-12-31 | t                   |                                       |                                       |              -43.12743666075283288059
 2015-12-31 |                     |                                       |                                       |               -6.42086173471495444409
 2016-01-29 | f                   |                                       |                                       |               53.73054325198507367832
 2016-01-29 | t                   |                                       |                                       |               41.55828366100440624261
 2016-01-29 |                     |                                       |                                       |               52.52122135755647490061
 2016-02-29 | f                   |                                       |                                       |               39.15870243339958724908
 2016-02-29 | t                   |                                       |                                       |               42.08992598670603249744
 2016-02-29 |                     |                                       |                                       |               39.45394746543111201735
 2016-03-31 | f                   |                                       |                                       |
 2016-03-31 | t                   |                                       |                                       |
 2016-03-31 |                     |                                       |                                       |
 2016-04-29 | f                   |                                       |                                       |
 2016-04-29 | t                   |                                       |                                       |
 2016-04-29 |                     |                                       |                                       |
 2016-05-31 | f                   |                                       |                                       |
 2016-05-31 | t                   |                                       |                                       |
 2016-05-31 |                     |                                       |                                       |
            |                     |            9.104111870125267823718005 |            7.980821807680966916591249 |            9.369671377324513917189430
(205 rows)


-- store somewhere -- [ ]
SUMMARY
  SIMPLE COLUMNAMES
    CREATE SI_RETURNS
      COMPLICATED COLUMNNMES
        CREATE SI_FINCON



-- TOP 10 PERCENT LEAST DEBT LOADED COMPANIES OVER MKTCAP 
-- liab_over_assets_10 = 't'
select 
    sq.start_date
  , sq.liab_over_mktcap_10
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann_mkt010_of_gr_200m
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann_mkt010_of_gr_200m
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann_mkt010_of_gr_200m
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , percent_rank() over (partition by dateindex_ci order by -1.00 * liab_q1::numeric(15,2)/nullif(mktcap::numeric(15,2),0.00::numeric(15,2)) desc nulls last) < 0.10 liab_over_mktcap_10
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq_ci is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
  -- and dateindex_ci in (16465,16555)
) sq group by rollup(sq.start_date, liab_over_mktcap_10);


 start_date | liab_over_mktcap_10 | w52_pradchg_52w_ann_mkt010_of_gr_200m | w26_pradchg_26w_ann_mkt010_of_gr_200m | w13_pradchg_13w_ann_mkt010_of_gr_200m
------------+---------------------+---------------------------------------+---------------------------------------+---------------------------------------
 2010-10-29 | f                   |                4.89968934791359172803 |               43.13218865540043325142 |               47.51905819391536001491
 2010-10-29 | t                   |                7.00782396773448253265 |               40.65929537262013587111 |               37.18776186841677796911
 2010-10-29 |                     |                5.11774750525471143018 |               42.88293801057294128150 |               46.48795034146833910623
 2010-11-30 | f                   |                0.93677172419448485588 |               32.68407436318816688363 |               52.96764888902501429472
 2010-11-30 | t                   |                2.00735180852458488225 |               26.43131824013536524285 |               38.78932641143833744673
 2010-11-30 |                     |                1.04716297493893440664 |               32.05106422182442296752 |               51.54572805099725721256
 2010-12-31 | f                   |               -6.36463798677090386616 |                9.31900897364960090164 |               27.41736321860346375390
 2010-12-31 | t                   |               -5.14823411282429159747 |                9.13150817892834061025 |               20.10964412512595740553
 2010-12-31 |                     |               -6.23812879121936971616 |                9.29990443897438117313 |               26.67900066619355518046
 2011-01-31 | f                   |               -0.48473735041172856834 |                3.29940423203449039447 |               39.08098028782952761063
 2011-01-31 | t                   |                0.27969401852545515685 |                8.58036723191783826748 |               44.04648796521726792567
 2011-01-31 |                     |               -0.40601270303676113977 |                3.84178259551252902019 |               39.58332127882904372822
 2011-02-28 | f                   |               -0.83958497710593237170 |              -20.91370389494925203321 |               15.59695579691359235560
 2011-02-28 | t                   |                1.83984883023061450844 |              -11.07953131829647501252 |               20.93000043146220422319
 2011-02-28 |                     |               -0.56439522033183113063 |              -19.90578649116112446093 |               16.13636365200094035458
 2011-03-31 | f                   |               -1.97385536006811070301 |              -44.70537215814939330689 |               -7.24528669579351417424
 2011-03-31 | t                   |               -0.17750158409926863670 |              -36.04387607736692241289 |               -1.47517744998957869670
 2011-03-31 |                     |               -1.78942361511008909226 |              -43.81604617599064551753 |               -6.65888627812047068542
 2011-04-29 | f                   |               -5.26428147303927037467 |              -26.04701966029008895843 |              -29.43002387106878171304
 2011-04-29 | t                   |               -6.65282461837393012227 |              -22.41792155663675877620 |              -25.79280988011119497923
 2011-04-29 |                     |               -5.40783220025319180359 |              -25.67520892629269716702 |              -29.05958761537433211030
 2011-05-31 | f                   |               -7.69901181280078242889 |              -21.61404826382724891058 |              -44.26350195130589714043
 2011-05-31 | t                   |               -9.03836227053048510979 |              -18.15683063747835286387 |              -32.56816124105204153401
 2011-05-31 |                     |               -7.83715490983732745310 |              -21.25896522097161999822 |              -43.07200986909782505495
 2011-06-30 | f                   |               -4.89937295618896507884 |              -24.28784591466388330408 |              -88.22298102072626118327
 2011-06-30 | t                   |               -5.01484352529527949949 |              -24.50662471467279958622 |              -72.23071930166577007361
 2011-06-30 |                     |               -4.91108629071910961367 |              -24.30997810869557386106 |              -86.60338570528242144989
 2011-07-29 | f                   |               -0.09021368048782112129 |                4.69462252888106253037 |              -24.74129702692834865909
 2011-07-29 | t                   |               -3.83406040591048268904 |                2.00319720718066760723 |              -26.20381041661859599552
 2011-07-29 |                     |               -0.46765871820073250550 |                4.42516016007148644924 |              -24.88772062895858543600
 2011-08-31 | f                   |               13.08246592666284409355 |               22.01595498935287984294 |                2.78371204753566319729
 2011-08-31 | t                   |                5.39234390165573935777 |               12.61341590658393295016 |               -7.30033541925911186635
 2011-08-31 |                     |               12.30168190350529675236 |               21.07310608408902040291 |                1.77254958504940498671
 2011-09-30 | f                   |               24.76734737935876328392 |               53.92797086928615636310 |               52.65475200817863490507
 2011-09-30 | t                   |               16.32532318349941961812 |               41.07361967346088607265 |               26.19746290141693478627
 2011-09-30 |                     |               23.91470021146461208437 |               52.64008262924641077103 |               50.02152260416707672002
 2011-10-31 | f                   |               14.62963650607546238278 |               19.89647573595277694054 |               39.00920770248027884442
 2011-10-31 | t                   |                5.81421203075038303142 |               11.73029135888531228210 |               33.00395863446099633566
 2011-10-31 |                     |               13.74005736222781998360 |               19.07451326982850424354 |               38.40978602575820716718
 2011-11-30 | f                   |               13.64567911059372108390 |                8.84843465180628847396 |               42.13470045804617984113
 2011-11-30 | t                   |                6.37191415458553345883 |                1.35273227323107758664 |               38.42750088667947561190
 2011-11-30 |                     |               12.91372792005201666880 |                8.09863155584443140477 |               41.76637518534502774453
 2011-12-30 | f                   |               15.22772798220059931969 |               14.98253187859540731112 |               50.30190327550654912325
 2011-12-30 | t                   |                9.16063084357224495504 |               15.19690363854753486864 |               51.20989900919711825460
 2011-12-30 |                     |               14.61433012975974837447 |               15.00403562967135054127 |               50.39281473990871639610
 2012-01-31 | f                   |               11.81971471253592244654 |                0.11103200593918404108 |               14.56447595779245279055
 2012-01-31 | t                   |                3.81492175171152804905 |               -5.06386005278335344982 |               10.26916904681744803966
 2012-01-31 |                     |               11.00860192564979289375 |               -0.40897080870476250096 |               14.13143411663148500913
 2012-02-29 | f                   |               11.48469791919824962756 |                1.21708140762950194848 |              -25.68952837154319839593
 2012-02-29 | t                   |                1.80302516785226896854 |               -7.22942903280779608385 |              -41.56633825764183843972
 2012-02-29 |                     |               10.50228416055462007571 |                0.36148071182397522588 |              -27.28859738876233817321
 2012-03-30 | f                   |               14.60713921365811273834 |                1.98631886038405685237 |              -16.71035969154916762647
 2012-03-30 | t                   |                4.13178130619403054697 |               -1.82684379558910561091 |              -22.66202911768655757386
 2012-03-30 |                     |               13.46588199693208199448 |                1.60409253210035082980 |              -17.30341486499928602159
 2012-04-30 | f                   |               16.66596538178012092495 |                0.74685509560031101848 |              -15.00389205936531269939
 2012-04-30 | t                   |                6.52658158836119086383 |               -3.86777189065122446608 |              -17.78140490780473179048
 2012-04-30 |                     |               15.57476164465415318442 |                0.28400244908773230873 |              -15.28097966133029656332
 2012-05-31 | f                   |               30.58877789977044824609 |               24.78809031663112516785 |               38.75390868382472055713
 2012-05-31 | t                   |               18.54065174444823623850 |               15.35100710945463903454 |               37.39675631669911806973
 2012-05-31 |                     |               29.28682930778271598646 |               23.83920626472124082172 |               38.61700115936158040920
 2012-06-29 | f                   |               28.36450609292992819215 |           12.914498151296573235564498 |               23.30971794351398936633
 2012-06-29 | t                   |               13.13188405207560236156 |                1.26245814844360286052 |               19.39995622957750853327
 2012-06-29 |                     |               27.25071140467247660369 |           11.739855054699334097846625 |               22.91618028439828641172
 2012-07-31 | f                   |               34.28106029052229423270 |               33.71235099864438349062 |           24.126722475534314760191558
 2012-07-31 | t                   |               19.69783972848613980640 |               19.17499104114673409232 |               13.49396785086563380885
 2012-07-31 |                     |               33.20541849020189702679 |               32.24499583823210942019 |           23.059624572818913885805647
 2012-08-31 | f                   |               26.92296151511105894228 |               25.59138839518091938199 |                9.30031001710612322054
 2012-08-31 | t                   |               18.11245206403487700768 |               12.23378376583168259002 |               -1.94314864043810983764
 2012-08-31 |                     |               26.28101309681722942434 |               24.24120460391196533313 |                8.17163590253475958218
 2012-09-28 | f                   |               29.28802906926888546343 |               27.70948426382038311026 |                4.02779608167497753515
 2012-09-28 | t                   |               17.59937816767406578793 |            7.491284449979572516511856 |              -15.79103661691754068448
 2012-09-28 |                     |               28.45486723518441465902 |           25.512279059929911272111092 |                2.03720761443713456316
 2012-10-31 | f                   |               36.06944253841867638022 |               35.03708719489481902896 |               32.51968583504580613915
 2012-10-31 | t                   |               23.39167435806070868431 |               17.37923390751473101556 |               17.02501170124193259292
 2012-10-31 |                     |               35.14693450410085887921 |               33.12703835890697290725 |               30.95870677669231040894
 2012-11-30 | f                   |               39.68748741513588933417 |               40.77407529239184301137 |           39.393751178944797200734312
 2012-11-30 | t                   |               30.62123792511653709278 |               26.13529012022002279648 |               21.73248122002544369764
 2012-11-30 |                     |               39.02449579463749154868 |               39.20940513956298616217 |           37.618140207537929023364544
 2012-12-31 | f                   |               38.95374382695557993579 |               38.29659440693534061659 |               56.14766590022686413077
 2012-12-31 | t                   |               28.60734078007406837503 |               28.65272986762189440045 |               36.37873264205615555182
 2012-12-31 |                     |               38.20589855409326717034 |               37.59877018958447053716 |               54.02504005359635535707
 2013-01-31 | f                   |               26.66005594899356500092 |               34.19519034468085292271 |               22.38051649554378129508
 2013-01-31 | t                   |               26.83064433546628677366 |               31.20118161891969699045 |               14.77069907602629006186
 2013-01-31 |                     |               26.67226199540321442266 |               33.98292853203360679318 |               21.56906024262157340731
 2013-02-28 | f                   |               30.82157961659492878760 |               23.14470136501221509364 |           33.712348135143487538709524
 2013-02-28 | t                   |               37.37307356293683759208 |               26.88433143595162541665 |               24.93781385824589810452
 2013-02-28 |                     |               31.28497796889716136157 |               23.40590210250542773971 |           32.782096650200190091531469
 2013-03-29 | f                   |               25.13421536136553638189 |               28.49621468656297821556 |           14.888247088527998678587356
 2013-03-29 | t                   |               22.35459418229140295328 |               29.03754325048917312068 |               10.90706271948892792565
 2013-03-29 |                     |               24.95439127958097441197 |               28.53067447052459857160 |           14.634524627905221730369076
 2013-04-30 | f                   |               22.49414179064882556336 |               33.94829330749018168626 |               49.15907461990124689354
 2013-04-30 | t                   |               13.35545583268281509062 |               25.02116148767649794917 |               54.65653117463103023443
 2013-04-30 |                     |               21.90687915348743588693 |               33.38244678620731838803 |               49.50884617285041032396
 2013-05-31 | f                   |               18.05122338873247237151 |               31.23872703864248483977 |               12.02041634875618785705
 2013-05-31 | t                   |                7.18974958433197994075 |               21.71538038386287315636 |               20.05882510839461722381
 2013-05-31 |                     |               17.36523556950717811273 |               30.63678563331709354907 |               12.52463180789935370567
 2013-06-28 | f                   |               25.39138822146760373901 |               35.16827171744332361832 |           30.534868798662880187054225
 2013-06-28 | t                   |               19.48166484555088010219 |               32.32658072553062179720 |               44.78795041782528129930
 2013-06-28 |                     |               24.80041588387593137533 |               34.88644338513171793524 |           31.957396775607892261650569
 2013-07-31 | f                   |               12.83191554571973515276 |               15.17865892841353855543 |           16.960772399450040704199848
 2013-07-31 | t                   |                6.96600170511513395336 |               20.22519883520508830767 |                7.56203363069825532274
 2013-07-31 |                     |               12.24996430444683305618 |               15.67825168528128822356 |           16.032019511843932075204084
 2013-08-30 | f                   |           19.738519495629227526943655 |           34.116423151866723326311645 |           49.803077484413406553783958
 2013-08-30 | t                   |               11.96333569874016057415 |               41.16108172074123237232 |               29.59909946985902305780
 2013-08-30 |                     |           18.966661408578691429710996 |           34.813550822744929950655805 |           47.805453893280332243552823
 2013-09-30 | f                   |            9.225518760973372901987881 |               23.64017895553609175113 |               32.69318063980720163768
 2013-09-30 | t                   |                2.52276524449427752824 |               17.31680584556237285615 |               14.43976701962131029636
 2013-09-30 |                     |            8.565481609366884147277017 |               23.01450207583872409794 |               30.89436034621971013469
 2013-10-31 | f                   |            9.982475875164174818076732 |               11.83053622538205905026 |               14.51975192042630563789
 2013-10-31 | t                   |                9.68757321660644167925 |                2.15388201221441206987 |               41.12746776494205737394
 2013-10-31 |                     |            9.952938120957587054413330 |               10.85950128218036734631 |               17.17467932505636809540
 2013-11-29 | f                   |            6.408673878735345439316292 |                8.03284294955101500410 |               19.51507620523397555968
 2013-11-29 | t                   |                6.14762168341240916126 |               -5.73046613130908707339 |           47.523651860154031690080495
 2013-11-29 |                     |            6.382834530312228576656723 |                6.65694335795139966009 |           22.321146284805680935029777
 2013-12-31 | f                   |                5.14411089565502470560 |               12.58999777847391079210 |           11.772659128171706233949530
 2013-12-31 | t                   |                4.36731225514974015788 |                9.92924846675826866309 |               18.25382979411671984900
 2013-12-31 |                     |                5.06704656143057016885 |               12.32210381421167709111 |           12.421375009425826783653996
 2014-01-31 | f                   |            3.341312752024637640865841 |                5.85047517071119051261 |               15.08697150824954943976
 2014-01-31 | t                   |               -1.27424132392554279704 |              -15.70317226583280009472 |              -30.44388596188369453927
 2014-01-31 |                     |            2.882234907400606432169997 |                3.68910662554243379433 |               10.52131974721502911436
 2014-02-28 | f                   |                4.86780307219592864173 |            6.500704419167088559189568 |               -2.18946190356495401432
 2014-02-28 | t                   |               -1.77771553839430884764 |              -16.61626505258536689467 |              -56.25125152404162721649
 2014-02-28 |                     |                4.19992220995439256343 |            4.181228742588683729313099 |               -7.59564086561262133454
 2014-03-31 | f                   |                4.89565016655190326576 |               -8.23554273948706430549 |               12.23938727969206286510
 2014-03-31 | t                   |                5.41474957946849647398 |              -18.85940557707098392925 |                0.80178243026729177777
 2014-03-31 |                     |                4.94746326093816769979 |               -9.29082923641596519157 |               11.08977547719195045367
 2014-04-30 | f                   |            7.053874377812501329265878 |            6.396866401840768975048321 |            2.319729950980226392592283
 2014-04-30 | t                   |               12.35593005185567800573 |               12.68277750751785850999 |                6.76526206760084966067
 2014-04-30 |                     |            7.577760054513756239267838 |            7.017173902921989578863963 |            2.761849477176985458487150
 2014-05-30 | f                   |            6.667793764712640814949370 |                4.62994965882217375289 |           15.384920393762964221351180
 2014-05-30 | t                   |               16.31416631962185833147 |               14.98793832719864456190 |               24.35065246286770595433
 2014-05-30 |                     |            7.613932789274626311697499 |                5.64568847997559957154 |           16.272481442334100701161374
 2014-06-30 | f                   |                2.56340202817048935097 |           -2.009661750317102912078256 |          -27.249613755483634177034582
 2014-06-30 | t                   |               10.31971419997030328599 |                2.43243771703772850407 |              -28.26937399161705647761
 2014-06-30 |                     |                3.32627852784797648016 |           -1.572182257320036181700246 |          -27.350489318410501490940633
 2014-07-31 | f                   |                6.55168484167615005220 |                3.03187066442926449340 |               13.08116564598692466155
 2014-07-31 | t                   |               20.89481009372300904192 |               23.08050262976728892657 |               27.97397044254809304736
 2014-07-31 |                     |                7.96611401744510621597 |                5.00164721613579437323 |               14.55780214340217695451
 2014-08-29 | f                   |               -3.85439624229441625928 |                4.21103306268782937484 |               -5.86473672620848474352
 2014-08-29 | t                   |                3.62228352233607097083 |               21.80079270398090809527 |                6.75306258254966696881
 2014-08-29 |                     |               -3.11653527863944000547 |                5.93888620621936425830 |               -4.61698921416116526250
 2014-09-30 | f                   |               -3.23310225154694822891 |           16.955732289080533409086278 |               28.49079069991380693567
 2014-09-30 | t                   |               -3.31586177444053737809 |               30.39365319106676846255 |               38.30384721765132593572
 2014-09-30 |                     |               -3.24126533801060386653 |           18.268680516166657491543419 |               29.46068582085298032521
 2014-10-31 | f                   |               -1.03893354745967037204 |                9.87773797440646630506 |           -9.781716367022857269873114
 2014-10-31 | t                   |               -1.29511397871126540622 |               13.59058041935411167510 |               14.82042186672841570238
 2014-10-31 |                     |               -1.06414752050399139749 |               10.24227990728990701698 |           -7.348455586143623028856448
 2014-11-28 | f                   |               -1.34519660162079707141 |                8.62526500466636291300 |               13.77150913700788224544
 2014-11-28 | t                   |                3.98791162457705427905 |               24.65345835761598666129 |               37.89967867379028223186
 2014-11-28 |                     |               -0.81542881198899532385 |               10.21324342019007563621 |               16.17030237636373418658
 2014-12-31 | f                   |               -7.16867361202432055237 |            4.309079212459881408717675 |                8.93699348152714089001
 2014-12-31 | t                   |               -2.96935714202402064914 |               19.52757177774473589689 |               23.26594165815928290094
 2014-12-31 |                     |               -6.74637392942090693428 |            5.831394008681400961373937 |               10.36163579796707498506
 2015-01-30 | f                   |              -12.19512496952604775209 |                9.91301322303177384853 |               22.71197055426694947670
 2015-01-30 | t                   |              -19.41622892871060941482 |               20.08821435969854507223 |                2.39472612644872113577
 2015-01-30 |                     |              -12.92663724738564609138 |               10.93653547335156083285 |               20.68273596987088868039
 2015-02-27 | f                   |              -15.83261211942277914377 |              -15.42368376872908534321 |                3.16702598443417352553
 2015-02-27 | t                   |              -25.89667327678008950420 |               -9.61563483826996031618 |               16.17573705947223209829
 2015-02-27 |                     |              -16.83145601011854225719 |              -14.83933738243289288622 |                4.46907010465890256212
 2015-03-31 | f                   |          -10.144105150111361060413757 |              -24.78586482945975170930 |               -0.34114378784776033266
 2015-03-31 | t                   |              -22.57190447514546561742 |              -28.55187330713048044807 |               13.92950617571789992894
 2015-03-31 |                     |          -11.377517394681328723734816 |              -25.16395966899398111273 |                1.08419874019696916239
 2015-04-30 | f                   |               -8.01955684053561765201 |              -14.71104841786351860238 |          -11.249334221455846431194646
 2015-04-30 | t                   |              -18.69683361546529411592 |              -19.44339933822894106344 |               23.82028212821467586058
 2015-04-30 |                     |               -9.08627500556956263753 |              -15.18471806921322571740 |           -7.733876010752956401340792
 2015-05-29 | f                   |               -7.75093663127111363215 |              -12.54483435735841090103 |              -33.18013707611718361776
 2015-05-29 | t                   |              -20.22808374980139165200 |              -17.51900544205405677871 |              -30.92534043855317559193
 2015-05-29 |                     |               -8.99904259891337098189 |              -13.04225146582797548880 |              -32.95343197940558498473
 2015-06-30 | f                   |                                       |              -19.62810201137151212128 |              -50.71955628657009831863
 2015-06-30 | t                   |                                       |              -26.40223858630789840416 |              -71.39646345726977497815
 2015-06-30 |                     |                                       |              -20.30366761705628662479 |              -52.80025134777258150449
 2015-07-31 | f                   |                                       |              -30.02529558582306384937 |          -19.447208630279646593525867
 2015-07-31 | t                   |                                       |              -58.86350031086025488084 |              -63.91986025089322906302
 2015-07-31 |                     |                                       |              -32.90823172208866467006 |          -23.897170739073607240867427
 2015-08-31 | f                   |                                       |          -19.630763518428964487682648 |                6.63690874149564098431
 2015-08-31 | t                   |                                       |              -49.12947356793465619874 |               -1.95645432642566826357
 2015-08-31 |                     |                                       |          -22.535731236879820117507625 |                5.78467438765220535642
 2015-09-30 | f                   |                                       |                6.20038625647221290540 |           12.504371587715963667288195
 2015-09-30 | t                   |                                       |              -23.08300123560158295032 |               26.36299581019624953857
 2015-09-30 |                     |                                       |                3.31289941118529137365 |           13.876384041971507271659726
 2015-10-30 | f                   |                                       |               -0.63328658496453269342 |              -44.33567603844794536651
 2015-10-30 | t                   |                                       |              -22.79596392948847064566 |              -64.60971962608571370522
 2015-10-30 |                     |                                       |               -2.83838924266905548715 |              -46.35680360353133899037
 2015-11-30 | f                   |                                       |           -1.675058819167429559210049 |              -45.93320420240904317206
 2015-11-30 | t                   |                                       |              -28.12452381303371597857 |              -97.16045221498484132352
 2015-11-30 |                     |                                       |           -4.298488231888209532595034 |              -50.97376315244349092355
 2015-12-31 | f                   |                                       |                                       |                0.12412534263232380112
 2015-12-31 | t                   |                                       |                                       |              -66.28762851569021839311
 2015-12-31 |                     |                                       |                                       |               -6.42086173471495444409
 2016-01-29 | f                   |                                       |                                       |               55.59367526690872520228
 2016-01-29 | t                   |                                       |                                       |               24.46486592215566293543
 2016-01-29 |                     |                                       |                                       |               52.52122135755647490061
 2016-02-29 | f                   |                                       |                                       |               39.35394865558025038264
 2016-02-29 | t                   |                                       |                                       |               40.35000237468489840313
 2016-02-29 |                     |                                       |                                       |               39.45394746543111201735
 2016-03-31 | f                   |                                       |                                       |
 2016-03-31 | t                   |                                       |                                       |
 2016-03-31 |                     |                                       |                                       |
 2016-04-29 | f                   |                                       |                                       |
 2016-04-29 | t                   |                                       |                                       |
 2016-04-29 |                     |                                       |                                       |
 2016-05-31 | f                   |                                       |                                       |
 2016-05-31 | t                   |                                       |                                       |
 2016-05-31 |                     |                                       |                                       |
            |                     |            9.104111870125267823718005 |            7.980821807680966916591249 |            9.369671377324513917189430
(205 rows)
--CONCLUSION: COMPANIES THAT HAVE DIFFICULTY OF 'RAISING DEBT OVER MARKETCAP' ACHEIVE POOR PERFORMCE COMPARATIVELY
--SEEMS AT LEAST SINCE THE BEGINNING OF 2015
--SOFT IN THE MIDDLE
--ALSO OCCURRED IN THE PAST
--DIFFERENCE IS SIGNIFICANT: '10 PERCENT'

---------------------------
----------------------------


select 
    sq.start_date
  , sq.growing_netinc_q
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann_mkt010_of_gr_200m
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann_mkt010_of_gr_200m
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann_mkt010_of_gr_200m
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , netinc_q1 > netinc_q2 growing_netinc_q
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq_ci is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
  -- and dateindex_ci in (16465,16555)
) sq group by rollup(sq.start_date, growing_netinc_q);


--------------------------------
--------------------------------



set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;

select 
    sq.start_date
  , sq.growing_netinc_q
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , netinc_q1::numeric(15,2) > netinc_q2::numeric(15,2) growing_netinc_q
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq_ci is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
  -- and dateindex_ci in (16465,16555)
) sq group by rollup(sq.start_date, growing_netinc_q);
-- VERY SLIGHT BETTER PERFORMANCE FOR netinc_q1 > netinc_q2


-- YEAR OVER YEAR NET INCOME

select 
    sq.start_date
  , sq.growing_netinc_yoy_q
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann
from
( select 
      to_timestamp(dateindex_ci*3600*24)::date start_date 
    , ticker_ci 
    , netinc_q1::numeric(15,2) > netinc_q5::numeric(15,2) growing_netinc_yoy_q
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq_ci is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
  -- and dateindex_ci in (16465,16555)
) sq group by rollup(sq.start_date, growing_netinc_yoy_q);
--  PERFORMANCE FOR netinc_q1 > netinc_q5 YEAR OVER YEAR CONSITENLTLY 1-3% BETTER PERFORMANCE
--  NOTE: IN BAD TIMES, THEY LOOSE, BUT THEY LOOSE LESS


--SUNDAY: THE_END


----------------------------------
----------------------------------

  [X] SUN MORNING - WHERE 26W and 13W data? ( TWO ERRORS FIXED )
  [ ] WHAT IS THE BEST PERFORMING INDUSTRY OVER THE LAST FIVE YEARS
    [ ] HOW DO I IDENTIFY GOOD/BAD (IMPROVING/NOT_IMPROVING) COMPANIES

  [ ] netinc_q1 > netinc_q2 > netinc_q3 > netinc_q4 > netinc_q5 ?

[ ] NEED A RELTIVE REPORT ABS_CHANGE AND RELATIVE_CHANGE BETWEEN T and F

[ ] NEED HELPER FUNCTION ? 
to.monthlylwd <-function

-- NEXT, NEED AAII PIOTROSKI F_SCORE LOOSER DATA

add back 
  cash
   DONE [x] 

add back
  13w
  26w
  52w
  52w
  prchg_04w,13,26,52 [ ]
   DONE [x]


------------------

set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;

alter table sipro_data_store.si_finecon add cash_q1 text;
alter table sipro_data_store.si_finecon add cash_q2 text;
alter table sipro_data_store.si_finecon add cash_q3 text;
alter table sipro_data_store.si_finecon add cash_q4 text;
alter table sipro_data_store.si_finecon add cash_q5 text;
alter table sipro_data_store.si_finecon add cash_q6 text;
alter table sipro_data_store.si_finecon add cash_q7 text;
alter table sipro_data_store.si_finecon add cash_q8 text;
--DONE
    
    
update sipro_data_store.si_finecon fin
set cash_q1 = bsq.cash_q1,
    cash_q2 = bsq.cash_q2,
    cash_q3 = bsq.cash_q3,
    cash_q4 = bsq.cash_q4,
    cash_q5 = bsq.cash_q5,
    cash_q6 = bsq.cash_q6,
    cash_q7 = bsq.cash_q7,
    cash_q8 = bsq.cash_q8
from 
  sipro_data_store.si_bsq bsq
where 
  fin.dateindex_ci       = bsq.dateindex_bsq and
  fin.company_id_unq_ci  = bsq.company_id_unq_bsq;
--DONE (  11:37  )

-- -- ADDED BACK TO CREATION QUERY [X] R_CODE_IF_NECESSARY [x]

alter table sipro_data_store.si_finecon add prchg_04w text;
alter table sipro_data_store.si_finecon add prchg_13w text;
alter table sipro_data_store.si_finecon add prchg_26w text;
alter table sipro_data_store.si_finecon add prchg_52w text;
--DONE


update sipro_data_store.si_finecon fin
set prchg_04w = psd.prchg_04w,
    prchg_13w = psd.prchg_13w,
    prchg_26w = psd.prchg_26w,
    prchg_52w = psd.prchg_52w
from 
  sipro_data_store.si_psd psd
where 
  fin.dateindex_ci       = psd.dateindex_psd and
  fin.company_id_unq_ci  = psd.company_id_unq_psd;  
DONE ( 11:11 )

-- -- ADDED BACK TO CREATION QUERY [x] R_CODE_IF_NECESSARY [x]

---- RE-CORRECTED

-- BUT THESE TABLE SCANS NOW TAKE FOREVER

missed SQL
  26w [x] mill investor

corrected SQL
  cash
   DONE [LEFT_OFF] 

missed SQL
  26w
  prchg_04w,13,26,52 [ ]
   DONE [x]

----------------

-- 


WORK IN PROGRESS

create function q_best_1_of_10(num numeric, partitioner numeric)
returns setof numeric as
$$
select  percent_rank() over (partition by partitioner order by ( 
        num
      ) desc nulls last ) < 0.10 

$$

-----------------

Capital expenditures
 -- [x]

-- 

Cash flow includes operational sales revenues and monetary sources beyond merely sales revenues. 
Companies often generate or obtain cash in a variety of ways that lie outside the conduct of their main business. 
These extra sources of money that figure into the calculation of cash flow, 
but are not normally considered part of operational revenue, include such things as financing and investing.

http://www.investopedia.com/ask/answers/011315/what-difference-between-cash-flow-and-revenue.asp#ixzz4HNAqKxNv 

----

-- NOTE

  netinc_q1 -+ 'cash' > 0 can stay as an elmintator ( I THINK THAT WAS THE IDEA ANYWAYS )

----

  pair programming X/mktcap DIFFERS from X/assets, THEN converge

----


GLD
AGG ( or better: search my notes )

  need data to last week day of the month

J_OSAM

measures OVER assets

now are measures over debt

how do to a randomForest/xgoost/gbm(dismo) with 'stop at minimum'

--

  OPTIONS: any money to be made from OPTIONS

-- PROBLEM: EMPTY:  ( NOT DATA: COLUMN IS THERE:  mktcap_q1)



-----------------------------------
-----------------------------------


-- dateindex: 
select * from sipro_data_store.si_ci limit 100;
-- CONTRARY TO LOGIC
-- tiny clusters ( but NOT all together ) -- that means INHERIT -- does NOT keep the ORDER ( suprising )

CLUSTER sipro_data_store.si_ci USING si_ci_dateindex_idx;
-- IN PROGRESS -- DID! work -- select * from sipro_data_store.si_ci limit 100;
ANALYZE sipro_data_store.si_ci;

CLUSTER sipro_data_store.si_psd USING si_psd_dateindex_idx;
-- -- select * from sipro_data_store.si_psd limit 100;
ANALYZE sipro_data_store.si_psd;

  -- ALTER TABLE sipro_data_store.si_ci  SET WITHOUT CLUSTER;
  -- ALTER TABLE sipro_data_store.si_psd SET WITHOUT CLUSTER;

CREATE INDEX si_ci_dateindex_company_id_unq_idx
  ON sipro_data_store.si_ci
  USING btree
  (dateindex, company_id_unq);
  -- drop index sipro_data_store.si_ci_dateindex_company_id_unq_idx;

CREATE INDEX si_psd_dateindex_company_id_unq_idx
  ON sipro_data_store.si_psd
  USING btree
  (dateindex, company_id_unq);
  -- drop index sipro_data_store.si_psd_dateindex_company_id_unq_idx;

-- explain NOW does USE indexes - instead of seq scan on the tables 
-- ( ANY FASTER? THAN 4 MINUTES ) ( 3 MINUTES INSTEAD OF 4 MINTUES ) 33% faster

CREATE INDEX si_ci_dateindex_brin_idx
  ON sipro_data_store.si_ci
  USING brin
  (dateindex);
  -- drop index sipro_data_store.si_ci_dateindex_brin_idx;

CREATE INDEX si_psd_dateindex_brin_idx
  ON sipro_data_store.si_psd
  USING brin
  (dateindex);
  -- drop index sipro_data_store.si_psd_dateindex_brin_idx;

-- brin ignored ( SAME AS BEFORE )

--trying to KEEP indexes AND AVOID A 'RENAME'

drop table if exists sipro_data_store.si_ci_temp;

create table sipro_data_store.si_ci_temp as select * from sipro_data_store.si_ci order by dateindex;
  -- select count(*) from sipro_data_store.si_ci_temp; -- 578204

truncate table  sipro_data_store.si_ci;
insert into     sipro_data_store.si_ci select * from sipro_data_store.si_ci_temp;
-- DONE - BUT 3 MINTUES
analyze sipro_data_store.si_ci;
-- 5 SECONDS
-- drop table if exists sipro_data_store.si_ci_temp;

drop table if exists sipro_data_store.si_psd_temp;

create table sipro_data_store.si_psd_temp as select * from sipro_data_store.si_psd order by dateindex;
-- 30 SECONDS
  -- select count(*) from sipro_data_store.si_psd_temp; -- 578204

truncate table  sipro_data_store.si_psd;
insert into     sipro_data_store.si_psd select * from sipro_data_store.si_psd_temp;
-- DONE - BUT 2 MINTUES
analyze sipro_data_store.si_psd;
-- 15 SECONDS
-- drop table if exists sipro_data_store.si_psd_temp;

-- still ingnored the BRIN

-- drop index sipro_data_store.si_ci_dateindex_brin_idx;
CREATE INDEX si_ci_dateindex_brin_idx
  ON sipro_data_store.si_ci
  USING brin
  (dateindex) WITH (pages_per_range = 16);
-- drop index sipro_data_store.si_ci_dateindex_brin_idx;

-- drop index sipro_data_store.si_psd_dateindex_brin_idx;
CREATE INDEX si_psd_dateindex_brin_idx
  ON sipro_data_store.si_psd
  USING brin
  (dateindex);
-- drop index sipro_data_store.si_psd_dateindex_brin_idx;

-- still brin indexes are ignored


-- time vs quality

drop table if exists sipro_data_store.si_ci_temp;

-- pre ordered dateindex
create table sipro_data_store.si_ci_temp as select * from sipro_data_store.si_ci order by dateindex, company_id_unq;
-- pre ordered dateindex - 5 SECONDS
  -- select count(*) from sipro_data_store.si_ci_temp; -- 578204

truncate table  sipro_data_store.si_ci;
insert into     sipro_data_store.si_ci select * from sipro_data_store.si_ci_temp;
-- DONE - BUT 2.25 MINTUES -- LEFT_OFF
analyze sipro_data_store.si_ci;
-- 5  SECONDS
-- drop table if exists sipro_data_store.si_ci_temp;

drop table if exists sipro_data_store.si_psd_temp;

create table sipro_data_store.si_psd_temp as select * from sipro_data_store.si_psd order by dateindex, company_id_unq;
-- 27 SECONDS -- 
  -- select count(*) from sipro_data_store.si_psd_temp; -- 

truncate table  sipro_data_store.si_psd;
insert into     sipro_data_store.si_psd select * from sipro_data_store.si_psd_temp;
-- DONE - BUT TWO MINTUES
analyze sipro_data_store.si_psd;
-- 5 SECONDS
-- drop table if exists sipro_data_store.si_psd_temp;


-- drop index sipro_data_store.si_ci_dateindex_company_id_unq_brin_idx;
CREATE INDEX si_ci_dateindex_company_id_unq_brin_idx
  ON sipro_data_store.si_ci
  USING brin
  (dateindex, company_id_unq);
-- drop index sipro_data_store.si_ci_dateindex_company_id_unq_brin_idx;

-- drop index sipro_data_store.si_psd_dateindex_company_id_unq_brin_idx;
CREATE INDEX si_psd_dateindex_company_id_unq_brin_idx
  ON sipro_data_store.si_psd
  USING brin
  (dateindex, company_id_unq);
-- drop index sipro_data_store.si_psd_dateindex_company_id_unq_brin_idx;

-- still ingores brin

-- COMPOUND INDEX IS THE 'MOST CORRECT ANSWER'

DROP INDEX sipro_data_store.si_ci_dateindex_company_id_unq_idx;
analyze sipro_data_store.si_ci;

DROP INDEX sipro_data_store.si_psd_dateindex_company_id_unq_idx;
analyze sipro_data_store.si_psd;  

-- reverts back to sequential scans ( still will not use BRIN )

CREATE INDEX si_ci_company_id_unq_dateindex_idx
  ON sipro_data_store.si_ci
  USING btree
  (company_id_unq, dateindex);
  -- drop index sipro_data_store.si_ci_company_id_unq_dateindex_idx;

CREATE INDEX si_psd_company_id_unq_dateindex_idx
  ON sipro_data_store.si_psd
  USING btree
  (company_id_unq, dateindex);
  -- drop index sipro_data_store.si_psd_company_id_unq_dateindex_idx;

-- still does sequential scan

-- can I force a bitmap?

CREATE INDEX si_ci_dateindex_partial_idx
  ON sipro_data_store.si_ci
  USING btree
  (dateindex) where dateindex is not null;
  -- drop index sipro_data_store.si_ci_dateindex_partial_idx;

CREATE INDEX si_psd__dateindex_partial_idx
  ON sipro_data_store.si_psd
  USING btree
  (dateindex) where dateindex is not null;
  -- drop index sipro_data_store.si_psd__dateindex_partial_idx;

-- HASH KEY instead of SORT_KEY ( 3 MINUTES INSTEAD OF 4 MINTUES )

--  ci.dateindex          = psd.dateindex         and 
--  ci.company_id_unq     = psd.company_id_unq    and
--   ci.dateindex is not null and
--  psd.dateindex is not null;

CREATE INDEX si_ci_dateindex_company_id_unq_partial_idx
  ON sipro_data_store.si_ci
  USING btree
  (dateindex, company_id_unq)  where dateindex is not null;
  -- drop index sipro_data_store.si_ci_dateindex_company_id_unq_partial_idx;

CREATE INDEX si_psd_dateindex_company_id_unq_partial_idx
  ON sipro_data_store.si_psd
  USING btree
  (dateindex, company_id_unq)  where dateindex is not null;
  -- drop index sipro_data_store.si_psd_dateindex_company_id_unq_partial_idx;
  
-- ignores and does a sequential scan
-- "QUERY PLAN" "  Join Filter: ((ci.dateindex IS NOT NULL) AND (psd.dateindex IS NOT NULL))"


drop table if exists sipro_data_store.si_psdd_temp;

create table sipro_data_store.si_psdd_temp as select * from sipro_data_store.si_psdd order by dateindex;
  -- select count(*) from sipro_data_store.si_psdd_temp; -- 577198

truncate table  sipro_data_store.si_psdd;
insert into     sipro_data_store.si_psdd select * from sipro_data_store.si_psdd_temp;
-- DONE - BUT 1:11 MINTUES
analyze sipro_data_store.si_psdd;
-- ?? SECONDS
-- drop table if exists sipro_data_store.si_psdd_temp;
explain -- COST ( 407 ) --  PRE-SORTED and BTREE index do work better
select * from sipro_data_store.si_ci where dateindex = 16982 limit 10;

-- NOT PRE-SORTED ( COST 1240 )
explain 
select * from sipro_data_store.si_psdd where dateindex = 16982 limit 10;

"QUERY PLAN"
"Limit  (cost=0.42..1.73 rows=10 width=568)"
"  ->  Index Scan using si_psdd_dateindex_idx on si_psdd  (cost=0.42..1240.32 rows=9480 width=568)"
"        Index Cond: (dateindex = 16982)"

-- PRE-SORTED ( COST 601 )
explain 
select * from sipro_data_store.si_psdd where dateindex = 16982 limit 10;

"QUERY PLAN"
"Limit  (cost=0.42..1.34 rows=10 width=542)"
"  ->  Index Scan using si_psdd_dateindex_idx on si_psdd  (cost=0.42..601.12 rows=6579 width=542)"
"        Index Cond: (dateindex = 16982)"
select count(*) from sipro_data_store.si_psdd; -- 577198
select count(*) from sipro_data_store.si_psdd_temp; -577198


-- MAYBE? LATERAL would work? ( use those indexes )
-- NO BELOW: exact same speed and I loose some rows ( left join INSTEAD of 'FULL OUTER JOIN' 

  from 
  sipro_data_store.si_ci  ci left join lateral ( select psd_i.* from
  sipro_data_store.si_psd psd_i 
  where
  ci.dateindex          = psd_i.dateindex         and 
  ci.company_id_unq     = psd_i.company_id_unq) psd on (true);

-- SUMMARY: (dateindex, company_id_unq) COMPOUND INDEX 33% faster than a table scan ( BY COST )
-- SUMMARY: WITH dateindex INDEX . . .PRE-SORTED TABLEBY dateindex 50%-66% faster than NOT-PRESORTED ( BY COST )
-- COMMONLY: INDEXES ARE NOT USEFUL IN A  col1=discret,col2=infinite CASE
-- BRIN index: I have not yet got one to work well.


-----------------------------------
-----------------------------------

-- SALVAGED ( IN CASE I NEED IT ) ---

-- Table: sipro_data_store.si_finecon

-- DROP TABLE sipro_data_store.si_finecon;

CREATE TABLE sipro_data_store.si_finecon
(
  dateindex_ci integer,
  company_id_ci text,
  company text,
  ticker_ci text,
  exchange text,
  sic text,
  sp text,
  adr boolean,
  ind_2_dig text,
  ind_3_dig text,
  country text,
  employees text,
  company_id_unq_ci text,
  ticker_unq_ci text,
  dateindexeom_ci integer,
  company_id_unq_orig_ci text,
  dateindex_psd integer,
  company_id_psd text,
  split_date date,
  split_fact text,
  price_date date,
  price text,
  shr_aq1 text,
  shr_aq2 text,
  shr_aq3 text,
  shr_aq4 text,
  shr_aq5 text,
  shr_aq6 text,
  shr_aq7 text,
  shr_aq8 text,
  beta text,
  mktcap text,
  mktcap_q1 text,
  mktcap_q2 text,
  mktcap_q3 text,
  mktcap_q4 text,
  mktcap_q5 text,
  mktcap_q6 text,
  mktcap_q7 text,
  mktcap_q8 text,
  shr_dq1 text,
  shr_dq2 text,
  shr_dq3 text,
  shr_dq4 text,
  shr_dq5 text,
  shr_dq6 text,
  shr_dq7 text,
  shr_dq8 text,
  shr_dq9 text,
  shr_dq10 text,
  company_id_unq_psd text,
  ticker_unq_psd text,
  dateindexeom_psd integer,
  company_id_unq_orig_psd text,
  dateindex_isq integer,
  company_id_isq text,
  sales_q1 text,
  sales_q2 text,
  sales_q3 text,
  sales_q4 text,
  sales_q5 text,
  sales_q6 text,
  sales_q7 text,
  sales_q8 text,
  cgs_q1 text,
  cgs_q2 text,
  cgs_q3 text,
  cgs_q4 text,
  cgs_q5 text,
  cgs_q6 text,
  cgs_q7 text,
  cgs_q8 text,
  gross_q1 text,
  gross_q2 text,
  gross_q3 text,
  gross_q4 text,
  gross_q5 text,
  gross_q6 text,
  gross_q7 text,
  gross_q8 text,
  dep_q1 text,
  dep_q2 text,
  dep_q3 text,
  dep_q4 text,
  dep_q5 text,
  dep_q6 text,
  dep_q7 text,
  dep_q8 text,
  int_q1 text,
  int_q2 text,
  int_q3 text,
  int_q4 text,
  int_q5 text,
  int_q6 text,
  int_q7 text,
  int_q8 text,
  intno_q1 text,
  intno_q2 text,
  intno_q3 text,
  intno_q4 text,
  intno_q5 text,
  intno_q6 text,
  intno_q7 text,
  intno_q8 text,
  uninc_q1 text,
  uninc_q2 text,
  uninc_q3 text,
  uninc_q4 text,
  uninc_q5 text,
  uninc_q6 text,
  uninc_q7 text,
  uninc_q8 text,
  totexp_q1 text,
  totexp_q2 text,
  totexp_q3 text,
  totexp_q4 text,
  totexp_q5 text,
  totexp_q6 text,
  totexp_q7 text,
  totexp_q8 text,
  gopinc_q1 text,
  gopinc_q2 text,
  gopinc_q3 text,
  gopinc_q4 text,
  gopinc_q5 text,
  gopinc_q6 text,
  gopinc_q7 text,
  gopinc_q8 text,
  othinc_q1 text,
  othinc_q2 text,
  othinc_q3 text,
  othinc_q4 text,
  othinc_q5 text,
  othinc_q6 text,
  othinc_q7 text,
  othinc_q8 text,
  pti_q1 text,
  pti_q2 text,
  pti_q3 text,
  pti_q4 text,
  pti_q5 text,
  pti_q6 text,
  pti_q7 text,
  pti_q8 text,
  inctax_q1 text,
  inctax_q2 text,
  inctax_q3 text,
  inctax_q4 text,
  inctax_q5 text,
  inctax_q6 text,
  inctax_q7 text,
  inctax_q8 text,
  adjust_q1 text,
  adjust_q2 text,
  adjust_q3 text,
  adjust_q4 text,
  adjust_q5 text,
  adjust_q6 text,
  adjust_q7 text,
  adjust_q8 text,
  nit_q1 text,
  nit_q2 text,
  nit_q3 text,
  nit_q4 text,
  nit_q5 text,
  nit_q6 text,
  nit_q7 text,
  nit_q8 text,
  iac_q1 text,
  iac_q2 text,
  iac_q3 text,
  iac_q4 text,
  iac_q5 text,
  iac_q6 text,
  iac_q7 text,
  iac_q8 text,
  xord_q1 text,
  xord_q2 text,
  xord_q3 text,
  xord_q4 text,
  xord_q5 text,
  xord_q6 text,
  xord_q7 text,
  xord_q8 text,
  netinc_q1 text,
  netinc_q2 text,
  netinc_q3 text,
  netinc_q4 text,
  netinc_q5 text,
  netinc_q6 text,
  netinc_q7 text,
  netinc_q8 text,
  epscon_q1 text,
  epscon_q2 text,
  epscon_q3 text,
  epscon_q4 text,
  epscon_q5 text,
  epscon_q6 text,
  epscon_q7 text,
  epscon_q8 text,
  eps_q1 text,
  eps_q2 text,
  eps_q3 text,
  eps_q4 text,
  eps_q5 text,
  eps_q6 text,
  eps_q7 text,
  eps_q8 text,
  epsdc_q1 text,
  epsdc_q2 text,
  epsdc_q3 text,
  epsdc_q4 text,
  epsdc_q5 text,
  epsdc_q6 text,
  epsdc_q7 text,
  epsdc_q8 text,
  epsd_q1 text,
  epsd_q2 text,
  epsd_q3 text,
  epsd_q4 text,
  epsd_q5 text,
  epsd_q6 text,
  epsd_q7 text,
  epsd_q8 text,
  dps_q1 text,
  dps_q2 text,
  dps_q3 text,
  dps_q4 text,
  dps_q5 text,
  dps_q6 text,
  dps_q7 text,
  dps_q8 text,
  divnq text,
  divnqxdt date,
  divnqpdt date,
  ebit_q1 text,
  ebit_q2 text,
  ebit_q3 text,
  ebit_q4 text,
  ebit_q5 text,
  ebit_q6 text,
  ebit_q7 text,
  ebit_q8 text,
  ebitda_q1 text,
  ebitda_q2 text,
  ebitda_q3 text,
  ebitda_q4 text,
  ebitda_q5 text,
  ebitda_q6 text,
  ebitda_q7 text,
  ebitda_q8 text,
  dpst_q1 text,
  dpst_q2 text,
  dpst_q3 text,
  dpst_q4 text,
  dpst_q5 text,
  dpst_q6 text,
  dpst_q7 text,
  dpst_q8 text,
  epsnd_q1 text,
  epsnd_q2 text,
  epsnd_q3 text,
  epsnd_q4 text,
  epsnd_q5 text,
  epsnd_q6 text,
  epsnd_q7 text,
  epsnd_q8 text,
  epsnd_q9 text,
  epsnd_q10 text,
  company_id_unq_isq text,
  ticker_unq_isq text,
  dateindexeom_isq integer,
  company_id_unq_orig_isq text,
  dateindex_bsq integer,
  company_id_bsq text,
  ar_q1 text,
  ar_q2 text,
  ar_q3 text,
  ar_q4 text,
  ar_q5 text,
  ar_q6 text,
  ar_q7 text,
  ar_q8 text,
  ca_q1 text,
  ca_q2 text,
  ca_q3 text,
  ca_q4 text,
  ca_q5 text,
  ca_q6 text,
  ca_q7 text,
  ca_q8 text,
  assets_q1 text,
  assets_q2 text,
  assets_q3 text,
  assets_q4 text,
  assets_q5 text,
  assets_q6 text,
  assets_q7 text,
  assets_q8 text,
  ap_q1 text,
  ap_q2 text,
  ap_q3 text,
  ap_q4 text,
  ap_q5 text,
  ap_q6 text,
  ap_q7 text,
  ap_q8 text,
  stdebt_q1 text,
  stdebt_q2 text,
  stdebt_q3 text,
  stdebt_q4 text,
  stdebt_q5 text,
  stdebt_q6 text,
  stdebt_q7 text,
  stdebt_q8 text,
  ocl_q1 text,
  ocl_q2 text,
  ocl_q3 text,
  ocl_q4 text,
  ocl_q5 text,
  ocl_q6 text,
  ocl_q7 text,
  ocl_q8 text,
  cl_q1 text,
  cl_q2 text,
  cl_q3 text,
  cl_q4 text,
  cl_q5 text,
  cl_q6 text,
  cl_q7 text,
  cl_q8 text,
  ltdebt_q1 text,
  ltdebt_q2 text,
  ltdebt_q3 text,
  ltdebt_q4 text,
  ltdebt_q5 text,
  ltdebt_q6 text,
  ltdebt_q7 text,
  ltdebt_q8 text,
  oltl_q1 text,
  oltl_q2 text,
  oltl_q3 text,
  oltl_q4 text,
  oltl_q5 text,
  oltl_q6 text,
  oltl_q7 text,
  oltl_q8 text,
  liab_q1 text,
  liab_q2 text,
  liab_q3 text,
  liab_q4 text,
  liab_q5 text,
  liab_q6 text,
  liab_q7 text,
  liab_q8 text,
  equity_q1 text,
  equity_q2 text,
  equity_q3 text,
  equity_q4 text,
  equity_q5 text,
  equity_q6 text,
  equity_q7 text,
  equity_q8 text,
  bvps_q1 text,
  bvps_q2 text,
  bvps_q3 text,
  bvps_q4 text,
  bvps_q5 text,
  bvps_q6 text,
  bvps_q7 text,
  bvps_q8 text,
  minor_q1 text,
  minor_q2 text,
  minor_q3 text,
  minor_q4 text,
  minor_q5 text,
  minor_q6 text,
  minor_q7 text,
  minor_q8 text,
  work_q1 text,
  work_q2 text,
  work_q3 text,
  work_q4 text,
  work_q5 text,
  work_q6 text,
  work_q7 text,
  work_q8 text,
  entval_q1 text,
  entval_q2 text,
  entval_q3 text,
  entval_q4 text,
  entval_q5 text,
  entval_q6 text,
  entval_q7 text,
  entval_q8 text,
  company_id_unq_bsq text,
  ticker_unq_bsq text,
  dateindexeom_bsq integer,
  company_id_unq_orig_bsq text,
  dateindex_cfq integer,
  company_id_cfq text,
  tco_q1 text,
  tco_q2 text,
  tco_q3 text,
  tco_q4 text,
  tco_q5 text,
  tco_q6 text,
  tco_q7 text,
  tco_q8 text,
  ce_q1 text,
  ce_q2 text,
  ce_q3 text,
  ce_q4 text,
  ce_q5 text,
  ce_q6 text,
  ce_q7 text,
  ce_q8 text,
  tci_q1 text,
  tci_q2 text,
  tci_q3 text,
  tci_q4 text,
  tci_q5 text,
  tci_q6 text,
  tci_q7 text,
  tci_q8 text,
  tcf_q1 text,
  tcf_q2 text,
  tcf_q3 text,
  tcf_q4 text,
  tcf_q5 text,
  tcf_q6 text,
  tcf_q7 text,
  tcf_q8 text,
  dep_cf_q1 text,
  dep_cf_q2 text,
  dep_cf_q3 text,
  dep_cf_q4 text,
  dep_cf_q5 text,
  dep_cf_q6 text,
  dep_cf_q7 text,
  dep_cf_q8 text,
  cfps_q1 text,
  cfps_q2 text,
  cfps_q3 text,
  cfps_q4 text,
  cfps_q5 text,
  cfps_q6 text,
  cfps_q7 text,
  cfps_q8 text,
  fcfps_q1 text,
  fcfps_q2 text,
  fcfps_q3 text,
  fcfps_q4 text,
  fcfps_q5 text,
  fcfps_q6 text,
  fcfps_q7 text,
  fcfps_q8 text,
  company_id_unq_cfq text,
  ticker_unq_cfq text,
  dateindexeom_cfq integer,
  company_id_unq_orig_cfq text,
  dateindex_rat integer,
  company_id_rat text,
  roic_y1 text,
  company_id_unq_rat text,
  ticker_unq_rat text,
  dateindexeom_rat integer,
  company_id_unq_orig_rat text,
  dateindex_mlt integer,
  company_id_mlt text,
  shy text,
  company_id_unq_mlt text,
  ticker_unq_mlt text,
  dateindexeom_mlt integer,
  company_id_unq_orig_mlt text,
  dateindex_date integer,
  company_id_date text,
  perend_q1 date,
  perlen_q1 text,
  pertyp_q1 text,
  updtyp_q1 text,
  company_id_unq_date text,
  ticker_unq_date text,
  dateindexeom_date integer,
  company_id_unq_orig_date text,
  dateindex_psdc integer,
  company_id_psdc text,
  company_id_unq_psdc text,
  ticker_unq_psdc text,
  dateindexeom_psdc integer,
  company_id_unq_orig_psdc text,
  dateindex_psdd integer,
  company_id_psdd text,
  company_id_unq_psdd text,
  ticker_unq_psdd text,
  dateindexeom_psdd integer,
  company_id_unq_orig_psdd text,
  retdate_dateindex integer,
  retdate_dateindexeom integer,
  now_dateindex integer,
  now_dateindexeom integer,
  now_company_id_unq text,
  now_ticker_unq text,
  now_company text,
  now_price text,
  w52_dateindex integer,
  w52_dateindexeom integer,
  w52_company_id_unq text,
  w52_ticker_unq text,
  w52_company text,
  w52_prchg_52w_ann numeric,
  w52_pradchg_52w_ann numeric,
  w52_divaccmf4q numeric,
  w26_dateindex integer,
  w26_dateindexeom integer,
  w26_company_id_unq text,
  w26_ticker_unq text,
  w26_company text,
  w26_prchg_26w_ann numeric,
  w26_pradchg_26w_ann numeric,
  w26_divaccmf2q numeric,
  w13_dateindex integer,
  w13_dateindexeom integer,
  w13_company_id_unq text,
  w13_ticker_unq text,
  w13_company text,
  w13_prchg_13w_ann numeric,
  w13_pradchg_13w_ann numeric,
  w13_divaccmf1q numeric(15,2),
  dateindex_exchg integer,
  exchg_code text,
  exchg_desc text,
  dateindexeom_exchg integer,
  dateindex_mgdsc_sect integer,
  mg_code_sect text,
  mg_desc_sect text,
  dateindexeom_mgdsc_sect integer,
  dateindex_mgdsc_ind integer,
  mg_code_ind text,
  mg_desc_ind text,
  dateindexeom_mgdsc_ind integer,
  cash_q1 text,
  cash_q2 text,
  cash_q3 text,
  cash_q4 text,
  cash_q5 text,
  cash_q6 text,
  cash_q7 text,
  cash_q8 text,
  prchg_04w text,
  prchg_13w text,
  prchg_26w text,
  prchg_52w text
)
WITH (
  OIDS=FALSE
);
ALTER TABLE sipro_data_store.si_finecon
  OWNER TO postgres;

-- Index: sipro_data_store.si_finecon_cluster_idx

-- DROP INDEX sipro_data_store.si_finecon_cluster_idx;

CREATE INDEX si_finecon_cluster_idx
  ON sipro_data_store.si_finecon
  USING btree
  (dateindex_ci, adr, exchange COLLATE pg_catalog."default");
ALTER TABLE sipro_data_store.si_finecon CLUSTER ON si_finecon_cluster_idx;

-- Index: sipro_data_store.si_finecon_dateindex_ci_brin_idx

-- DROP INDEX sipro_data_store.si_finecon_dateindex_ci_brin_idx;

CREATE INDEX si_finecon_dateindex_ci_brin_idx
  ON sipro_data_store.si_finecon
  USING brin
  (dateindex_ci);

-- Index: sipro_data_store.si_finecon_jamesos_partial_idx

-- DROP INDEX sipro_data_store.si_finecon_jamesos_partial_idx;

CREATE INDEX si_finecon_jamesos_partial_idx
  ON sipro_data_store.si_finecon
  USING btree
  (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq_ci COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 AND company_id_unq_ci IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

-------------------------------------
-------------------------------------


CONCLUSION SUMMARY WINNER LOOSER BEST WORST
-------------------------------------------
                                          # see scratch_queries.txt
sales_over_price_ratio ( BEST COMPANIES ) # POSSIBLY SLIGHTLY BETTER - JUST EXAMINE 2Q OF sales_over_price_ratio
*** HIGHEST PERCENT WINNER ***            #  + WEAKER SLIGHTLY POSSIBLE BETTER - 6MONTH_PRICE_MOMENTUM 

fcf_over_price_ratio   ( BEST COMPANIES / WORSE COMPANIES )
*** VOLITILITY WINNER ***

not_tcf_over_price_ratio  ( BEST COMPANIES / WORSE COMPANIES )
*** SECOND BEST BAD RETURN AT WORSE '10%' ***

ce_over_price_opposite_div_share_weighted  ( WORSE COMPANIES )
*** ONE TAILED BIGGEST LOOSER ***
*** 13W VOLITILITY WNNER USEFULL ***

cash_f_ops_less_ni_over_market
OSAM_DEFENSE ( something to THINK ABOUT )



-- ce_over_price_opposite_div_share_weighted_momentum ( per share weighted )
--  >= 0.99  -- so more companies to choose from and tcf_q1::numeric(15,2) > 0.00  and  tcf_q2::numeric(15,2) > 0.00  and liab_q1::numeric(15,2) < liab_q2::numeric(15,2) 
-- 13 WEEK ** GREATEST LOOSER ** ( 69 CASES )
-- 'f'   9.38
-- 't' -57.00



---------------------
---------------------




How I loaded my "July 29, 2016" AAII data into PostgreSQL
---------------------------------------------------------

--
AAII SiPro 4.5 already updated to "March 29, 2016" ( last weekday of the month )

--
Check date on greatest folder of 
W:/New_Economics/forsight4.322/AAIISIProDBFs

> zoo::as.Date(16952)
[1] "2016-05-31"

Check ( ALREADY THERE: SO I DID A MANUAL COPY )
L:/MyVMWareSharedFolder
Did Find
L:\MyVMWareSharedFolder\
L:\MyVMWareSharedFolder\Professional160630 ( Last weekday of June )

> as.integer(zoo::as.Date("2016-06-30")) # [1] 16982 **

copyAAIISIProDBFs(
    from = "L:/MyVMWareSharedFolder/Professional160630"
  , to   = "W:/New_Economics/forsight4.322/AAIISIProDBFs/16982"
)

L:\MyVMWareSharedFolder\Professional160729 ( Last weekday of July )

> as.integer(zoo::as.Date("2016-07-29"))  # [1] 17011  **

copyAAIISIProDBFs(
    from = "L:/MyVMWareSharedFolder/Professional160729"
  , to   = "W:/New_Economics/forsight4.322/AAIISIProDBFs/17011"
)

Read readme.txt [x]

-- edge case: single fix
set search_path to sipro_stage;

alter table sipro_stage.alsmast_16952 add dateindexeom integer;
update sipro_stage.alsmast_16952 set dateindexeom = 16952;
alter table sipro_stage.alsmast_16952 add constraint alsmast_16952_dateindex_chk check (dateindex = 16952);
alter table sipro_stage.alsmast_16952 add constraint alsmast_16952_dateindexeom_chk check (dateindexeom = 16952);
alter table sipro_stage.alsmast_16952 inherit sipro_stage.alsmast;

# LOAD DBFs into POSTGRESQL
# just a particular month 
> massAAIISIProDBFsDB(conn, only_dirs_like = "where cinfo = 16982 ") # JOB uploads to db, adds dateindex column
[1] "NOT DONE (PLEASE DO LATER): alter table xxxxxx_16982 inherit xxxxxx"
DONE

# LOAD DBFs into POSTGRESQL
# just a particular month
> massAAIISIProDBFsDB(conn, only_dirs_like = "where cinfo = 17011 ")
[1] "NOT DONE (PLEASE DO LATER): alter table xxxxxx_17011 inherit xxxxxx"
DONE

# ORIGINAL CONSTRAINT IDEA WAS FOR PERFORMACE REASONS: I DO NOT USE ANAYMORE

# ADDS CONSTRAINTS ( CAN SKIP FOREVER )
# massAAIIinstallPartitionCheckConstraints(conn, tabl_regex_expr = "16982") 
DONE

# just one month
# ON THAT MAKES INDEXES: c("adr","country","exchange", "ind_2_dig", "ind_3_dig","mg_code", "mktcap"
# massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "16982")
DONE

# COLUMNS AND INDEXES OF THAT
# In ci_######, creates ... company_id_unq text ... ticker_unq text
# massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "16982", interested_columns = "si_ci_AND_company_id_unq_AND_ticker_unq")
DONE

# COLUMNS AND INDEXS OF THAT
# In (other_than_ci)_######, creates ... company_id_unq text ... ticker_unq text
# In (other_than_ci)_######, restricts # target.ticker_unq  to ci.ticker_unq 
# massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "16982", interested_columns = "not_si_ci_AND_company_id_unq_AND_ticker_unq")
DONE

# COLUMNS AND INDEXES OF THAT - alter table your_table add dateindexeom integer; - UPDATE_SQL; index
# massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "16982", interested_columns = "dateindexeom")
DONE

# ADDS CONSTRAINTS ( CAN SKIP FOREVER )
# massAAIIinstallPartitionCheckConstraints(conn, tabl_regex_expr = "16982", checked_col = "dateindexeom") 
DONE



-- ( BEGIN OF: IF LOADING A NEW MONTH ( ALREADY DONE ABOVE ) -> DO NOT REDO ) --
# ADDS CONSTRAINTS ( CAN SKIP FOREVER )
# massAAIIinstallPartitionCheckConstraints(conn, tabl_regex_expr = "17011") 
DONE

# just one month
# ON THAT MAKES INDEXES: c("adr","country","exchange", "ind_2_dig", "ind_3_dig","mg_code", "mktcap"
# massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17011")
DONE

# COLUMNS AND INDEXES OF THAT
# In ci_######, creates ... company_id_unq text ... ticker_unq text
# massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17011", interested_columns = "si_ci_AND_company_id_unq_AND_ticker_unq")
DONE

# COLUMNS AND INDEXS OF THAT
# In (other_than_ci)_######, creates ... company_id_unq text ... ticker_unq text
# In (other_than_ci)_######, restricts # target.ticker_unq  to ci.ticker_unq 
# massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17011", interested_columns = "not_si_ci_AND_company_id_unq_AND_ticker_unq")
DONE

# COLUMNS AND INDEXES OF THAT - alter table your_table add dateindexeom integer; - UPDATE_SQL; index
# massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17011", interested_columns = "dateindexeom")
DONE

# ADDS CONSTRAINTS ( CAN SKIP FOREVER )
# massAAIIinstallPartitionCheckConstraints(conn, tabl_regex_expr = "17011", checked_col = "dateindexeom") 
DONE
-- ( END OF: IF LOADING A NEW MONTH ( ALREADY DONE ABOVE ) -> DO NOT REDO ) --


-- have to INHERIT

# Since 'inherit' removed from massAAIISIProDBFsDB, then do it HERE
# massAAIIinstallTablesInherit(conn, tabl_regex_expr = "16982" )
DONE


# massAAIIinstallTablesInherit(conn, tabl_regex_expr = "17011" )
DONE

# create table  sipro_data_store.si_retdate_old as select * from  sipro_data_store.si_retdate;
# DONE

# createAAIIDataStoreSIProRetDateTable(conn, new_month_inserted = " dateindex = 16982 ")
# 30 SECONDS ( WORKS )
# DONE

# createAAIIDataStoreSIProRetDateTable(conn, new_month_inserted = " dateindex = 17011 ")
# DONE ( AFTER THE FIRST - THIS IS INSTANANEOUS )


# drop table sipro_data_store.si_ci;
# drop table sipro_data_store.si_psd;
# drop table sipro_data_store.si_isq;
# 
# drop table sipro_data_store.si_mgdsc;
# drop table sipro_data_store.si_exchg;
# drop table sipro_data_store.si_psdd;
# 
# drop table sipro_data_store.si_psdc;
# drop table sipro_data_store.si_date;
# drop table sipro_data_store.si_bsq;
# 
# drop table sipro_data_store.si_cfq;
# drop table sipro_data_store.si_mlt;
# drop table sipro_data_store.si_rat;
# DONE

# createAAIIDataStoreSIProSomeTables(conn)
# DONE 4:53 - 5:12 ( 17 MINUTES )

createAAIIDataOldDateCompanyIDUnqPatch(conn)
# DONE # 5:17 - 6:34 - ONE HOUR AND 17 MINUTES   --

# (CURRENLTY) HAS no INDEXES ( BUT THE R CODE BELOW DOES CREATE INDEXES )
# alter table sipro_data_store.si_returns rename to si_returns_old;
# DONE


# DROP si_returns_old schema_unique indexes
do
$$
declare 
  r record; 
begin
for r in 
    select 
      distinct 
          'drop index '  || ns.nspname  || '.' || i.relname || ';' command
    from pg_namespace ns, pg_class t, pg_class i, pg_index ix 
    where ns.oid = t.relnamespace and t.oid = ix.indrelid and ix.indexrelid = i.oid
    and t.relname = 'si_returns_old' -- specific table ( in this case )
    order by 1
  loop  
  execute r.command;
  raise notice '%', r.command;
end loop;
end$$;
# DONE



createAAIIDataStoreSIProReturnsTable(conn)
# DONE 7:25:25 - 7:33 ( 8 MINUTES )

# LEFT_OFF
# WED/MON_NIGHT

# drop table sipro_data_store.si_finecon; 
# DONE


# IN NEAR FUTURE [x] FIX IN R  [x] FIX IN .SQL FILE
# ReCreateAAIIOneBigRealTable(conn)
# NOTE [x] REMANE tbl.company_id_unq_tbl TO JUST tbl.company_id_unq ( NOT NECESSARY TO RENAME then RENAME back )
# DONE
# 

# JUST THEN
# PUT 'BIG PARTIAL INDEX creation SQL into R code. [x]

# GRAND DONE


----------------- SALVAGED - stored defined BRIN indexes ---------------------------------

( BUT REQUIRED SEE scratch_queries.txt TO SEE EXACTLY HOW I DID IT ( IMPORTANT ) ---------

-- Index: sipro_data_store.si_finecon_dateindex_ci_brin_idx

-- DROP INDEX sipro_data_store.si_finecon_dateindex_ci_brin_idx;

CREATE INDEX si_finecon_dateindex_ci_brin_idx
  ON sipro_data_store.si_finecon
  USING brin
  (dateindex_ci);


-- Index: sipro_data_store.si_finecon_cluster_idx

-- DROP INDEX sipro_data_store.si_finecon_cluster_idx;

CREATE INDEX si_finecon_cluster_idx
  ON sipro_data_store.si_finecon
  USING btree
  (dateindex_ci, adr, exchange COLLATE pg_catalog."default");
ALTER TABLE sipro_data_store.si_finecon CLUSTER ON si_finecon_cluster_idx;


-- Index: sipro_data_store.si_finecon_jamesos_partial_idx

-- DROP INDEX sipro_data_store.si_finecon_jamesos_partial_idx;

CREATE INDEX si_finecon_jamesos_partial_idx
  ON sipro_data_store.si_finecon
  USING btree
  (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq_ci COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 AND company_id_unq_ci IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));


---------------------- end of SALVAGED --------------------------------------


---------------------- SEE scratch_queries.txt -------------------------------



---------------------- END OF SEE scratch_queries.txt -------------------------------

  # MAJOR - COPY ACROSS SCEMAS(sipro_data_store to sipro_stage) company_id_unq AND company_id_unq_orig
  # SO I DO NOT KEEP HAVING TO RUN THE QUERIES ( 1.25 HOURS )

---------

---------------------
---------------------



loading AAII end of month (last weekday ) data of august 31, 2016 
-------------------------------------------------------------------

> shell("rstudio", wait = FALSE)
>  as.integer(zoo::as.Date("2016-08-31"))
[1] 17044


copyAAIISIProDBFs(
    from = "L:/MyVMWareSharedFolder/Professional160831"
  , to   = "W:/New_Economics/forsight4.322/AAIISIProDBFs/17044"
)

ALSO READ
W:\New_Economics\forsight4.322\AAIISIProDBFs\17044
  readme.txt

- Daily data updates (8/31/2016 Release)

(8/31/2016 Release)

To provide more timely data to Stock Investor Pro subscribers, we 
now offer DAILY data updates of the entire stock database. Data 
updates are made available Tueasday through Saturday, with price data 
through the previous days close. Barring any data delays or 
processing issues, the daily updates will be available by 12 p.m. 
(Central) time, Tuesday through Saturday. ( REALLY! )


# just a particular month
> massAAIISIProDBFsDB(conn, only_dirs_like = "where cinfo = 17044 ")

> massAAIISIProDBFsDB(conn, only_dirs_like = "where cinfo = 17044 ")
Loading required package: tcltk
[1] "SOURCE: W:/New_Economics/forsight4.322/AAIISIProDBFs/17044"
[1] "NOT DONE (PLEASE DO LATER): alter table alsmast_17044 inherit alsmast"
[1] "NOT DONE (PLEASE DO LATER): alter table datadict_17044 inherit datadict"
[1] "NOT DONE (PLEASE DO LATER): alter table ddviews_17044 inherit ddviews"
[1] "NOT DONE (PLEASE DO LATER): alter table drps_17044 inherit drps"
[1] "NOT DONE (PLEASE DO LATER): alter table filemast_17044 inherit filemast"
[1] "NOT DONE (PLEASE DO LATER): alter table indxmast_17044 inherit indxmast"
[1] "NOT DONE (PLEASE DO LATER): alter table listmast_17044 inherit listmast"
[1] "NOT DONE (PLEASE DO LATER): alter table pfcomp_17044 inherit pfcomp"
[1] "NOT DONE (PLEASE DO LATER): alter table prjct_17044 inherit prjct"
[1] "NOT DONE (PLEASE DO LATER): alter table prtflio_17044 inherit prtflio"
[1] "NOT DONE (PLEASE DO LATER): alter table relation_17044 inherit relation"
[1] "NOT DONE (PLEASE DO LATER): alter table scrndt_17044 inherit scrndt"
[1] "NOT DONE (PLEASE DO LATER): alter table scrnhd_17044 inherit scrnhd"
[1] "NOT DONE (PLEASE DO LATER): alter table setup_17044 inherit setup"
[1] "NOT DONE (PLEASE DO LATER): alter table si_avg_17044 inherit si_avg"
[1] "NOT DONE (PLEASE DO LATER): alter table si_bsa_17044 inherit si_bsa"
[1] "NOT DONE (PLEASE DO LATER): alter table si_bsq_17044 inherit si_bsq"
[1] "NOT DONE (PLEASE DO LATER): alter table si_cfa_17044 inherit si_cfa"
[1] "NOT DONE (PLEASE DO LATER): alter table si_cfq_17044 inherit si_cfq"
[1] "NOT DONE (PLEASE DO LATER): alter table si_ci_17044 inherit si_ci"
[1] "NOT DONE (PLEASE DO LATER): alter table si_date_17044 inherit si_date"
[1] "NOT DONE (PLEASE DO LATER): alter table si_dow_17044 inherit si_dow"
[1] "NOT DONE (PLEASE DO LATER): alter table si_ee_17044 inherit si_ee"
[1] "NOT DONE (PLEASE DO LATER): alter table si_exchg_17044 inherit si_exchg"
[1] "NOT DONE (PLEASE DO LATER): alter table si_gr_17044 inherit si_gr"
[1] "NOT DONE (PLEASE DO LATER): alter table si_isa_17044 inherit si_isa"
[1] "NOT DONE (PLEASE DO LATER): alter table si_isq_17044 inherit si_isq"
[1] "NOT DONE (PLEASE DO LATER): alter table si_mgav2_17044 inherit si_mgav2"
[1] "NOT DONE (PLEASE DO LATER): alter table si_mgavg_17044 inherit si_mgavg"
[1] "NOT DONE (PLEASE DO LATER): alter table si_mgdsc_17044 inherit si_mgdsc"
[1] "NOT DONE (PLEASE DO LATER): alter table si_mlt_17044 inherit si_mlt"
[1] "NOT DONE (PLEASE DO LATER): alter table si_perc_17044 inherit si_perc"
[1] "NOT DONE (PLEASE DO LATER): alter table si_psd_17044 inherit si_psd"
[1] "NOT DONE (PLEASE DO LATER): alter table si_psda_17044 inherit si_psda"
[1] "NOT DONE (PLEASE DO LATER): alter table si_psdc_17044 inherit si_psdc"
[1] "NOT DONE (PLEASE DO LATER): alter table si_psdd_17044 inherit si_psdd"
[1] "NOT DONE (PLEASE DO LATER): alter table si_psdh_17044 inherit si_psdh"
[1] "NOT DONE (PLEASE DO LATER): alter table si_psdl_17044 inherit si_psdl"
[1] "NOT DONE (PLEASE DO LATER): alter table si_psdv_17044 inherit si_psdv"
[1] "NOT DONE (PLEASE DO LATER): alter table si_ptyp_17044 inherit si_ptyp"
[1] "NOT DONE (PLEASE DO LATER): alter table si_rat_17044 inherit si_rat"
[1] "NOT DONE (PLEASE DO LATER): alter table si_sp_17044 inherit si_sp"
[1] "NOT DONE (PLEASE DO LATER): alter table si_udf_17044 inherit si_udf"
[1] "NOT DONE (PLEASE DO LATER): alter table si_utyp_17044 inherit si_utyp"
[1] "NOT DONE (PLEASE DO LATER): alter table si_val_17044 inherit si_val"
[1] "NOT DONE (PLEASE DO LATER): alter table stdview_17044 inherit stdview"
[1] "NOT DONE (PLEASE DO LATER): alter table udflds_17044 inherit udflds"
[1] "NOT DONE (PLEASE DO LATER): alter table usrptdt_17044 inherit usrptdt"
[1] "NOT DONE (PLEASE DO LATER): alter table usrpts_17044 inherit usrpts"


massAAIIinstallPartitionCheckConstraints(conn, tabl_regex_expr = "17044")
...
Begin interested_table: usrptdt_17044 number 48 of 49
  Begin interested_column: dateindex of usrptdt_17044
select dateindex from usrptdt_17044 limit 1 
alter table usrptdt_17044 add constraint usrptdt_17044_dateindex_chk check (dateindex = 17044) 
  End interested_column: dateindex
End interested_table: usrptdt_17044
Begin interested_table: usrpts_17044 number 49 of 49
  Begin interested_column: dateindex of usrpts_17044
select dateindex from usrpts_17044 limit 1 
alter table usrpts_17044 add constraint usrpts_17044_dateindex_chk check (dateindex = 17044) 
  End interested_column: dateindex
End interested_table: usrpts_17044
...
DONE

-- default ONLY works ON
-- "adr","country","exchange", "ind_2_dig", "ind_3_dig","mg_code", "mktcap"
massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17044")

Begin interested_table: usrpts_17044 number 49 of 49
  Begin interested_column: adr of usrpts_17044
  End interested_column: adr
  Begin interested_column: country of usrpts_17044
  End interested_column: country
  Begin interested_column: exchange of usrpts_17044
  End interested_column: exchange
  Begin interested_column: ind_2_dig of usrpts_17044
  End interested_column: ind_2_dig
  Begin interested_column: ind_3_dig of usrpts_17044
  End interested_column: ind_3_dig
  Begin interested_column: mg_code of usrpts_17044
  End interested_column: mg_code
  Begin interested_column: mktcap of usrpts_17044
  End interested_column: mktcap
End interested_table: usrpts_17044

massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17044", interested_columns = "si_ci_AND_company_id_unq_AND_ticker_unq")

Begin interested_table: si_ci_17044 number 20 of 49
  Begin interested_column: si_ci_AND_company_id_unq_AND_ticker_unq of si_ci_17044
  End interested_column: si_ci_AND_company_id_unq_AND_ticker_unq
  Begin interested_column: si_ci_AND_company_id_unq_AND_ticker_unq of si_ci_17044

        alter table si_ci_17044 add company_id_unq text; 

        update si_ci_17044 set company_id_unq = company_id 
        where company_id in ( select company_id from si_ci_17044 group by company_id having count(company_id) = 1); 

        create index si_ci_17044_company_id_unq_idx on si_ci_17044(company_id_unq); 

        alter table si_ci_17044 add ticker_unq text;

        update si_ci_17044 set ticker_unq = ticker 
        where company_id_unq is not null; 

        create index si_ci_17044_ticker_unq_idx on si_ci_17044(ticker_unq);  

  End interested_column: si_ci_AND_company_id_unq_AND_ticker_unq
End interested_table: si_ci_17044
Begin interested_table: si_date_17044 number 21 of 49
  Begin interested_column: si_ci_AND_company_id_unq_AND_ticker_unq of si_date_17044
  End interested_column: si_ci_AND_company_id_unq_AND_ticker_unq
End interested_table: si_date_17044

massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17044", interested_columns = "not_si_ci_AND_company_id_unq_AND_ticker_unq")

Begin interested_table: si_date_17044 number 21 of 49
  Begin interested_column: not_si_ci_AND_company_id_unq_AND_ticker_unq of si_date_17044
  End interested_column: not_si_ci_AND_company_id_unq_AND_ticker_unq
  Begin interested_column: not_si_ci_AND_company_id_unq_AND_ticker_unq of si_date_17044
 

        alter table si_date_17044 add company_id_unq text; 

        update si_date_17044 set company_id_unq = company_id 
        where company_id in ( select company_id from si_date_17044 group by company_id having count(company_id) = 1) and company_id in (select company_id_unq from si_ci_17044); 

        create index si_date_17044_company_id_unq_idx on si_date_17044(company_id_unq); 

        alter table si_date_17044 add ticker_unq text; 

        update si_date_17044 trg set ticker_unq = ci.ticker_unq 
        from si_ci_17044 ci where 
        trg.company_id_unq is not null and  -- too extra safe 
        trg.company_id_unq = ci.company_id_unq; 

        create index si_date_17044_ticker_unq_idx on si_date_17044(ticker_unq); 

       
  End interested_column: not_si_ci_AND_company_id_unq_AND_ticker_unq
End interested_table: si_date_17044

massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17044", interested_columns = "dateindexeom")

Begin interested_table: si_ci_17044 number 20 of 49
  Begin interested_column: dateindexeom of si_ci_17044
  End interested_column: dateindexeom
  Begin interested_column: dateindexeom of si_ci_17044
 

        alter table si_ci_17044 add dateindexeom integer;

        update si_ci_17044 tbl set dateindexeom = ( select extract( 
          'epoch' from ( select date_trunc('month', to_timestamp(tbl.dateindex*3600*24)::date) + 
          interval '1 month' - interval '1 day' )
        ) / ( 3600*24 ) );

        create index si_ci_17044_dateindexeom_idx on si_ci_17044(dateindexeom);

       
  End interested_column: dateindexeom
End interested_table: si_ci_17044
Begin interested_table: si_date_17044 number 21 of 49
  Begin interested_column: dateindexeom of si_date_17044
  End interested_column: dateindexeom
  Begin interested_column: dateindexeom of si_date_17044
 

        alter table si_date_17044 add dateindexeom integer;

        update si_date_17044 tbl set dateindexeom = ( select extract( 
          'epoch' from ( select date_trunc('month', to_timestamp(tbl.dateindex*3600*24)::date) + 
          interval '1 month' - interval '1 day' )
        ) / ( 3600*24 ) );

        create index si_date_17044_dateindexeom_idx on si_date_17044(dateindexeom);

       
  End interested_column: dateindexeom
End interested_table: si_date_17044

massAAIIinstallPartitionCheckConstraints(conn, tabl_regex_expr = "17044", checked_col = "dateindexeom")

Begin interested_table: si_ci_17044 number 20 of 49
  Begin interested_column: dateindexeom of si_ci_17044
select dateindexeom from si_ci_17044 limit 1 
alter table si_ci_17044 add constraint si_ci_17044_dateindexeom_chk check (dateindexeom = 17044) 
  End interested_column: dateindexeom
End interested_table: si_ci_17044
Begin interested_table: si_date_17044 number 21 of 49
  Begin interested_column: dateindexeom of si_date_17044
select dateindexeom from si_date_17044 limit 1 
alter table si_date_17044 add constraint si_date_17044_dateindexeom_chk check (dateindexeom = 17044) 
  End interested_column: dateindexeom
End interested_table: si_date_17044


-- ( BEGIN OF: IF LOADING A NEW MONTH ( ALREADY DONE ABOVE ) -> DO NOT REDO ) --
-- do not redo ---
massAAIIinstallPartitionCheckConstraints(conn, tabl_regex_expr = "17044")

select dateindex from si_ci_17044 limit 1 
alter table si_ci_17044 add constraint si_ci_17044_dateindex_chk check (dateindex = 17044) 
Error in postgresqlExecStatement(conn, statement, ...) : 
  RS-DBI driver: (could not Retrieve the result : ERROR:  constraint "si_ci_17044_dateindex_chk" for relation "si_ci_17044" already exists
)
  End interested_column: dateindex
End interested_table: si_ci_17044
Begin interested_table: si_date_17044 number 21 of 49
  Begin interested_column: dateindex of si_date_17044
select dateindex from si_date_17044 limit 1 
alter table si_date_17044 add constraint si_date_17044_dateindex_chk check (dateindex = 17044) 
Error in postgresqlExecStatement(conn, statement, ...) : 
  RS-DBI driver: (could not Retrieve the result : ERROR:  constraint "si_date_17044_dateindex_chk" for relation "si_date_17044" already exists
)
  End interested_column: dateindex
End interested_table: si_date_17044
-- do not redo --
-- ( END OF: IF LOADING A NEW MONTH ( ALREADY DONE ABOVE ) -> DO NOT REDO ) --

massAAIIinstallTablesInherit(conn, tabl_regex_expr = "17044" )

Begin interested_table: si_ci_17044 number 20 of 49
alter table si_ci_17044 inherit si_ci 
End interested_table: si_ci_17044
Begin interested_table: si_date_17044 number 21 of 49
alter table si_date_17044 inherit si_date 
End interested_table: si_date_17044

create table  sipro_data_store.si_retdate_old as select * from  sipro_data_store.si_retdate;
Query returned successfully: 70 rows affected, 468 msec execution time.


createAAIIDataStoreSIProRetDateTable(conn, new_month_inserted = " dateindex = 17044 ")
DONE
  select * from  sipro_data_store.si_retdate WHERE dateindex = 17044;
finance_econ=# select * from  sipro_data_store.si_retdate WHERE dateindex = 17044;
 dateindex | dateindexf12meom | dateindexf12mlwd | dateindexf09meom | dateindexf09mlwd | dateindexf06meom | dateindexf06mlwd | dateindexf03meom | dateindexf03mlwd
-----------+------------------+------------------+------------------+------------------+------------------+------------------+------------------+------------------
     17044 |            17409 |            17409 |            17317 |            17317 |            17225 |            17225 |            17135 |            17135
(1 row)


drop table sipro_data_store.si_ci;
drop table sipro_data_store.si_psd;
drop table sipro_data_store.si_isq;

drop table sipro_data_store.si_mgdsc;
drop table sipro_data_store.si_exchg;
drop table sipro_data_store.si_psdd;

drop table sipro_data_store.si_psdc;
drop table sipro_data_store.si_date;
drop table sipro_data_store.si_bsq;

drop table sipro_data_store.si_cfq;
drop table sipro_data_store.si_mlt;
drop table sipro_data_store.si_rat;

DONE

createAAIIDataStoreSIProSomeTables(conn)
STARTED AT 1:45:45 ( SHOULD RUN 17 MINUTES )
GARENTEED AT LEAST FINISHED BEFORE 2:13 ( 28 MINUTES )
DONE

---- createAAIIDataOldDateCompanyIDUnqPatch(conn)
# EXPECT - ONE HOUR AND 17 MINUTES ( START AT  2:24 END AT _no later than 4:00 P.M._ )

creates company_id_unq_orig column

  alter table sipro_data_store.si_TRG add column company_id_unq_orig text;
  -- instantaneously

  update sipro_data_store.si_TRG set company_id_unq_orig = company_id_unq;
  -- 5 minutes

  update sipro_data_store.si_TRG TRG 
  set company_id_unq = ci_f.company_id_unq
  from sipro_data_store.si_ci ci_f
  where ci.ticker_unq = ci_f.ticker_unq
  and   ci.dateindex   in (
                           14911,
                           14943,
                           14974,
                           15005,
                           15033,
                           15064,
                           15093,
                           15125,
                           15155
                          )
  and ci_f.dateindex = 15184;
DONE

-- ANDRE ADDED OCT 2016 (UNVERIFIED)
drop table if exists sipro_data_store.si_returns_old;
--Query returned successfully 
alter table sipro_data_store.si_returns rename to si_returns_old;
--Query returned successfully 


# DROP si_returns_old schema_unique indexes
do
$$
declare 
  r record; 
begin
for r in 
    select 
      distinct 
          'drop index '  || ns.nspname  || '.' || i.relname || ';' command
    from pg_namespace ns, pg_class t, pg_class i, pg_index ix 
    where ns.oid = t.relnamespace and t.oid = ix.indrelid and ix.indexrelid = i.oid
    and t.relname = 'si_returns_old' -- specific table ( in this case )
    order by 1
  loop  
  execute r.command;
  raise notice '%', r.command;
end loop;
end$$;
# DONE


createAAIIDataStoreSIProReturnsTable(conn)
DONE ( EST 8 MINT JOB )


ReCreateAAIIOneBigRealTable(conn)
DONE ( STARTED 9:15  ) DONE 9:58 ( 45 MINUTES )

GRAND DONE




BEGIN SEP 30 2016 AAII Data load and processing
-----------------------------------------------

copyAAIISIProDBFs(
    from = "L:/MyVMWareSharedFolder/Professional160930"
  , to   = "W:/New_Economics/forsight4.322/AAIISIProDBFs/17074"
)
# DONE

massAAIISIProDBFsDB(conn, only_dirs_like = "where cinfo = 17074 ")
# DONE

massAAIIinstallPartitionCheckConstraints(conn, tabl_regex_expr = "17074")
# DONE

massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17074")
# DONE

massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17074", interested_columns = "si_ci_AND_company_id_unq_AND_ticker_unq")
# DONE

massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17074", interested_columns = "not_si_ci_AND_company_id_unq_AND_ticker_unq")
# DONE

massAAIIinstallOtherCommonColumnsIndexes(conn, tabl_regex_expr = "17074", interested_columns = "dateindexeom")
# DONE

massAAIIinstallPartitionCheckConstraints(conn, tabl_regex_expr = "17074", checked_col = "dateindexeom")
# DONE

massAAIIinstallTablesInherit(conn, tabl_regex_expr = "17074" )
# DONE

createAAIIDataStoreSIProRetDateTable(conn, new_month_inserted = " dateindex = 17074 ")
# ABOUT 60 SECONDS BECAUSE IT SCANS ALL_DATA
# DONE ( DOES NOT PRINT PRINTED OUTPUT )
# ONE new record IS CREATED
# select * from  sipro_data_store.si_retdate WHERE dateindex = 17074;
# DONE VIEWING

# BECAUSE BELOW IN createAAIIDataStoreSIProSomeTables(conn) 
# tables are re-created USING ...  as select * from sipro_stage.si_
# BELOW INDEXES are re-added to re-created tables

set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;

drop table sipro_data_store.si_ci;
drop table sipro_data_store.si_psd;
drop table sipro_data_store.si_isq;

drop table sipro_data_store.si_mgdsc;
drop table sipro_data_store.si_exchg;
drop table sipro_data_store.si_psdd;

drop table sipro_data_store.si_psdc;
drop table sipro_data_store.si_date;
drop table sipro_data_store.si_bsq;

drop table sipro_data_store.si_cfq;
drop table sipro_data_store.si_mlt;
drop table sipro_data_store.si_rat;

# DONE

# REPEAT ( from ABOVE )
# # BECAUSE BELOW IN createAAIIDataStoreSIProSomeTables(conn) 
# # tables are re-created USING ...  as select * from sipro_stage.si_
# # BELOW INDEXES are re-added to re-created tables
createAAIIDataStoreSIProSomeTables(conn) # 17 to 28 MINUTE RUN # ( BEGIN 9:56:15 .... END 10:18 )
# DONE

# ** MUST BE RUN: BECUASE ( ReCreateAAIIOneBigRealTable(conn) : TRIES TO COPY THESE company_id_unq_orig COLUMNS ) ***
createAAIIDataOldDateCompanyIDUnqPatch(conn)
# EXPECT - ONE HOUR AND 17 MINUTES ( BEBIN 11:44:56  END 1:28 P.M.(COULD HAVE BEEN EARLIER )  
# DONE

drop table if exists sipro_data_store.si_returns_old;
# DONE
alter table sipro_data_store.si_returns rename to si_returns_old;
# DONE

# DROP si_returns_old schema_unique indexes
# 
do
$$
declare 
  r record; 
begin
for r in 
    select 
      distinct 
          'drop index '  || ns.nspname  || '.' || i.relname || ';' command
    from pg_namespace ns, pg_class t, pg_class i, pg_index ix 
    where ns.oid = t.relnamespace and t.oid = ix.indrelid and ix.indexrelid = i.oid
    and t.relname = 'si_returns_old' -- specific table ( in this case )
    order by 1
  loop  
  execute r.command;
  raise notice '%', r.command;
end loop;
end$$;
# DONE

createAAIIDataStoreSIProReturnsTable(conn)
# 8 MINUTES ( UNDER 'GOOD' CONDITIONS' ) 
# ( BEGIN 10:51:20  ...    END  ...  11:18f(OR WAY EARLIER) )
# DONE

# internally ( IT DOES ON FIRST LINE )
# drop table if exists sipro_data_store.si_finecon; -- DOES 'NOT rename and drop indexes' ( UNLIKE si_returns/si_returns_old )
# create table sipro_data_store.si_finecon1 
#   as
# select  
ReCreateAAIIOneBigRealTable(conn)
# ( UNDER GOOD CONDITIONS: EXPECTED TIME: 45 MINUTES ) ( BEGIN 1:30:50  END 2:37 P.M.(COULD BE EARLIER )
# NOTICE:  index "si_finecon_jamesos_partial_idx" does not exist, skipping ( LATER: REMOVE: drop index if exists ... )
# DONE #

# END SEP 30 2016 AAII Data load and processing



-----------------------------------------------------------------------------------------------------------

-----------------  ce_over_price_opposite_div_share_weighted_momentum EXPERIMENTS
-----------------

-- ( AT THIS TIME: NO MORE RESEARCH )


-- TODO [x]
-- see "MISSING ncc from isq COME_BACK" of scratch_queries.txt

-- TODO [ ] oshaughnessy :ncc_q1 - net cash flow / debt
                      -- total cash from financing
-- TODO [X] ( fcfps_q1 - tcf_q1 / shr_aq1 ) / price
-- TODO [X]   fcfps_q1 / price  -- DONE: BIG LOOSER
            fcf_over_price_ratio
            fcf_over_price_ratio_2q


-- TODO [X] ( fcfps_q1 + ce_q1 / shr_aq1 + divpaid_q1 / shr_aq1 ) / price  
           -- aka INBOUND
           -- fcf_p_divpaid_p_ce_over_price_ratio - >= 0.99 ... 0% ... but ce/price is much more extreme
               
-- TODO [x] 'dual cash flow' stuff

-- Percent of Sales - operating dual cash flow 
-- dcfo_q1 [X]


-- Percent of Sales - balance sheet dual cash flow 
-- dcfbs_q1 [X]


-- Percent of Sales - Dual Cash Flow (DCF)
-- The dual cash flow method seeks out companies with increasing cash flow from operations 
-- but falling cash from balance sheet changes. 
-- 
-- The model views the build-up of excess cash itself as the growth of an unproductive asset
-- 
-- dcf_q1 [x]

-- can I 'shorten' my company range
-- best performing sector over the last 5 years [x]
  [ ]  do somethng with it?


-- best performing industry over the last 5 years [x]
  [ ] do something with it?

-- *******
-- LEFT_OFF: SEARCH find the 'worst companies that match all of these criteria
-- IN scratch_queries.txt
-- ********

-- FIND THE BIGGEST LOOSERS  
-- ADD TO GAGE EFFECTIVENESS: stddev_pop

-- SHOULD/HAS to be put in si_fincon [ ] ( BUT JUST PRICE PESSIMISM ( NOT DIVIDENDS ) )
  , avg(coalesce(sq.w52_pradchg_52w_ann,-100.00)) w52_pradchg_52w_ann_pess
    , stddev_pop(coalesce(sq.w52_pradchg_52w_ann,-100.00)) w52_ann_sd_pess
  , avg(coalesce(sq.w26_pradchg_26w_ann,-100.00)) w26_pradchg_26w_ann_pess
    , stddev_pop(coalesce(sq.w26_pradchg_26w_ann,-100.00)) w26_ann_sd_pess
  , avg(coalesce(sq.w13_pradchg_13w_ann,-100.00)) w13_pradchg_13w_ann_pess
    , stddev_pop(coalesce(sq.w13_pradchg_13w_ann,-100.00)) w13_ann_sd_pess

Buy Historical Options)
(EVERYTHING OF YEAR 2015)
Total:	$600.00
https://datashop.cboe.com/cart
  OTHER
  http://www.historicaloptiondata.com/
  MAY? WORK FOR FREE?
  http://crimsonmind.com/optionsr/HistoryDateNo.aspx



Black-Scholes Formula (d1, d2, Call Price, Put Price, Greeks)
http://www.macroption.com/black-scholes-formula/
  Understanding Option Greeks and Dividends
  https://www.tradeking.com/education/options/option-greeks-explained


SATURDAY ( IN OPTIONS, I DO NOT EVER GET THE dividend: need to work without DIVIDEND )
Note, my returns include dividends                                  si_fincon
need to bring over the column that includes 'price change' ONLY. [HAVE ALREADY HAD THAT] 


*** ANDRE ****
END - why am I missing RETURN data - low counts? [SEEMS CORRECT ANSWER] 

[STD IS CORRECT(USABLE)] 'LESS_CORRECT FORM'
  , stddev_pop(sq.w26_pradchg_26w_ann) w26_ann_sd ==
  , stddev_pop(sq.w26_pradchg_26w_ann / 2.0) * 2.0 w26_ann_sd_correct
AND
  , stddev_pop(sq.w13_pradchg_13w_ann) w13_ann_sd ==
  , stddev_pop(sq.w13_pradchg_13w_ann / 4.0) * 4.0 w13_ann_sd_correct

*** ANDRE ****
DO I NEED AAII month end data m_##? prices [ ]



----------------------
----------------------
-- Monday, September 5th
-- end of evenings

VACUUM; 

--






---------- BEGIN SCRATCH

select avg(w52_pradchg_52w_ann::numeric(15,2)), stddev_pop(w52_pradchg_52w_ann::numeric(15,2))
from sipro_data_store.si_finecon
    where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
    -- and prchg_26w::numeric(15,2) > 0 
;
-- 8.6/40

select avg(w52_pradchg_52w_ann::numeric(15,2)), stddev_pop(w52_pradchg_52w_ann::numeric(15,2))
from sipro_data_store.si_finecon
    where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
    and prchg_26w::numeric(15,2) > 0 
;
-- 9.7/37

select avg(w52_pradchg_52w_ann::numeric(15,2)), stddev_pop(w52_pradchg_52w_ann::numeric(15,2))
from sipro_data_store.si_finecon
    where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
    and prchg_26w::numeric(15,2) <= 0 
;
-- 6.8/44


select avg(w52_pradchg_52w_ann::numeric(15,2)), stddev_pop(w52_pradchg_52w_ann::numeric(15,2))
from sipro_data_store.si_finecon
    where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
    and prchg_04w::numeric(15,2) > 0  
    and prchg_13w::numeric(15,2) > 0 
    and prchg_26w::numeric(15,2) > 0 
    and prchg_52w::numeric(15,2) > 0 
-- 10.5/35

select avg(w52_pradchg_52w_ann::numeric(15,2)), stddev_pop(w52_pradchg_52w_ann::numeric(15,2))
from sipro_data_store.si_finecon
    where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
    and prchg_04w::numeric(15,2) > 0  
    and prchg_13w::numeric(15,2) > 0 
    and prchg_26w::numeric(15,2) > 0 
    and prchg_52w::numeric(15,2) > 0 
    and sales_q1::numeric(15,2) > 0 and sales_q1::numeric(15,2) > sales_q2::numeric(15,2) and sales_q2::numeric(15,2) > sales_q3::numeric(15,2)
-- 10.8/35

select avg(w52_pradchg_52w_ann::numeric(15,2)), stddev_pop(w52_pradchg_52w_ann::numeric(15,2))
from sipro_data_store.si_finecon
    where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
    and prchg_04w::numeric(15,2) > 0  
    and prchg_13w::numeric(15,2) > 0 
    and prchg_26w::numeric(15,2) > 0 
    and prchg_52w::numeric(15,2) > 0 
    and fcfps_q1::numeric(15,2) > 0 and fcfps_q1::numeric(15,2) > fcfps_q2::numeric(15,2) and fcfps_q2::numeric(15,2) > fcfps_q3::numeric(15,2)
-- 11.42/32

select avg(w52_pradchg_52w_ann::numeric(15,2)), stddev_pop(w52_pradchg_52w_ann::numeric(15,2))
from sipro_data_store.si_finecon
    where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
    and prchg_04w::numeric(15,2) > 0  
    and prchg_13w::numeric(15,2) > 0 
    and prchg_26w::numeric(15,2) > 0 
    and prchg_52w::numeric(15,2) > 0 
    and sales_q1::numeric(15,2) > 0 and sales_q1::numeric(15,2) > sales_q2::numeric(15,2) and sales_q2::numeric(15,2) > sales_q3::numeric(15,2)
    and fcfps_q1::numeric(15,2) > 0 and fcfps_q1::numeric(15,2) > fcfps_q2::numeric(15,2) and fcfps_q2::numeric(15,2) > fcfps_q3::numeric(15,2)
-- 11.64/32






explain

select dateindex, mg_desc_ind, 
   avg(prchg_04w::numeric(15,2))::numeric(15,2) prchg_04w_mg_ind 
 , avg(prchg_13w::numeric(15,2))::numeric(15,2) prchg_13w_mg_ind        
 , avg(prchg_26w::numeric(15,2))::numeric(15,2) prchg_26w_mg_ind 
 , avg(prchg_52w::numeric(15,2))::numeric(15,2) prchg_52w_mg_ind                   
from sipro_data_store.si_finecon  
    where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%']) 
group by dateindex, mg_desc_ind order by 1,2


explain
select 1 from (
  select dateindex, mg_desc_ind, 
     avg(prchg_04w::numeric(15,2))::numeric(15,2) prchg_04w_mg_ind 
   , avg(prchg_13w::numeric(15,2))::numeric(15,2) prchg_13w_mg_ind        
   , avg(prchg_26w::numeric(15,2))::numeric(15,2) prchg_26w_mg_ind 
   , avg(prchg_52w::numeric(15,2))::numeric(15,2) prchg_52w_mg_ind                   
  from sipro_data_store.si_finecon  
      where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%']) 
  group by dateindex, mg_desc_ind-- order by 1,2
) sq1, 
( 
  select dateindex, mg_desc_ind
   from sipro_data_store.si_finecon
) sq2
where sq1.dateindex   = sq2.dateindex and
      sq1.mg_desc_ind = sq2.mg_desc_ind
-- 1 minute and 22 secods ( NOT BAD FOR AN INEFFICIENT QUERY )



-- if I use the 'short text' instead --

explain -- 473,000
select 1 from (
  select dateindex, mg_code_ind, 
     avg(prchg_04w::numeric(15,2))::numeric(15,2) prchg_04w_mg_ind_jamesos
   , avg(prchg_13w::numeric(15,2))::numeric(15,2) prchg_13w_mg_ind_jamesos        
   , avg(prchg_26w::numeric(15,2))::numeric(15,2) prchg_26w_mg_ind_jamesos 
   , avg(prchg_52w::numeric(15,2))::numeric(15,2) prchg_52w_mg_ind_jamesos                   
  from sipro_data_store.si_finecon  
      where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%']) 
  group by dateindex, mg_code_ind-- order by 1,2
) sq1, 
( 
  select dateindex, mg_code_ind
   from sipro_data_store.si_finecon
) sq2
where sq1.dateindex   = sq2.dateindex and
      sq1.mg_code_ind = sq2.mg_code_ind
-- 1 minute and 9 seconds / 50 seconds
-- 'query/index' is much more important than the 'datalength of the column'


-- curiosity - and inefficient self joincompany_id_unq

explain -- says (7-8)x slower than above 3,100,000 ( ERROR: this is a  cartesian product )
select 1 from (
  select dateindex, mg_code_ind
   from sipro_data_store.si_finecon
) sq1, 
( 
  select dateindex, mg_code_ind
   from sipro_data_store.si_finecon
) sq2
where sq1.dateindex   = sq2.dateindex and
      sq1.mg_code_ind = sq2.mg_code_ind


explain -- 382,000 ( really )
select 1 from (
  select dateindex, mg_code_ind, 
     avg(prchg_04w::numeric(15,2))::numeric(15,2) prchg_04w_mg_ind_jamesos
   , avg(prchg_13w::numeric(15,2))::numeric(15,2) prchg_13w_mg_ind_jamesos        
   , avg(prchg_26w::numeric(15,2))::numeric(15,2) prchg_26w_mg_ind_jamesos 
   , avg(prchg_52w::numeric(15,2))::numeric(15,2) prchg_52w_mg_ind_jamesos                   
  from sipro_data_store.si_finecon  
      where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%']) 
  group by dateindex, mg_code_ind-- order by 1,2
) sq1, 
( 
  select dateindex, mg_code_ind, 
     avg(prchg_04w::numeric(15,2))::numeric(15,2) prchg_04w_mg_ind_jamesos
   , avg(prchg_13w::numeric(15,2))::numeric(15,2) prchg_13w_mg_ind_jamesos        
   , avg(prchg_26w::numeric(15,2))::numeric(15,2) prchg_26w_mg_ind_jamesos 
   , avg(prchg_52w::numeric(15,2))::numeric(15,2) prchg_52w_mg_ind_jamesos                   
  from sipro_data_store.si_finecon  
      where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%']) 
  group by dateindex, mg_code_ind-- order by 1,2
) sq2
where sq1.dateindex   = sq2.dateindex and
      sq1.mg_code_ind = sq2.mg_code_ind


explain -- ABOVE - WITHOUT CRUFT -- still 382,000
select 1 from (
  select dateindex, mg_code_ind                   
  from sipro_data_store.si_finecon  
      where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%']) 
  group by dateindex, mg_code_ind-- order by 1,2
) sq1, 
( 
  select dateindex, mg_code_ind                  
  from sipro_data_store.si_finecon  
      where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%']) 
  group by dateindex, mg_code_ind-- order by 1,2
) sq2
where sq1.dateindex   = sq2.dateindex and
      sq1.mg_code_ind = sq2.mg_code_ind
-- 43.9 seconds

-- SHOULD NOT HAVE BEEN GROUPED -- 495,000
explain -- AB
select 1 from (
  select dateindex, mg_code_ind                   
  from sipro_data_store.si_finecon  
      where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%']) 
) sq1, 
( 
  select dateindex, mg_code_ind                  
  from sipro_data_store.si_finecon  
      where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%']) 
) sq2
where sq1.dateindex   = sq2.dateindex and
      sq1.mg_code_ind = sq2.mg_code_ind
-- 

explain -- 585,000
select 1 from (
  select dateindex, company_id_unq                  
  from sipro_data_store.si_finecon  
) sq1, 
( 
  select dateindex, company_id_unq                 
  from sipro_data_store.si_finecon   
) sq2
where sq1.dateindex   = sq2.dateindex and
      sq1.company_id_unq = sq2.company_id_unq

-- one minute and 13 seconds


-- END SCRATCH



-- wed Sept september 28 ( back from Oracle Openworld) --

-- I added large table
--CREATE TABLE sipro_data_store.bonds_chg

  -- SUDDEN SLOWNESS -- BASIC QUERIES NEVER FINISH --

-- I added another large table
--CREATE TABLE sipro_data_store.gld_chg


-- Wed night ...  vacuum analyze;  -- DID NOT SEEM TO HAVE ANY AFFECT

-- work of sat oct 1

set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;

explain
select 
    sq.start_date
  , sq.growing_netinc_4q_q
  -- , count(sq.w52_pradchg_52w_ann) the_count -- DOES WORK ( 't' 1 PERCENT OF CASES )
  , avg(sq.w52_pradchg_52w_ann) w52_pradchg_52w_ann
  , avg(sq.w26_pradchg_26w_ann) w26_pradchg_26w_ann
  , avg(sq.w13_pradchg_13w_ann) w13_pradchg_13w_ann
from
( select 
      to_timestamp(dateindex*3600*24)::date start_date 
    , ticker 
    , netinc_q1::numeric(15,2)/nullif(assets_q1::numeric(15,2),0.00) > netinc_q2::numeric(15,2)/nullif(assets_q2::numeric(15,2),0.00) and 
      netinc_q2::numeric(15,2)/nullif(assets_q2::numeric(15,2),0.00) > netinc_q3::numeric(15,2)/nullif(assets_q3::numeric(15,2),0.00) and 
      netinc_q3::numeric(15,2)/nullif(assets_q3::numeric(15,2),0.00) > netinc_q4::numeric(15,2)/nullif(assets_q4::numeric(15,2),0.00) and 
      netinc_q4::numeric(15,2)/nullif(assets_q4::numeric(15,2),0.00) > netinc_q5::numeric(15,2)/nullif(assets_q5::numeric(15,2),0.00) growing_netinc_4q_q
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
  -- and dateindex in (16465,16555)
) sq group by cube(sq.start_date, growing_netinc_4q_q);
-- NEVER FINISHES

explain
select 
      to_timestamp(dateindex*3600*24)::date start_date 
    , ticker 
    , netinc_q1::numeric(15,2)/nullif(assets_q1::numeric(15,2),0.00) > netinc_q2::numeric(15,2)/nullif(assets_q2::numeric(15,2),0.00) and 
      netinc_q2::numeric(15,2)/nullif(assets_q2::numeric(15,2),0.00) > netinc_q3::numeric(15,2)/nullif(assets_q3::numeric(15,2),0.00) and 
      netinc_q3::numeric(15,2)/nullif(assets_q3::numeric(15,2),0.00) > netinc_q4::numeric(15,2)/nullif(assets_q4::numeric(15,2),0.00) and 
      netinc_q4::numeric(15,2)/nullif(assets_q4::numeric(15,2),0.00) > netinc_q5::numeric(15,2)/nullif(assets_q5::numeric(15,2),0.00) growing_netinc_4q_q
    , w52_pradchg_52w_ann
    , w26_pradchg_26w_ann
    , w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- Index Scan 269,000

explain
select count(1)
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- Index Only Scan - 10,000

select count(1)
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- 3 SECONDS


explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- Index Scan 248,000

analyze sipro_data_store.si_finecon 
-- Query returned successfully with no result in 02:46 minutes.


explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- Index Scan 252,000





-- Index: sipro_data_store.si_finecon_jamesos_partial_idx

DROP INDEX sipro_data_store.si_finecon_jamesos_partial_idx;

CREATE INDEX si_finecon_jamesos_partial_idx
  ON sipro_data_store.si_finecon
  USING btree
  (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

-- Query returned successfully with no result in 01:59 minutes.

--- - Index: sipro_data_store.si_finecon_jamesos_partial_17044_idx
-- 
-- DROP INDEX sipro_data_store.si_finecon_jamesos_partial_17044_idx;
-- 
-- CREATE INDEX si_finecon_jamesos_partial_17044_idx
--   ON sipro_data_store.si_finecon
--   USING btree
--   (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
--   WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text])) AND dateindex = 17044;
-- 


explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- Index Scan 249,000

select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- FOREVER

explain
select count(1)
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])

"QUERY PLAN"
"Aggregate  (cost=7680.25..7680.26 rows=1 width=0)"
"  ->  Index Only Scan using si_finecon_jamesos_partial_idx on si_finecon  (cost=0.42..7390.29 rows=115985 width=0)"
"        Index Cond: ((adr = false) AND (company_id_unq IS NOT NULL))"



select count(1) -- 233678 records
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- 3/0.3 SECONDS


explain analyze
select count(1)
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- Index Only Scan

"QUERY PLAN"
"Aggregate  (cost=7680.25..7680.26 rows=1 width=0) (actual time=255.857..255.857 rows=1 loops=1)"
"  ->  Index Only Scan using si_finecon_jamesos_partial_idx on si_finecon  (cost=0.42..7390.29 rows=115985 width=0) (actual time=0.056..221.061 rows=233678 loops=1)"
"        Index Cond: ((adr = false) AND (company_id_unq IS NOT NULL))"
"        Heap Fetches: 0"
"Planning time: 1.478 ms"
"Execution time: 255.928 ms"


explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- Index Scan 249,000

"QUERY PLAN"
"Index Scan using si_finecon_jamesos_partial_idx on si_finecon  (cost=0.42..249425.09 rows=115985 width=8)"
"  Index Cond: ((adr = false) AND (company_id_unq IS NOT NULL))"


explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon

"QUERY PLAN"
"Seq Scan on si_finecon  (cost=0.00..430021.76 rows=593376 width=8)"


select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon
-- 36 SECONDS

explain analyze
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon

"QUERY PLAN"
"Seq Scan on si_finecon  (cost=0.00..430021.76 rows=593376 width=8) (actual time=40.116..37830.179 rows=593376 loops=1)"
"Planning time: 0.265 ms"
"Execution time: 37893.642 ms"


-- Index: sipro_data_store.si_finecon_jamesos_partial_idx

DROP INDEX sipro_data_store.si_finecon_jamesos_partial_idx;
-- Query returned successfully with no result in 390 msec.

-- CREATE INDEX si_finecon_jamesos_partial_idx
--   ON sipro_data_store.si_finecon
--   USING btree
--   (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
--   WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));


explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])

"QUERY PLAN"
"Seq Scan on si_finecon  (cost=0.00..441147.56 rows=115985 width=8)"
"  Filter: ((NOT adr) AND (company_id_unq IS NOT NULL) AND (exchange <> 'O'::text) AND (company !~~ ANY ('{%iShares%,%Vanguard%,SPDR,%PowerShares%,%Fund%}'::text[])) AND ((mktcap)::numeric(15,2) >= 200.00))"


select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- 53 SECONDS

explain analyze
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])


"QUERY PLAN"
"Seq Scan on si_finecon  (cost=0.00..441147.56 rows=115985 width=8) (actual time=35.995..62581.471 rows=233678 loops=1)"
"  Filter: ((NOT adr) AND (company_id_unq IS NOT NULL) AND (exchange <> 'O'::text) AND (company !~~ ANY ('{%iShares%,%Vanguard%,SPDR,%PowerShares%,%Fund%}'::text[])) AND ((mktcap)::numeric(15,2) >= 200.00))"
"  Rows Removed by Filter: 359698"
"Planning time: 0.853 ms"
"Execution time: 62636.489 ms"  -- 62 SECONDS


-- Index: sipro_data_store.si_finecon_jamesos_partial_idx

-- DROP INDEX sipro_data_store.si_finecon_jamesos_partial_idx;
-- Query returned successfully with no result in 390 msec.

CREATE INDEX si_finecon_jamesos_partial_idx
  ON sipro_data_store.si_finecon
  USING btree
  (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));
-- Query returned successfully with no result in 44.9 secs.

explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])

"QUERY PLAN"
"Index Scan using si_finecon_jamesos_partial_idx on si_finecon  (cost=0.42..249425.09 rows=115985 width=8)"
"  Index Cond: ((adr = false) AND (company_id_unq IS NOT NULL))"

select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  where adr = 'f' and exchange != 'O' and mktcap::numeric(15,2) >= 200.00 and company_id_unq is not null and company !~~ any(array['%iShares%','%Vanguard%','SPDR','%PowerShares%','%Fund%'])
-- IF GREATER THAN 62 SECONDS - IT WRONGLY CHOSE THE INDEX ( OR RIGHTLY CHOSE A 'BAD INDEX' )
-- STOP ... OVER 2 MINUTES

-- https://www.postgresql.org/docs/9.5/static/indexes-examine.html
-- 11.11. Examining Index Usage ... REALLY LOUSY ...

-- exactly the index text

explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

"QUERY PLAN"
"Index Scan using si_finecon_jamesos_partial_idx on si_finecon  (cost=0.42..249425.09 rows=115985 width=8)"
"  Index Cond: ((adr = false) AND (company_id_unq IS NOT NULL))"

select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));
-- 5 MINUTES + ( NEVER FINISHED )


set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;

-- *IF* this is an 'optimization' problem and 'NOT A *BAD INDEX* problem'
set default_statistics_target to 10000;

analyze sipro_data_store.si_finecon;
-- RUNNING, AFTER THIS IS DONE, THEN TRY TO RERUN THE QUERY AGAIN
-- IF NOT, DROP THE INDEX, WORK WITHOUT IT ... ( ONLY 2-3 TIMES LONGER
-- OR A 'SIMPLER' INDEX THAT STILL ELIMITINATES MUCH DATA
--
--Query returned successfully with no result in 43:40 minutes.
-- DONE

explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

"QUERY PLAN"
"Index Scan using si_finecon_jamesos_partial_idx on si_finecon  (cost=0.42..248715.35 rows=115581 width=8)"
"  Index Cond: ((adr = false) AND (company_id_unq IS NOT NULL))"

select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));
-- 8 MINUTES and STILL NOT FINISHED



-- Index: sipro_data_store.si_finecon_jamesos_partial_idx

DROP INDEX sipro_data_store.si_finecon_jamesos_partial_idx;
-- Query returned successfully with no result in 390 msec.

-- CREATE INDEX si_finecon_jamesos_partial_idx
--   ON sipro_data_store.si_finecon
--   USING btree
--   (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
--   WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
--   AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));



select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));
-- ONE minues


CREATE INDEX si_finecon_jamesos_partial_idx_2
  ON sipro_data_store.si_finecon
  USING btree
  (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
  WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));
-- default_statistics_target to 10000; -- Query returned successfully with no result in 42.4 secs.

explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));




select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));
-- 51 SECONDS

set search_path to sipro_data_store,sipro_stage;
set time zone 'utc';
set work_mem to '1200MB';
set constraint_exclusion = on;



-- Index: sipro_data_store.si_finecon_jamesos_partial_17044_idx

DROP INDEX sipro_data_store.si_finecon_jamesos_partial_17044_idx;

-- CREATE INDEX si_finecon_jamesos_partial_17044_idx
--   ON sipro_data_store.si_finecon
--   USING btree
--   (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
--   WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text])) AND dateindex = 17044;

-- Index: sipro_data_store.si_finecon_jamesos_partial_idx_2

DROP INDEX sipro_data_store.si_finecon_jamesos_partial_idx_2;

-- CREATE INDEX si_finecon_jamesos_partial_idx_2
--   ON sipro_data_store.si_finecon
--   USING btree
--   (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
--   WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));


explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

"QUERY PLAN"
"Seq Scan on si_finecon  (cost=0.00..444114.44 rows=612 width=8)"
"  Filter: ((company_id_unq IS NOT NULL) AND (exchange <> 'O'::text) AND ((adr)::integer = 0) AND (company !~~ ANY ('{%iShares%,%Vanguard%,SPDR,%PowerShares%,%Fund%}'::text[])) AND ((mktcap)::numeric(15,2) >= 200.00))"


select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));
--120/35/34 SECONDS


-- DROP INDEX si_finecon_adr_exchange
CREATE INDEX si_finecon_adr_exchange
  ON sipro_data_store.si_finecon
  USING btree
  (adr,exchange)



CREATE INDEX si_finecon_clobber
  ON sipro_data_store.si_finecon
  USING btree
  (adr,exchange,company_id_unq,company,company_id_unq,mktcap)

-- STILL WILL NOT USE AN INDEX
explain
select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

select
      w13_pradchg_13w_ann
  from sipro_data_store.si_finecon 
  WHERE adr = 'false' AND

CREATE INDEX si_finecon_adr
  ON sipro_data_store.si_finecon
  USING btree
  (adr)

CREATE INDEX si_finecon_company_id_unq
  ON sipro_data_store.si_finecon
  USING btree
  (company_id_unq)

CREATE INDEX si_finecon_company_id
  ON sipro_data_store.si_finecon
  USING btree
  (company_id)

CREATE INDEX si_finecon_mktcap
  ON sipro_data_store.si_finecon
  USING btree
  (mktcap)




CREATE INDEX si_finecon_adr
  ON sipro_data_store.si_finecon
  USING btree
  (adr)

select count(1) from sipro_data_store.si_finecon where adr = 'f';

 count
--------
 551573
(1 row)

select count(1) from sipro_data_store.si_finecon where adr = 't';

 count
-------
 33364
(1 row)

select count(1) from sipro_data_store.si_finecon;

 count
--------
 593376
(1 row)

vacuum analyze sipro_data_store.si_finecon;

show enable_indexonlyscan;
set enable_indexonlyscan to off;

show enable_seqscan;
set enable_seqscan to off;

explain
select count(1) from sipro_data_store.si_finecon;

"QUERY PLAN"
"Aggregate  (cost=10000431505.20..10000431505.21 rows=1 width=0)"
"  ->  Seq Scan on si_finecon  (cost=10000000000.00..10000430021.76 rows=593376 width=0)"

show enable_indexonlyscan;
set enable_indexonlyscan to on;

show enable_seqscan;
set enable_seqscan to on;

explain
select count(exchange) from sipro_data_store.si_finecon where exchange = 'N';

explain
select exchange,adr from sipro_data_store.si_finecon where exchange = 'N';

explain
select
      adr
  from sipro_data_store.si_finecon 
  WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

explain
select
      adr, ticker
  from sipro_data_store.si_finecon 
  WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

"QUERY PLAN"
"  Filter: ((company_id_unq IS NOT NULL) AND (exchange <> 'O'::text) AND ((adr)::integer = 0) AND (company !~~ ANY ('{%iShares%,%Vanguard%,SPDR,%PowerShares%,%Fund%}'::text[])) AND ((mktcap)::numeric(15,2) >= 200.00))"


DROP INDEX si_finecon_clobber;

CREATE INDEX si_finecon_clobber
  ON sipro_data_store.si_finecon
  USING btree
  (adr,exchange,company_id_unq,company,company_id_unq,mktcap);

CLUSTER VERBOSE si_finecon USING si_finecon_clobber;  -- LEFT_RUNNING ( LEFT_OFF )
-- Query returned successfully with no result in 01:17:3610 hours.

DROP INDEX sipro_data_store.si_finecon_jamesos_partial_idx;

CREATE INDEX si_finecon_jamesos_partial_idx
  ON sipro_data_store.si_finecon
  USING btree
  (adr, exchange COLLATE pg_catalog."default", mktcap COLLATE pg_catalog."default", company_id_unq COLLATE pg_catalog."default", company COLLATE pg_catalog."default")
  WHERE adr = false AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));
-- Query returned successfully with no result in 44.9 secs.

VACUUM ANALYZE sipro_data_store.si_finecon;
-- Query returned successfully with no result in 01:11 minutes.

explain
select
      adr, ticker
  from sipro_data_store.si_finecon 
  WHERE adr::integer = 0 AND exchange <> 'O'::text AND mktcap::numeric(15,2) >= 200.00 
  AND company_id_unq IS NOT NULL AND (company !~~ ANY (ARRAY['%iShares%'::text, '%Vanguard%'::text, 'SPDR'::text, '%PowerShares%'::text, '%Fund%'::text]));

"QUERY PLAN"
"Seq Scan on si_finecon  (cost=0.00..243086.44 rows=613 width=5)"
"  Filter: ((company_id_unq IS NOT NULL) AND (exchange <> 'O'::text) AND ((adr)::integer = 0) AND (company !~~ ANY ('{%iShares%,%Vanguard%,SPDR,%PowerShares%,%Fund%}'::text[])) AND ((mktcap)::numeric(15,2) >= 200.00))"
-- STILL NO EFFECT ( LEFT_OFF )





